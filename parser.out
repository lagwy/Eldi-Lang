Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> variables_list metodos
Rule 2     variables_list -> variables_list variables
Rule 3     variables_list -> empty
Rule 4     variables -> VAR tipo ID lista_variables SEMICOLON
Rule 5     variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
Rule 6     lista_variables -> COMMA ID lista_variables
Rule 7     lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
Rule 8     lista_variables -> empty
Rule 9     metodos -> metodos metodo
Rule 10    metodos -> empty
Rule 11    metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
Rule 12    metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
Rule 13    metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
Rule 14    params -> params parametro
Rule 15    params -> params COMMA parametro
Rule 16    params -> empty
Rule 17    parametro -> tipo ID
Rule 18    bloque -> bloque estatuto
Rule 19    bloque -> empty
Rule 20    estatuto -> condicion
Rule 21    estatuto -> ciclo
Rule 22    estatuto -> return
Rule 23    estatuto -> lectura
Rule 24    estatuto -> escritura
Rule 25    estatuto -> llamada SEMICOLON
Rule 26    estatuto -> asignacion
Rule 27    return -> RETURN return1 SEMICOLON
Rule 28    return1 -> exp
Rule 29    lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON
Rule 30    escritura -> PRINT LEFTP exp RIGHTP SEMICOLON
Rule 31    llamada -> llamada1 LEFTP args RIGHTP
Rule 32    llamada1 -> ID
Rule 33    args -> exp
Rule 34    args -> args COMMA exp
Rule 35    args -> empty
Rule 36    asignacion -> ID ASSIGN exp SEMICOLON
Rule 37    asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
Rule 38    ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
Rule 39    ciclo1 -> <empty>
Rule 40    ciclo2 -> <empty>
Rule 41    condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
Rule 42    condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
Rule 43    condicion1 -> exp
Rule 44    condicion2 -> <empty>
Rule 45    condicion3 -> <empty>
Rule 46    exp -> llamada exp1
Rule 47    exp -> expresion exp2
Rule 48    exp1 -> <empty>
Rule 49    exp2 -> <empty>
Rule 50    expresion -> expresion TIMES expresion
Rule 51    expresion -> expresion DIVISION expresion
Rule 52    expresion -> expresion SUM expresion
Rule 53    expresion -> expresion LESS expresion
Rule 54    expresion -> expresion EQUALS expresion
Rule 55    expresion -> expresion NOTEQUAL expresion
Rule 56    expresion -> expresion GREATEREQUAL expresion
Rule 57    expresion -> expresion GREATERTHAN expresion
Rule 58    expresion -> expresion LESSTHAN expresion
Rule 59    expresion -> expresion LESSEQUAL expresion
Rule 60    expresion -> expresion AND expresion
Rule 61    expresion -> expresion OR expresion
Rule 62    expresion -> constante
Rule 63    expresion -> ID
Rule 64    expresion -> LEFTP expresion RIGHTP
Rule 65    tipo -> INT
Rule 66    tipo -> CHAR
Rule 67    tipo -> BOOLEAN
Rule 68    tipo -> FLOAT
Rule 69    tipo -> STRING
Rule 70    constante -> FLOAT_CTE
Rule 71    constante -> INT_CTE
Rule 72    constante -> CHAR_CTE
Rule 73    constante -> STRING_CTE
Rule 74    constante -> TRUE
Rule 75    constante -> FALSE
Rule 76    empty -> <empty>

Terminals, with rules where they appear

AND                  : 60
ASSIGN               : 29 36 37
BOOLEAN              : 67
CHAR                 : 66
CHAR_CTE             : 72
COMMA                : 6 7 15 34
DIVISION             : 51
ELSE                 : 42
EQUALS               : 54
FALSE                : 75
FLOAT                : 68
FLOAT_CTE            : 70
GREATEREQUAL         : 56
GREATERTHAN          : 57
ID                   : 4 5 6 7 12 13 17 29 32 36 37 63
IF                   : 41 42
INT                  : 65
INT_CTE              : 5 7 71
LEFTB                : 11 12 13 38 41 42 42
LEFTP                : 11 12 13 29 30 31 38 41 42 64
LEFTSB               : 5 7 37
LESS                 : 53
LESSEQUAL            : 59
LESSTHAN             : 58
MAIN                 : 11
METHOD               : 11 12 13
NOTEQUAL             : 55
OR                   : 61
PRINT                : 30
READ                 : 29
RETURN               : 27
RIGHTB               : 11 12 13 38 41 42 42
RIGHTP               : 11 12 13 29 30 31 38 41 42 64
RIGHTSB              : 5 7 37
SEMICOLON            : 4 5 25 27 29 30 36 37
STRING               : 69
STRING_CTE           : 73
SUM                  : 52
TIMES                : 50
TRUE                 : 74
VAR                  : 4 5
VOID                 : 11 12
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

args                 : 31 34
asignacion           : 26
bloque               : 11 12 13 18 38 41 42 42
ciclo                : 21
ciclo1               : 38
ciclo2               : 38
condicion            : 20
condicion1           : 41 42
condicion2           : 41 42
condicion3           : 42
constante            : 62
empty                : 3 8 10 16 19 35
escritura            : 24
estatuto             : 18
exp                  : 28 30 33 34 36 37 37 38 43
exp1                 : 46
exp2                 : 47
expresion            : 47 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 64
lectura              : 23
lista_variables      : 4 5 6 7
llamada              : 25 46
llamada1             : 31
metodo               : 9
metodos              : 1 9
parametro            : 14 15
params               : 11 12 13 14 15
programa             : 0
return               : 22
return1              : 27
tipo                 : 4 5 13 17
variables            : 2
variables_list       : 1 2 11 12 13

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . variables_list metodos
    (2) variables_list -> . variables_list variables
    (3) variables_list -> . empty
    (76) empty -> .

    VAR             reduce using rule 76 (empty -> .)
    METHOD          reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)

    variables_list                 shift and go to state 1
    programa                       shift and go to state 2
    empty                          shift and go to state 3

state 1

    (1) programa -> variables_list . metodos
    (2) variables_list -> variables_list . variables
    (9) metodos -> . metodos metodo
    (10) metodos -> . empty
    (4) variables -> . VAR tipo ID lista_variables SEMICOLON
    (5) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (76) empty -> .

    VAR             shift and go to state 6
    METHOD          reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)

    variables                      shift and go to state 4
    metodos                        shift and go to state 5
    empty                          shift and go to state 7

state 2

    (0) S' -> programa .



state 3

    (3) variables_list -> empty .

    VAR             reduce using rule 3 (variables_list -> empty .)
    RIGHTB          reduce using rule 3 (variables_list -> empty .)
    IF              reduce using rule 3 (variables_list -> empty .)
    WHILE           reduce using rule 3 (variables_list -> empty .)
    RETURN          reduce using rule 3 (variables_list -> empty .)
    ID              reduce using rule 3 (variables_list -> empty .)
    PRINT           reduce using rule 3 (variables_list -> empty .)
    METHOD          reduce using rule 3 (variables_list -> empty .)
    $end            reduce using rule 3 (variables_list -> empty .)


state 4

    (2) variables_list -> variables_list variables .

    VAR             reduce using rule 2 (variables_list -> variables_list variables .)
    RIGHTB          reduce using rule 2 (variables_list -> variables_list variables .)
    IF              reduce using rule 2 (variables_list -> variables_list variables .)
    WHILE           reduce using rule 2 (variables_list -> variables_list variables .)
    RETURN          reduce using rule 2 (variables_list -> variables_list variables .)
    ID              reduce using rule 2 (variables_list -> variables_list variables .)
    PRINT           reduce using rule 2 (variables_list -> variables_list variables .)
    METHOD          reduce using rule 2 (variables_list -> variables_list variables .)
    $end            reduce using rule 2 (variables_list -> variables_list variables .)


state 5

    (1) programa -> variables_list metodos .
    (9) metodos -> metodos . metodo
    (11) metodo -> . METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
    (12) metodo -> . METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
    (13) metodo -> . METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB

    $end            reduce using rule 1 (programa -> variables_list metodos .)
    METHOD          shift and go to state 9

    metodo                         shift and go to state 8

state 6

    (4) variables -> VAR . tipo ID lista_variables SEMICOLON
    (5) variables -> VAR . tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (65) tipo -> . INT
    (66) tipo -> . CHAR
    (67) tipo -> . BOOLEAN
    (68) tipo -> . FLOAT
    (69) tipo -> . STRING

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    tipo                           shift and go to state 11

state 7

    (10) metodos -> empty .

    METHOD          reduce using rule 10 (metodos -> empty .)
    $end            reduce using rule 10 (metodos -> empty .)


state 8

    (9) metodos -> metodos metodo .

    METHOD          reduce using rule 9 (metodos -> metodos metodo .)
    $end            reduce using rule 9 (metodos -> metodos metodo .)


state 9

    (11) metodo -> METHOD . VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
    (12) metodo -> METHOD . VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
    (13) metodo -> METHOD . tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
    (65) tipo -> . INT
    (66) tipo -> . CHAR
    (67) tipo -> . BOOLEAN
    (68) tipo -> . FLOAT
    (69) tipo -> . STRING

    VOID            shift and go to state 17
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    tipo                           shift and go to state 16

state 10

    (68) tipo -> FLOAT .

    ID              reduce using rule 68 (tipo -> FLOAT .)


state 11

    (4) variables -> VAR tipo . ID lista_variables SEMICOLON
    (5) variables -> VAR tipo . ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    ID              shift and go to state 18


state 12

    (65) tipo -> INT .

    ID              reduce using rule 65 (tipo -> INT .)


state 13

    (66) tipo -> CHAR .

    ID              reduce using rule 66 (tipo -> CHAR .)


state 14

    (67) tipo -> BOOLEAN .

    ID              reduce using rule 67 (tipo -> BOOLEAN .)


state 15

    (69) tipo -> STRING .

    ID              reduce using rule 69 (tipo -> STRING .)


state 16

    (13) metodo -> METHOD tipo . ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB

    ID              shift and go to state 19


state 17

    (11) metodo -> METHOD VOID . MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB
    (12) metodo -> METHOD VOID . ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB

    MAIN            shift and go to state 21
    ID              shift and go to state 20


state 18

    (4) variables -> VAR tipo ID . lista_variables SEMICOLON
    (5) variables -> VAR tipo ID . LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (6) lista_variables -> . COMMA ID lista_variables
    (7) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (8) lista_variables -> . empty
    (76) empty -> .

    LEFTSB          shift and go to state 22
    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 76 (empty -> .)

    lista_variables                shift and go to state 23
    empty                          shift and go to state 25

state 19

    (13) metodo -> METHOD tipo ID . LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB

    LEFTP           shift and go to state 26


state 20

    (12) metodo -> METHOD VOID ID . LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB

    LEFTP           shift and go to state 27


state 21

    (11) metodo -> METHOD VOID MAIN . LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB

    LEFTP           shift and go to state 28


state 22

    (5) variables -> VAR tipo ID LEFTSB . INT_CTE RIGHTSB lista_variables SEMICOLON

    INT_CTE         shift and go to state 29


state 23

    (4) variables -> VAR tipo ID lista_variables . SEMICOLON

    SEMICOLON       shift and go to state 30


state 24

    (6) lista_variables -> COMMA . ID lista_variables
    (7) lista_variables -> COMMA . ID LEFTSB INT_CTE RIGHTSB lista_variables

    ID              shift and go to state 31


state 25

    (8) lista_variables -> empty .

    SEMICOLON       reduce using rule 8 (lista_variables -> empty .)


state 26

    (13) metodo -> METHOD tipo ID LEFTP . params RIGHTP LEFTB variables_list bloque RIGHTB
    (14) params -> . params parametro
    (15) params -> . params COMMA parametro
    (16) params -> . empty
    (76) empty -> .

    RIGHTP          reduce using rule 76 (empty -> .)
    COMMA           reduce using rule 76 (empty -> .)
    INT             reduce using rule 76 (empty -> .)
    CHAR            reduce using rule 76 (empty -> .)
    BOOLEAN         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    STRING          reduce using rule 76 (empty -> .)

    params                         shift and go to state 32
    empty                          shift and go to state 33

state 27

    (12) metodo -> METHOD VOID ID LEFTP . params RIGHTP LEFTB variables_list bloque RIGHTB
    (14) params -> . params parametro
    (15) params -> . params COMMA parametro
    (16) params -> . empty
    (76) empty -> .

    RIGHTP          reduce using rule 76 (empty -> .)
    COMMA           reduce using rule 76 (empty -> .)
    INT             reduce using rule 76 (empty -> .)
    CHAR            reduce using rule 76 (empty -> .)
    BOOLEAN         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    STRING          reduce using rule 76 (empty -> .)

    params                         shift and go to state 34
    empty                          shift and go to state 33

state 28

    (11) metodo -> METHOD VOID MAIN LEFTP . params RIGHTP LEFTB variables_list bloque RIGHTB
    (14) params -> . params parametro
    (15) params -> . params COMMA parametro
    (16) params -> . empty
    (76) empty -> .

    RIGHTP          reduce using rule 76 (empty -> .)
    COMMA           reduce using rule 76 (empty -> .)
    INT             reduce using rule 76 (empty -> .)
    CHAR            reduce using rule 76 (empty -> .)
    BOOLEAN         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    STRING          reduce using rule 76 (empty -> .)

    params                         shift and go to state 35
    empty                          shift and go to state 33

state 29

    (5) variables -> VAR tipo ID LEFTSB INT_CTE . RIGHTSB lista_variables SEMICOLON

    RIGHTSB         shift and go to state 36


state 30

    (4) variables -> VAR tipo ID lista_variables SEMICOLON .

    VAR             reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    RIGHTB          reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    IF              reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    WHILE           reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    RETURN          reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    ID              reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    PRINT           reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    METHOD          reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    $end            reduce using rule 4 (variables -> VAR tipo ID lista_variables SEMICOLON .)


state 31

    (6) lista_variables -> COMMA ID . lista_variables
    (7) lista_variables -> COMMA ID . LEFTSB INT_CTE RIGHTSB lista_variables
    (6) lista_variables -> . COMMA ID lista_variables
    (7) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (8) lista_variables -> . empty
    (76) empty -> .

    LEFTSB          shift and go to state 37
    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 76 (empty -> .)

    lista_variables                shift and go to state 38
    empty                          shift and go to state 25

state 32

    (13) metodo -> METHOD tipo ID LEFTP params . RIGHTP LEFTB variables_list bloque RIGHTB
    (14) params -> params . parametro
    (15) params -> params . COMMA parametro
    (17) parametro -> . tipo ID
    (65) tipo -> . INT
    (66) tipo -> . CHAR
    (67) tipo -> . BOOLEAN
    (68) tipo -> . FLOAT
    (69) tipo -> . STRING

    RIGHTP          shift and go to state 39
    COMMA           shift and go to state 42
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 41
    tipo                           shift and go to state 40

state 33

    (16) params -> empty .

    RIGHTP          reduce using rule 16 (params -> empty .)
    COMMA           reduce using rule 16 (params -> empty .)
    INT             reduce using rule 16 (params -> empty .)
    CHAR            reduce using rule 16 (params -> empty .)
    BOOLEAN         reduce using rule 16 (params -> empty .)
    FLOAT           reduce using rule 16 (params -> empty .)
    STRING          reduce using rule 16 (params -> empty .)


state 34

    (12) metodo -> METHOD VOID ID LEFTP params . RIGHTP LEFTB variables_list bloque RIGHTB
    (14) params -> params . parametro
    (15) params -> params . COMMA parametro
    (17) parametro -> . tipo ID
    (65) tipo -> . INT
    (66) tipo -> . CHAR
    (67) tipo -> . BOOLEAN
    (68) tipo -> . FLOAT
    (69) tipo -> . STRING

    RIGHTP          shift and go to state 43
    COMMA           shift and go to state 42
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 41
    tipo                           shift and go to state 40

state 35

    (11) metodo -> METHOD VOID MAIN LEFTP params . RIGHTP LEFTB variables_list bloque RIGHTB
    (14) params -> params . parametro
    (15) params -> params . COMMA parametro
    (17) parametro -> . tipo ID
    (65) tipo -> . INT
    (66) tipo -> . CHAR
    (67) tipo -> . BOOLEAN
    (68) tipo -> . FLOAT
    (69) tipo -> . STRING

    RIGHTP          shift and go to state 44
    COMMA           shift and go to state 42
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 41
    tipo                           shift and go to state 40

state 36

    (5) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB . lista_variables SEMICOLON
    (6) lista_variables -> . COMMA ID lista_variables
    (7) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (8) lista_variables -> . empty
    (76) empty -> .

    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 76 (empty -> .)

    lista_variables                shift and go to state 45
    empty                          shift and go to state 25

state 37

    (7) lista_variables -> COMMA ID LEFTSB . INT_CTE RIGHTSB lista_variables

    INT_CTE         shift and go to state 46


state 38

    (6) lista_variables -> COMMA ID lista_variables .

    SEMICOLON       reduce using rule 6 (lista_variables -> COMMA ID lista_variables .)


state 39

    (13) metodo -> METHOD tipo ID LEFTP params RIGHTP . LEFTB variables_list bloque RIGHTB

    LEFTB           shift and go to state 47


state 40

    (17) parametro -> tipo . ID

    ID              shift and go to state 48


state 41

    (14) params -> params parametro .

    RIGHTP          reduce using rule 14 (params -> params parametro .)
    COMMA           reduce using rule 14 (params -> params parametro .)
    INT             reduce using rule 14 (params -> params parametro .)
    CHAR            reduce using rule 14 (params -> params parametro .)
    BOOLEAN         reduce using rule 14 (params -> params parametro .)
    FLOAT           reduce using rule 14 (params -> params parametro .)
    STRING          reduce using rule 14 (params -> params parametro .)


state 42

    (15) params -> params COMMA . parametro
    (17) parametro -> . tipo ID
    (65) tipo -> . INT
    (66) tipo -> . CHAR
    (67) tipo -> . BOOLEAN
    (68) tipo -> . FLOAT
    (69) tipo -> . STRING

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 49
    tipo                           shift and go to state 40

state 43

    (12) metodo -> METHOD VOID ID LEFTP params RIGHTP . LEFTB variables_list bloque RIGHTB

    LEFTB           shift and go to state 50


state 44

    (11) metodo -> METHOD VOID MAIN LEFTP params RIGHTP . LEFTB variables_list bloque RIGHTB

    LEFTB           shift and go to state 51


state 45

    (5) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables . SEMICOLON

    SEMICOLON       shift and go to state 52


state 46

    (7) lista_variables -> COMMA ID LEFTSB INT_CTE . RIGHTSB lista_variables

    RIGHTSB         shift and go to state 53


state 47

    (13) metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB . variables_list bloque RIGHTB
    (2) variables_list -> . variables_list variables
    (3) variables_list -> . empty
    (76) empty -> .

    VAR             reduce using rule 76 (empty -> .)
    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    variables_list                 shift and go to state 54
    empty                          shift and go to state 3

state 48

    (17) parametro -> tipo ID .

    RIGHTP          reduce using rule 17 (parametro -> tipo ID .)
    COMMA           reduce using rule 17 (parametro -> tipo ID .)
    INT             reduce using rule 17 (parametro -> tipo ID .)
    CHAR            reduce using rule 17 (parametro -> tipo ID .)
    BOOLEAN         reduce using rule 17 (parametro -> tipo ID .)
    FLOAT           reduce using rule 17 (parametro -> tipo ID .)
    STRING          reduce using rule 17 (parametro -> tipo ID .)


state 49

    (15) params -> params COMMA parametro .

    RIGHTP          reduce using rule 15 (params -> params COMMA parametro .)
    COMMA           reduce using rule 15 (params -> params COMMA parametro .)
    INT             reduce using rule 15 (params -> params COMMA parametro .)
    CHAR            reduce using rule 15 (params -> params COMMA parametro .)
    BOOLEAN         reduce using rule 15 (params -> params COMMA parametro .)
    FLOAT           reduce using rule 15 (params -> params COMMA parametro .)
    STRING          reduce using rule 15 (params -> params COMMA parametro .)


state 50

    (12) metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB . variables_list bloque RIGHTB
    (2) variables_list -> . variables_list variables
    (3) variables_list -> . empty
    (76) empty -> .

    VAR             reduce using rule 76 (empty -> .)
    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    variables_list                 shift and go to state 55
    empty                          shift and go to state 3

state 51

    (11) metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB . variables_list bloque RIGHTB
    (2) variables_list -> . variables_list variables
    (3) variables_list -> . empty
    (76) empty -> .

    VAR             reduce using rule 76 (empty -> .)
    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    variables_list                 shift and go to state 56
    empty                          shift and go to state 3

state 52

    (5) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .

    VAR             reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    RIGHTB          reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    IF              reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    WHILE           reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    RETURN          reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    ID              reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    PRINT           reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    METHOD          reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    $end            reduce using rule 5 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)


state 53

    (7) lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB . lista_variables
    (6) lista_variables -> . COMMA ID lista_variables
    (7) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (8) lista_variables -> . empty
    (76) empty -> .

    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 76 (empty -> .)

    lista_variables                shift and go to state 57
    empty                          shift and go to state 25

state 54

    (13) metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list . bloque RIGHTB
    (2) variables_list -> variables_list . variables
    (18) bloque -> . bloque estatuto
    (19) bloque -> . empty
    (4) variables -> . VAR tipo ID lista_variables SEMICOLON
    (5) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (76) empty -> .

    VAR             shift and go to state 6
    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    variables                      shift and go to state 4
    bloque                         shift and go to state 58
    empty                          shift and go to state 59

state 55

    (12) metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list . bloque RIGHTB
    (2) variables_list -> variables_list . variables
    (18) bloque -> . bloque estatuto
    (19) bloque -> . empty
    (4) variables -> . VAR tipo ID lista_variables SEMICOLON
    (5) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (76) empty -> .

    VAR             shift and go to state 6
    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    variables                      shift and go to state 4
    bloque                         shift and go to state 60
    empty                          shift and go to state 59

state 56

    (11) metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list . bloque RIGHTB
    (2) variables_list -> variables_list . variables
    (18) bloque -> . bloque estatuto
    (19) bloque -> . empty
    (4) variables -> . VAR tipo ID lista_variables SEMICOLON
    (5) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (76) empty -> .

    VAR             shift and go to state 6
    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    variables                      shift and go to state 4
    bloque                         shift and go to state 61
    empty                          shift and go to state 59

state 57

    (7) lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables .

    SEMICOLON       reduce using rule 7 (lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables .)


state 58

    (13) metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque . RIGHTB
    (18) bloque -> bloque . estatuto
    (20) estatuto -> . condicion
    (21) estatuto -> . ciclo
    (22) estatuto -> . return
    (23) estatuto -> . lectura
    (24) estatuto -> . escritura
    (25) estatuto -> . llamada SEMICOLON
    (26) estatuto -> . asignacion
    (41) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (38) ciclo -> . WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (27) return -> . RETURN return1 SEMICOLON
    (29) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (30) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (36) asignacion -> . ID ASSIGN exp SEMICOLON
    (37) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> . ID

    RIGHTB          shift and go to state 75
    IF              shift and go to state 73
    WHILE           shift and go to state 63
    RETURN          shift and go to state 62
    ID              shift and go to state 72
    PRINT           shift and go to state 64

    llamada1                       shift and go to state 65
    return                         shift and go to state 71
    ciclo                          shift and go to state 66
    estatuto                       shift and go to state 67
    llamada                        shift and go to state 68
    condicion                      shift and go to state 69
    asignacion                     shift and go to state 74
    lectura                        shift and go to state 70
    escritura                      shift and go to state 76

state 59

    (19) bloque -> empty .

    IF              reduce using rule 19 (bloque -> empty .)
    WHILE           reduce using rule 19 (bloque -> empty .)
    RETURN          reduce using rule 19 (bloque -> empty .)
    ID              reduce using rule 19 (bloque -> empty .)
    PRINT           reduce using rule 19 (bloque -> empty .)
    RIGHTB          reduce using rule 19 (bloque -> empty .)


state 60

    (12) metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque . RIGHTB
    (18) bloque -> bloque . estatuto
    (20) estatuto -> . condicion
    (21) estatuto -> . ciclo
    (22) estatuto -> . return
    (23) estatuto -> . lectura
    (24) estatuto -> . escritura
    (25) estatuto -> . llamada SEMICOLON
    (26) estatuto -> . asignacion
    (41) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (38) ciclo -> . WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (27) return -> . RETURN return1 SEMICOLON
    (29) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (30) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (36) asignacion -> . ID ASSIGN exp SEMICOLON
    (37) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> . ID

    RIGHTB          shift and go to state 77
    IF              shift and go to state 73
    WHILE           shift and go to state 63
    RETURN          shift and go to state 62
    ID              shift and go to state 72
    PRINT           shift and go to state 64

    llamada1                       shift and go to state 65
    return                         shift and go to state 71
    ciclo                          shift and go to state 66
    asignacion                     shift and go to state 74
    estatuto                       shift and go to state 67
    llamada                        shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 76

state 61

    (11) metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque . RIGHTB
    (18) bloque -> bloque . estatuto
    (20) estatuto -> . condicion
    (21) estatuto -> . ciclo
    (22) estatuto -> . return
    (23) estatuto -> . lectura
    (24) estatuto -> . escritura
    (25) estatuto -> . llamada SEMICOLON
    (26) estatuto -> . asignacion
    (41) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (38) ciclo -> . WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (27) return -> . RETURN return1 SEMICOLON
    (29) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (30) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (36) asignacion -> . ID ASSIGN exp SEMICOLON
    (37) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> . ID

    RIGHTB          shift and go to state 78
    IF              shift and go to state 73
    WHILE           shift and go to state 63
    RETURN          shift and go to state 62
    ID              shift and go to state 72
    PRINT           shift and go to state 64

    llamada1                       shift and go to state 65
    return                         shift and go to state 71
    ciclo                          shift and go to state 66
    asignacion                     shift and go to state 74
    estatuto                       shift and go to state 67
    llamada                        shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 76

state 62

    (27) return -> RETURN . return1 SEMICOLON
    (28) return1 -> . exp
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    return1                        shift and go to state 90
    llamada                        shift and go to state 81
    exp                            shift and go to state 91
    llamada1                       shift and go to state 65

state 63

    (38) ciclo -> WHILE . ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (39) ciclo1 -> .

    LEFTP           reduce using rule 39 (ciclo1 -> .)

    ciclo1                         shift and go to state 92

state 64

    (30) escritura -> PRINT . LEFTP exp RIGHTP SEMICOLON

    LEFTP           shift and go to state 93


state 65

    (31) llamada -> llamada1 . LEFTP args RIGHTP

    LEFTP           shift and go to state 94


state 66

    (21) estatuto -> ciclo .

    RIGHTB          reduce using rule 21 (estatuto -> ciclo .)
    IF              reduce using rule 21 (estatuto -> ciclo .)
    WHILE           reduce using rule 21 (estatuto -> ciclo .)
    RETURN          reduce using rule 21 (estatuto -> ciclo .)
    ID              reduce using rule 21 (estatuto -> ciclo .)
    PRINT           reduce using rule 21 (estatuto -> ciclo .)


state 67

    (18) bloque -> bloque estatuto .

    IF              reduce using rule 18 (bloque -> bloque estatuto .)
    WHILE           reduce using rule 18 (bloque -> bloque estatuto .)
    RETURN          reduce using rule 18 (bloque -> bloque estatuto .)
    ID              reduce using rule 18 (bloque -> bloque estatuto .)
    PRINT           reduce using rule 18 (bloque -> bloque estatuto .)
    RIGHTB          reduce using rule 18 (bloque -> bloque estatuto .)


state 68

    (25) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 95


state 69

    (20) estatuto -> condicion .

    RIGHTB          reduce using rule 20 (estatuto -> condicion .)
    IF              reduce using rule 20 (estatuto -> condicion .)
    WHILE           reduce using rule 20 (estatuto -> condicion .)
    RETURN          reduce using rule 20 (estatuto -> condicion .)
    ID              reduce using rule 20 (estatuto -> condicion .)
    PRINT           reduce using rule 20 (estatuto -> condicion .)


state 70

    (23) estatuto -> lectura .

    RIGHTB          reduce using rule 23 (estatuto -> lectura .)
    IF              reduce using rule 23 (estatuto -> lectura .)
    WHILE           reduce using rule 23 (estatuto -> lectura .)
    RETURN          reduce using rule 23 (estatuto -> lectura .)
    ID              reduce using rule 23 (estatuto -> lectura .)
    PRINT           reduce using rule 23 (estatuto -> lectura .)


state 71

    (22) estatuto -> return .

    RIGHTB          reduce using rule 22 (estatuto -> return .)
    IF              reduce using rule 22 (estatuto -> return .)
    WHILE           reduce using rule 22 (estatuto -> return .)
    RETURN          reduce using rule 22 (estatuto -> return .)
    ID              reduce using rule 22 (estatuto -> return .)
    PRINT           reduce using rule 22 (estatuto -> return .)


state 72

    (29) lectura -> ID . ASSIGN READ LEFTP RIGHTP SEMICOLON
    (36) asignacion -> ID . ASSIGN exp SEMICOLON
    (37) asignacion -> ID . LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> ID .

    ASSIGN          shift and go to state 97
    LEFTSB          shift and go to state 96
    LEFTP           reduce using rule 32 (llamada1 -> ID .)


state 73

    (41) condicion -> IF . LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> IF . LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    LEFTP           shift and go to state 98


state 74

    (26) estatuto -> asignacion .

    RIGHTB          reduce using rule 26 (estatuto -> asignacion .)
    IF              reduce using rule 26 (estatuto -> asignacion .)
    WHILE           reduce using rule 26 (estatuto -> asignacion .)
    RETURN          reduce using rule 26 (estatuto -> asignacion .)
    ID              reduce using rule 26 (estatuto -> asignacion .)
    PRINT           reduce using rule 26 (estatuto -> asignacion .)


state 75

    (13) metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .

    METHOD          reduce using rule 13 (metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .)
    $end            reduce using rule 13 (metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .)


state 76

    (24) estatuto -> escritura .

    RIGHTB          reduce using rule 24 (estatuto -> escritura .)
    IF              reduce using rule 24 (estatuto -> escritura .)
    WHILE           reduce using rule 24 (estatuto -> escritura .)
    RETURN          reduce using rule 24 (estatuto -> escritura .)
    ID              reduce using rule 24 (estatuto -> escritura .)
    PRINT           reduce using rule 24 (estatuto -> escritura .)


state 77

    (12) metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .

    METHOD          reduce using rule 12 (metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .)
    $end            reduce using rule 12 (metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .)


state 78

    (11) metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .

    METHOD          reduce using rule 11 (metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .)
    $end            reduce using rule 11 (metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB .)


state 79

    (74) constante -> TRUE .

    TIMES           reduce using rule 74 (constante -> TRUE .)
    DIVISION        reduce using rule 74 (constante -> TRUE .)
    SUM             reduce using rule 74 (constante -> TRUE .)
    LESS            reduce using rule 74 (constante -> TRUE .)
    EQUALS          reduce using rule 74 (constante -> TRUE .)
    NOTEQUAL        reduce using rule 74 (constante -> TRUE .)
    GREATEREQUAL    reduce using rule 74 (constante -> TRUE .)
    GREATERTHAN     reduce using rule 74 (constante -> TRUE .)
    LESSTHAN        reduce using rule 74 (constante -> TRUE .)
    LESSEQUAL       reduce using rule 74 (constante -> TRUE .)
    AND             reduce using rule 74 (constante -> TRUE .)
    OR              reduce using rule 74 (constante -> TRUE .)
    SEMICOLON       reduce using rule 74 (constante -> TRUE .)
    RIGHTP          reduce using rule 74 (constante -> TRUE .)
    COMMA           reduce using rule 74 (constante -> TRUE .)
    RIGHTSB         reduce using rule 74 (constante -> TRUE .)


state 80

    (64) expresion -> LEFTP . expresion RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 100
    constante                      shift and go to state 84

state 81

    (46) exp -> llamada . exp1
    (48) exp1 -> .

    SEMICOLON       reduce using rule 48 (exp1 -> .)
    RIGHTP          reduce using rule 48 (exp1 -> .)
    COMMA           reduce using rule 48 (exp1 -> .)
    RIGHTSB         reduce using rule 48 (exp1 -> .)

    exp1                           shift and go to state 101

state 82

    (72) constante -> CHAR_CTE .

    TIMES           reduce using rule 72 (constante -> CHAR_CTE .)
    DIVISION        reduce using rule 72 (constante -> CHAR_CTE .)
    SUM             reduce using rule 72 (constante -> CHAR_CTE .)
    LESS            reduce using rule 72 (constante -> CHAR_CTE .)
    EQUALS          reduce using rule 72 (constante -> CHAR_CTE .)
    NOTEQUAL        reduce using rule 72 (constante -> CHAR_CTE .)
    GREATEREQUAL    reduce using rule 72 (constante -> CHAR_CTE .)
    GREATERTHAN     reduce using rule 72 (constante -> CHAR_CTE .)
    LESSTHAN        reduce using rule 72 (constante -> CHAR_CTE .)
    LESSEQUAL       reduce using rule 72 (constante -> CHAR_CTE .)
    AND             reduce using rule 72 (constante -> CHAR_CTE .)
    OR              reduce using rule 72 (constante -> CHAR_CTE .)
    SEMICOLON       reduce using rule 72 (constante -> CHAR_CTE .)
    RIGHTP          reduce using rule 72 (constante -> CHAR_CTE .)
    COMMA           reduce using rule 72 (constante -> CHAR_CTE .)
    RIGHTSB         reduce using rule 72 (constante -> CHAR_CTE .)


state 83

    (73) constante -> STRING_CTE .

    TIMES           reduce using rule 73 (constante -> STRING_CTE .)
    DIVISION        reduce using rule 73 (constante -> STRING_CTE .)
    SUM             reduce using rule 73 (constante -> STRING_CTE .)
    LESS            reduce using rule 73 (constante -> STRING_CTE .)
    EQUALS          reduce using rule 73 (constante -> STRING_CTE .)
    NOTEQUAL        reduce using rule 73 (constante -> STRING_CTE .)
    GREATEREQUAL    reduce using rule 73 (constante -> STRING_CTE .)
    GREATERTHAN     reduce using rule 73 (constante -> STRING_CTE .)
    LESSTHAN        reduce using rule 73 (constante -> STRING_CTE .)
    LESSEQUAL       reduce using rule 73 (constante -> STRING_CTE .)
    AND             reduce using rule 73 (constante -> STRING_CTE .)
    OR              reduce using rule 73 (constante -> STRING_CTE .)
    SEMICOLON       reduce using rule 73 (constante -> STRING_CTE .)
    RIGHTP          reduce using rule 73 (constante -> STRING_CTE .)
    COMMA           reduce using rule 73 (constante -> STRING_CTE .)
    RIGHTSB         reduce using rule 73 (constante -> STRING_CTE .)


state 84

    (62) expresion -> constante .

    TIMES           reduce using rule 62 (expresion -> constante .)
    DIVISION        reduce using rule 62 (expresion -> constante .)
    SUM             reduce using rule 62 (expresion -> constante .)
    LESS            reduce using rule 62 (expresion -> constante .)
    EQUALS          reduce using rule 62 (expresion -> constante .)
    NOTEQUAL        reduce using rule 62 (expresion -> constante .)
    GREATEREQUAL    reduce using rule 62 (expresion -> constante .)
    GREATERTHAN     reduce using rule 62 (expresion -> constante .)
    LESSTHAN        reduce using rule 62 (expresion -> constante .)
    LESSEQUAL       reduce using rule 62 (expresion -> constante .)
    AND             reduce using rule 62 (expresion -> constante .)
    OR              reduce using rule 62 (expresion -> constante .)
    SEMICOLON       reduce using rule 62 (expresion -> constante .)
    RIGHTP          reduce using rule 62 (expresion -> constante .)
    COMMA           reduce using rule 62 (expresion -> constante .)
    RIGHTSB         reduce using rule 62 (expresion -> constante .)


state 85

    (75) constante -> FALSE .

    TIMES           reduce using rule 75 (constante -> FALSE .)
    DIVISION        reduce using rule 75 (constante -> FALSE .)
    SUM             reduce using rule 75 (constante -> FALSE .)
    LESS            reduce using rule 75 (constante -> FALSE .)
    EQUALS          reduce using rule 75 (constante -> FALSE .)
    NOTEQUAL        reduce using rule 75 (constante -> FALSE .)
    GREATEREQUAL    reduce using rule 75 (constante -> FALSE .)
    GREATERTHAN     reduce using rule 75 (constante -> FALSE .)
    LESSTHAN        reduce using rule 75 (constante -> FALSE .)
    LESSEQUAL       reduce using rule 75 (constante -> FALSE .)
    AND             reduce using rule 75 (constante -> FALSE .)
    OR              reduce using rule 75 (constante -> FALSE .)
    SEMICOLON       reduce using rule 75 (constante -> FALSE .)
    RIGHTP          reduce using rule 75 (constante -> FALSE .)
    COMMA           reduce using rule 75 (constante -> FALSE .)
    RIGHTSB         reduce using rule 75 (constante -> FALSE .)


state 86

    (63) expresion -> ID .
    (32) llamada1 -> ID .

    TIMES           reduce using rule 63 (expresion -> ID .)
    DIVISION        reduce using rule 63 (expresion -> ID .)
    SUM             reduce using rule 63 (expresion -> ID .)
    LESS            reduce using rule 63 (expresion -> ID .)
    EQUALS          reduce using rule 63 (expresion -> ID .)
    NOTEQUAL        reduce using rule 63 (expresion -> ID .)
    GREATEREQUAL    reduce using rule 63 (expresion -> ID .)
    GREATERTHAN     reduce using rule 63 (expresion -> ID .)
    LESSTHAN        reduce using rule 63 (expresion -> ID .)
    LESSEQUAL       reduce using rule 63 (expresion -> ID .)
    AND             reduce using rule 63 (expresion -> ID .)
    OR              reduce using rule 63 (expresion -> ID .)
    RIGHTP          reduce using rule 63 (expresion -> ID .)
    COMMA           reduce using rule 63 (expresion -> ID .)
    SEMICOLON       reduce using rule 63 (expresion -> ID .)
    RIGHTSB         reduce using rule 63 (expresion -> ID .)
    LEFTP           reduce using rule 32 (llamada1 -> ID .)


state 87

    (71) constante -> INT_CTE .

    TIMES           reduce using rule 71 (constante -> INT_CTE .)
    DIVISION        reduce using rule 71 (constante -> INT_CTE .)
    SUM             reduce using rule 71 (constante -> INT_CTE .)
    LESS            reduce using rule 71 (constante -> INT_CTE .)
    EQUALS          reduce using rule 71 (constante -> INT_CTE .)
    NOTEQUAL        reduce using rule 71 (constante -> INT_CTE .)
    GREATEREQUAL    reduce using rule 71 (constante -> INT_CTE .)
    GREATERTHAN     reduce using rule 71 (constante -> INT_CTE .)
    LESSTHAN        reduce using rule 71 (constante -> INT_CTE .)
    LESSEQUAL       reduce using rule 71 (constante -> INT_CTE .)
    AND             reduce using rule 71 (constante -> INT_CTE .)
    OR              reduce using rule 71 (constante -> INT_CTE .)
    SEMICOLON       reduce using rule 71 (constante -> INT_CTE .)
    RIGHTP          reduce using rule 71 (constante -> INT_CTE .)
    COMMA           reduce using rule 71 (constante -> INT_CTE .)
    RIGHTSB         reduce using rule 71 (constante -> INT_CTE .)


state 88

    (47) exp -> expresion . exp2
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion
    (49) exp2 -> .

    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104
    EQUALS          shift and go to state 107
    NOTEQUAL        shift and go to state 110
    GREATEREQUAL    shift and go to state 103
    GREATERTHAN     shift and go to state 112
    LESSTHAN        shift and go to state 109
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 114
    OR              shift and go to state 113
    SEMICOLON       reduce using rule 49 (exp2 -> .)
    RIGHTP          reduce using rule 49 (exp2 -> .)
    COMMA           reduce using rule 49 (exp2 -> .)
    RIGHTSB         reduce using rule 49 (exp2 -> .)

    exp2                           shift and go to state 105

state 89

    (70) constante -> FLOAT_CTE .

    TIMES           reduce using rule 70 (constante -> FLOAT_CTE .)
    DIVISION        reduce using rule 70 (constante -> FLOAT_CTE .)
    SUM             reduce using rule 70 (constante -> FLOAT_CTE .)
    LESS            reduce using rule 70 (constante -> FLOAT_CTE .)
    EQUALS          reduce using rule 70 (constante -> FLOAT_CTE .)
    NOTEQUAL        reduce using rule 70 (constante -> FLOAT_CTE .)
    GREATEREQUAL    reduce using rule 70 (constante -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 70 (constante -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 70 (constante -> FLOAT_CTE .)
    LESSEQUAL       reduce using rule 70 (constante -> FLOAT_CTE .)
    AND             reduce using rule 70 (constante -> FLOAT_CTE .)
    OR              reduce using rule 70 (constante -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 70 (constante -> FLOAT_CTE .)
    RIGHTP          reduce using rule 70 (constante -> FLOAT_CTE .)
    COMMA           reduce using rule 70 (constante -> FLOAT_CTE .)
    RIGHTSB         reduce using rule 70 (constante -> FLOAT_CTE .)


state 90

    (27) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 115


state 91

    (28) return1 -> exp .

    SEMICOLON       reduce using rule 28 (return1 -> exp .)


state 92

    (38) ciclo -> WHILE ciclo1 . LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB

    LEFTP           shift and go to state 116


state 93

    (30) escritura -> PRINT LEFTP . exp RIGHTP SEMICOLON
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    exp                            shift and go to state 117
    llamada1                       shift and go to state 65

state 94

    (31) llamada -> llamada1 LEFTP . args RIGHTP
    (33) args -> . exp
    (34) args -> . args COMMA exp
    (35) args -> . empty
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (76) empty -> .
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    RIGHTP          reduce using rule 76 (empty -> .)
    COMMA           reduce using rule 76 (empty -> .)
    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    args                           shift and go to state 119
    llamada                        shift and go to state 81
    exp                            shift and go to state 120
    llamada1                       shift and go to state 65
    empty                          shift and go to state 118

state 95

    (25) estatuto -> llamada SEMICOLON .

    RIGHTB          reduce using rule 25 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 25 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 25 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 25 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 25 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 25 (estatuto -> llamada SEMICOLON .)


state 96

    (37) asignacion -> ID LEFTSB . exp RIGHTSB ASSIGN exp SEMICOLON
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    exp                            shift and go to state 121
    llamada1                       shift and go to state 65

state 97

    (29) lectura -> ID ASSIGN . READ LEFTP RIGHTP SEMICOLON
    (36) asignacion -> ID ASSIGN . exp SEMICOLON
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    READ            shift and go to state 122
    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    exp                            shift and go to state 123
    llamada1                       shift and go to state 65

state 98

    (41) condicion -> IF LEFTP . condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> IF LEFTP . condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (43) condicion1 -> . exp
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    condicion1                     shift and go to state 124
    exp                            shift and go to state 125
    llamada1                       shift and go to state 65

state 99

    (63) expresion -> ID .

    TIMES           reduce using rule 63 (expresion -> ID .)
    DIVISION        reduce using rule 63 (expresion -> ID .)
    SUM             reduce using rule 63 (expresion -> ID .)
    LESS            reduce using rule 63 (expresion -> ID .)
    EQUALS          reduce using rule 63 (expresion -> ID .)
    NOTEQUAL        reduce using rule 63 (expresion -> ID .)
    GREATEREQUAL    reduce using rule 63 (expresion -> ID .)
    GREATERTHAN     reduce using rule 63 (expresion -> ID .)
    LESSTHAN        reduce using rule 63 (expresion -> ID .)
    LESSEQUAL       reduce using rule 63 (expresion -> ID .)
    AND             reduce using rule 63 (expresion -> ID .)
    OR              reduce using rule 63 (expresion -> ID .)
    SEMICOLON       reduce using rule 63 (expresion -> ID .)
    RIGHTP          reduce using rule 63 (expresion -> ID .)
    COMMA           reduce using rule 63 (expresion -> ID .)
    RIGHTSB         reduce using rule 63 (expresion -> ID .)


state 100

    (64) expresion -> LEFTP expresion . RIGHTP
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    RIGHTP          shift and go to state 126
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104
    EQUALS          shift and go to state 107
    NOTEQUAL        shift and go to state 110
    GREATEREQUAL    shift and go to state 103
    GREATERTHAN     shift and go to state 112
    LESSTHAN        shift and go to state 109
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 114
    OR              shift and go to state 113


state 101

    (46) exp -> llamada exp1 .

    RIGHTP          reduce using rule 46 (exp -> llamada exp1 .)
    RIGHTSB         reduce using rule 46 (exp -> llamada exp1 .)
    SEMICOLON       reduce using rule 46 (exp -> llamada exp1 .)
    COMMA           reduce using rule 46 (exp -> llamada exp1 .)


state 102

    (51) expresion -> expresion DIVISION . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 127
    constante                      shift and go to state 84

state 103

    (56) expresion -> expresion GREATEREQUAL . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 128
    constante                      shift and go to state 84

state 104

    (53) expresion -> expresion LESS . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 129
    constante                      shift and go to state 84

state 105

    (47) exp -> expresion exp2 .

    RIGHTP          reduce using rule 47 (exp -> expresion exp2 .)
    RIGHTSB         reduce using rule 47 (exp -> expresion exp2 .)
    SEMICOLON       reduce using rule 47 (exp -> expresion exp2 .)
    COMMA           reduce using rule 47 (exp -> expresion exp2 .)


state 106

    (52) expresion -> expresion SUM . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 130
    constante                      shift and go to state 84

state 107

    (54) expresion -> expresion EQUALS . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 131
    constante                      shift and go to state 84

state 108

    (50) expresion -> expresion TIMES . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 132
    constante                      shift and go to state 84

state 109

    (58) expresion -> expresion LESSTHAN . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 133
    constante                      shift and go to state 84

state 110

    (55) expresion -> expresion NOTEQUAL . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 134
    constante                      shift and go to state 84

state 111

    (59) expresion -> expresion LESSEQUAL . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 135
    constante                      shift and go to state 84

state 112

    (57) expresion -> expresion GREATERTHAN . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 136
    constante                      shift and go to state 84

state 113

    (61) expresion -> expresion OR . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 137
    constante                      shift and go to state 84

state 114

    (60) expresion -> expresion AND . expresion
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 99
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 138
    constante                      shift and go to state 84

state 115

    (27) return -> RETURN return1 SEMICOLON .

    RIGHTB          reduce using rule 27 (return -> RETURN return1 SEMICOLON .)
    IF              reduce using rule 27 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 27 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 27 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 27 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 27 (return -> RETURN return1 SEMICOLON .)


state 116

    (38) ciclo -> WHILE ciclo1 LEFTP . exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    exp                            shift and go to state 139
    llamada1                       shift and go to state 65

state 117

    (30) escritura -> PRINT LEFTP exp . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 140


state 118

    (35) args -> empty .

    RIGHTP          reduce using rule 35 (args -> empty .)
    COMMA           reduce using rule 35 (args -> empty .)


state 119

    (31) llamada -> llamada1 LEFTP args . RIGHTP
    (34) args -> args . COMMA exp

    RIGHTP          shift and go to state 141
    COMMA           shift and go to state 142


state 120

    (33) args -> exp .

    RIGHTP          reduce using rule 33 (args -> exp .)
    COMMA           reduce using rule 33 (args -> exp .)


state 121

    (37) asignacion -> ID LEFTSB exp . RIGHTSB ASSIGN exp SEMICOLON

    RIGHTSB         shift and go to state 143


state 122

    (29) lectura -> ID ASSIGN READ . LEFTP RIGHTP SEMICOLON

    LEFTP           shift and go to state 144


state 123

    (36) asignacion -> ID ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 145


state 124

    (41) condicion -> IF LEFTP condicion1 . RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> IF LEFTP condicion1 . RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    RIGHTP          shift and go to state 146


state 125

    (43) condicion1 -> exp .

    RIGHTP          reduce using rule 43 (condicion1 -> exp .)


state 126

    (64) expresion -> LEFTP expresion RIGHTP .

    TIMES           reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    DIVISION        reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    SUM             reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    LESS            reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    EQUALS          reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    NOTEQUAL        reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    GREATEREQUAL    reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    GREATERTHAN     reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    LESSTHAN        reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    LESSEQUAL       reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    AND             reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    OR              reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    SEMICOLON       reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    RIGHTP          reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    COMMA           reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)
    RIGHTSB         reduce using rule 64 (expresion -> LEFTP expresion RIGHTP .)


state 127

    (51) expresion -> expresion DIVISION expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    TIMES           reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    SUM             reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    LESS            reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    EQUALS          reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    NOTEQUAL        reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    GREATEREQUAL    reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    GREATERTHAN     reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    LESSTHAN        reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    LESSEQUAL       reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    SEMICOLON       reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    RIGHTP          reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    COMMA           reduce using rule 51 (expresion -> expresion DIVISION expresion .)
    RIGHTSB         reduce using rule 51 (expresion -> expresion DIVISION expresion .)

  ! TIMES           [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 102 ]
  ! SUM             [ shift and go to state 106 ]
  ! LESS            [ shift and go to state 104 ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 128

    (56) expresion -> expresion GREATEREQUAL expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    NOTEQUAL        reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    GREATEREQUAL    reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    GREATERTHAN     reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    LESSTHAN        reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    LESSEQUAL       reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    AND             reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    OR              reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    SEMICOLON       reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    RIGHTP          reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    COMMA           reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    RIGHTSB         reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104

  ! TIMES           [ reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! SUM             [ reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! LESS            [ reduce using rule 56 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 129

    (53) expresion -> expresion LESS expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    SUM             reduce using rule 53 (expresion -> expresion LESS expresion .)
    LESS            reduce using rule 53 (expresion -> expresion LESS expresion .)
    EQUALS          reduce using rule 53 (expresion -> expresion LESS expresion .)
    NOTEQUAL        reduce using rule 53 (expresion -> expresion LESS expresion .)
    GREATEREQUAL    reduce using rule 53 (expresion -> expresion LESS expresion .)
    GREATERTHAN     reduce using rule 53 (expresion -> expresion LESS expresion .)
    LESSTHAN        reduce using rule 53 (expresion -> expresion LESS expresion .)
    LESSEQUAL       reduce using rule 53 (expresion -> expresion LESS expresion .)
    AND             reduce using rule 53 (expresion -> expresion LESS expresion .)
    OR              reduce using rule 53 (expresion -> expresion LESS expresion .)
    SEMICOLON       reduce using rule 53 (expresion -> expresion LESS expresion .)
    RIGHTP          reduce using rule 53 (expresion -> expresion LESS expresion .)
    COMMA           reduce using rule 53 (expresion -> expresion LESS expresion .)
    RIGHTSB         reduce using rule 53 (expresion -> expresion LESS expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102

  ! TIMES           [ reduce using rule 53 (expresion -> expresion LESS expresion .) ]
  ! DIVISION        [ reduce using rule 53 (expresion -> expresion LESS expresion .) ]
  ! SUM             [ shift and go to state 106 ]
  ! LESS            [ shift and go to state 104 ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 130

    (52) expresion -> expresion SUM expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    SUM             reduce using rule 52 (expresion -> expresion SUM expresion .)
    LESS            reduce using rule 52 (expresion -> expresion SUM expresion .)
    EQUALS          reduce using rule 52 (expresion -> expresion SUM expresion .)
    NOTEQUAL        reduce using rule 52 (expresion -> expresion SUM expresion .)
    GREATEREQUAL    reduce using rule 52 (expresion -> expresion SUM expresion .)
    GREATERTHAN     reduce using rule 52 (expresion -> expresion SUM expresion .)
    LESSTHAN        reduce using rule 52 (expresion -> expresion SUM expresion .)
    LESSEQUAL       reduce using rule 52 (expresion -> expresion SUM expresion .)
    AND             reduce using rule 52 (expresion -> expresion SUM expresion .)
    OR              reduce using rule 52 (expresion -> expresion SUM expresion .)
    SEMICOLON       reduce using rule 52 (expresion -> expresion SUM expresion .)
    RIGHTP          reduce using rule 52 (expresion -> expresion SUM expresion .)
    COMMA           reduce using rule 52 (expresion -> expresion SUM expresion .)
    RIGHTSB         reduce using rule 52 (expresion -> expresion SUM expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102

  ! TIMES           [ reduce using rule 52 (expresion -> expresion SUM expresion .) ]
  ! DIVISION        [ reduce using rule 52 (expresion -> expresion SUM expresion .) ]
  ! SUM             [ shift and go to state 106 ]
  ! LESS            [ shift and go to state 104 ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 131

    (54) expresion -> expresion EQUALS expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    NOTEQUAL        reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    AND             reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    OR              reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    SEMICOLON       reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    RIGHTP          reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    COMMA           reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    RIGHTSB         reduce using rule 54 (expresion -> expresion EQUALS expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104
    GREATEREQUAL    shift and go to state 103
    GREATERTHAN     shift and go to state 112
    LESSTHAN        shift and go to state 109
    LESSEQUAL       shift and go to state 111

  ! TIMES           [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! DIVISION        [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! SUM             [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! LESS            [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! GREATERTHAN     [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! LESSTHAN        [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! LESSEQUAL       [ reduce using rule 54 (expresion -> expresion EQUALS expresion .) ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 132

    (50) expresion -> expresion TIMES expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    TIMES           reduce using rule 50 (expresion -> expresion TIMES expresion .)
    DIVISION        reduce using rule 50 (expresion -> expresion TIMES expresion .)
    SUM             reduce using rule 50 (expresion -> expresion TIMES expresion .)
    LESS            reduce using rule 50 (expresion -> expresion TIMES expresion .)
    EQUALS          reduce using rule 50 (expresion -> expresion TIMES expresion .)
    NOTEQUAL        reduce using rule 50 (expresion -> expresion TIMES expresion .)
    GREATEREQUAL    reduce using rule 50 (expresion -> expresion TIMES expresion .)
    GREATERTHAN     reduce using rule 50 (expresion -> expresion TIMES expresion .)
    LESSTHAN        reduce using rule 50 (expresion -> expresion TIMES expresion .)
    LESSEQUAL       reduce using rule 50 (expresion -> expresion TIMES expresion .)
    AND             reduce using rule 50 (expresion -> expresion TIMES expresion .)
    OR              reduce using rule 50 (expresion -> expresion TIMES expresion .)
    SEMICOLON       reduce using rule 50 (expresion -> expresion TIMES expresion .)
    RIGHTP          reduce using rule 50 (expresion -> expresion TIMES expresion .)
    COMMA           reduce using rule 50 (expresion -> expresion TIMES expresion .)
    RIGHTSB         reduce using rule 50 (expresion -> expresion TIMES expresion .)

  ! TIMES           [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 102 ]
  ! SUM             [ shift and go to state 106 ]
  ! LESS            [ shift and go to state 104 ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 133

    (58) expresion -> expresion LESSTHAN expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    NOTEQUAL        reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    GREATEREQUAL    reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    GREATERTHAN     reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    LESSTHAN        reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    LESSEQUAL       reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    AND             reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    OR              reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    SEMICOLON       reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    RIGHTP          reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    COMMA           reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    RIGHTSB         reduce using rule 58 (expresion -> expresion LESSTHAN expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104

  ! TIMES           [ reduce using rule 58 (expresion -> expresion LESSTHAN expresion .) ]
  ! DIVISION        [ reduce using rule 58 (expresion -> expresion LESSTHAN expresion .) ]
  ! SUM             [ reduce using rule 58 (expresion -> expresion LESSTHAN expresion .) ]
  ! LESS            [ reduce using rule 58 (expresion -> expresion LESSTHAN expresion .) ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 134

    (55) expresion -> expresion NOTEQUAL expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    NOTEQUAL        reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    AND             reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    OR              reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    SEMICOLON       reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    RIGHTP          reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    COMMA           reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    RIGHTSB         reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104
    GREATEREQUAL    shift and go to state 103
    GREATERTHAN     shift and go to state 112
    LESSTHAN        shift and go to state 109
    LESSEQUAL       shift and go to state 111

  ! TIMES           [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! SUM             [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESS            [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! GREATERTHAN     [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESSTHAN        [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESSEQUAL       [ reduce using rule 55 (expresion -> expresion NOTEQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 135

    (59) expresion -> expresion LESSEQUAL expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    NOTEQUAL        reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    GREATEREQUAL    reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    GREATERTHAN     reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    LESSTHAN        reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    LESSEQUAL       reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    AND             reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    OR              reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    SEMICOLON       reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    RIGHTP          reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    COMMA           reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    RIGHTSB         reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104

  ! TIMES           [ reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .) ]
  ! SUM             [ reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .) ]
  ! LESS            [ reduce using rule 59 (expresion -> expresion LESSEQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 136

    (57) expresion -> expresion GREATERTHAN expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    NOTEQUAL        reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    GREATEREQUAL    reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    GREATERTHAN     reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    LESSTHAN        reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    LESSEQUAL       reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    AND             reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    OR              reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    SEMICOLON       reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    RIGHTP          reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    COMMA           reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    RIGHTSB         reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104

  ! TIMES           [ reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .) ]
  ! DIVISION        [ reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .) ]
  ! SUM             [ reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .) ]
  ! LESS            [ reduce using rule 57 (expresion -> expresion GREATERTHAN expresion .) ]
  ! EQUALS          [ shift and go to state 107 ]
  ! NOTEQUAL        [ shift and go to state 110 ]
  ! GREATEREQUAL    [ shift and go to state 103 ]
  ! GREATERTHAN     [ shift and go to state 112 ]
  ! LESSTHAN        [ shift and go to state 109 ]
  ! LESSEQUAL       [ shift and go to state 111 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 137

    (61) expresion -> expresion OR expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    AND             reduce using rule 61 (expresion -> expresion OR expresion .)
    OR              reduce using rule 61 (expresion -> expresion OR expresion .)
    SEMICOLON       reduce using rule 61 (expresion -> expresion OR expresion .)
    RIGHTP          reduce using rule 61 (expresion -> expresion OR expresion .)
    COMMA           reduce using rule 61 (expresion -> expresion OR expresion .)
    RIGHTSB         reduce using rule 61 (expresion -> expresion OR expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104
    EQUALS          shift and go to state 107
    NOTEQUAL        shift and go to state 110
    GREATEREQUAL    shift and go to state 103
    GREATERTHAN     shift and go to state 112
    LESSTHAN        shift and go to state 109
    LESSEQUAL       shift and go to state 111

  ! TIMES           [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! SUM             [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! LESS            [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! EQUALS          [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! NOTEQUAL        [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! GREATERTHAN     [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! LESSTHAN        [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! LESSEQUAL       [ reduce using rule 61 (expresion -> expresion OR expresion .) ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 138

    (60) expresion -> expresion AND expresion .
    (50) expresion -> expresion . TIMES expresion
    (51) expresion -> expresion . DIVISION expresion
    (52) expresion -> expresion . SUM expresion
    (53) expresion -> expresion . LESS expresion
    (54) expresion -> expresion . EQUALS expresion
    (55) expresion -> expresion . NOTEQUAL expresion
    (56) expresion -> expresion . GREATEREQUAL expresion
    (57) expresion -> expresion . GREATERTHAN expresion
    (58) expresion -> expresion . LESSTHAN expresion
    (59) expresion -> expresion . LESSEQUAL expresion
    (60) expresion -> expresion . AND expresion
    (61) expresion -> expresion . OR expresion

    AND             reduce using rule 60 (expresion -> expresion AND expresion .)
    OR              reduce using rule 60 (expresion -> expresion AND expresion .)
    SEMICOLON       reduce using rule 60 (expresion -> expresion AND expresion .)
    RIGHTP          reduce using rule 60 (expresion -> expresion AND expresion .)
    COMMA           reduce using rule 60 (expresion -> expresion AND expresion .)
    RIGHTSB         reduce using rule 60 (expresion -> expresion AND expresion .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 102
    SUM             shift and go to state 106
    LESS            shift and go to state 104
    EQUALS          shift and go to state 107
    NOTEQUAL        shift and go to state 110
    GREATEREQUAL    shift and go to state 103
    GREATERTHAN     shift and go to state 112
    LESSTHAN        shift and go to state 109
    LESSEQUAL       shift and go to state 111

  ! TIMES           [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! SUM             [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! LESS            [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! EQUALS          [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! NOTEQUAL        [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! GREATERTHAN     [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! LESSTHAN        [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! LESSEQUAL       [ reduce using rule 60 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 113 ]


state 139

    (38) ciclo -> WHILE ciclo1 LEFTP exp . RIGHTP LEFTB bloque ciclo2 RIGHTB

    RIGHTP          shift and go to state 147


state 140

    (30) escritura -> PRINT LEFTP exp RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 148


state 141

    (31) llamada -> llamada1 LEFTP args RIGHTP .

    SEMICOLON       reduce using rule 31 (llamada -> llamada1 LEFTP args RIGHTP .)
    RIGHTP          reduce using rule 31 (llamada -> llamada1 LEFTP args RIGHTP .)
    COMMA           reduce using rule 31 (llamada -> llamada1 LEFTP args RIGHTP .)
    RIGHTSB         reduce using rule 31 (llamada -> llamada1 LEFTP args RIGHTP .)


state 142

    (34) args -> args COMMA . exp
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    exp                            shift and go to state 149
    llamada1                       shift and go to state 65

state 143

    (37) asignacion -> ID LEFTSB exp RIGHTSB . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 150


state 144

    (29) lectura -> ID ASSIGN READ LEFTP . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 151


state 145

    (36) asignacion -> ID ASSIGN exp SEMICOLON .

    RIGHTB          reduce using rule 36 (asignacion -> ID ASSIGN exp SEMICOLON .)
    IF              reduce using rule 36 (asignacion -> ID ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 36 (asignacion -> ID ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 36 (asignacion -> ID ASSIGN exp SEMICOLON .)
    ID              reduce using rule 36 (asignacion -> ID ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 36 (asignacion -> ID ASSIGN exp SEMICOLON .)


state 146

    (41) condicion -> IF LEFTP condicion1 RIGHTP . condicion2 LEFTB bloque RIGHTB
    (42) condicion -> IF LEFTP condicion1 RIGHTP . condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (44) condicion2 -> .

    LEFTB           reduce using rule 44 (condicion2 -> .)

    condicion2                     shift and go to state 152

state 147

    (38) ciclo -> WHILE ciclo1 LEFTP exp RIGHTP . LEFTB bloque ciclo2 RIGHTB

    LEFTB           shift and go to state 153


state 148

    (30) escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .

    RIGHTB          reduce using rule 30 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    IF              reduce using rule 30 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    WHILE           reduce using rule 30 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RETURN          reduce using rule 30 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    ID              reduce using rule 30 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    PRINT           reduce using rule 30 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)


state 149

    (34) args -> args COMMA exp .

    RIGHTP          reduce using rule 34 (args -> args COMMA exp .)
    COMMA           reduce using rule 34 (args -> args COMMA exp .)


state 150

    (37) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN . exp SEMICOLON
    (46) exp -> . llamada exp1
    (47) exp -> . expresion exp2
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (50) expresion -> . expresion TIMES expresion
    (51) expresion -> . expresion DIVISION expresion
    (52) expresion -> . expresion SUM expresion
    (53) expresion -> . expresion LESS expresion
    (54) expresion -> . expresion EQUALS expresion
    (55) expresion -> . expresion NOTEQUAL expresion
    (56) expresion -> . expresion GREATEREQUAL expresion
    (57) expresion -> . expresion GREATERTHAN expresion
    (58) expresion -> . expresion LESSTHAN expresion
    (59) expresion -> . expresion LESSEQUAL expresion
    (60) expresion -> . expresion AND expresion
    (61) expresion -> . expresion OR expresion
    (62) expresion -> . constante
    (63) expresion -> . ID
    (64) expresion -> . LEFTP expresion RIGHTP
    (32) llamada1 -> . ID
    (70) constante -> . FLOAT_CTE
    (71) constante -> . INT_CTE
    (72) constante -> . CHAR_CTE
    (73) constante -> . STRING_CTE
    (74) constante -> . TRUE
    (75) constante -> . FALSE

    ID              shift and go to state 86
    LEFTP           shift and go to state 80
    FLOAT_CTE       shift and go to state 89
    INT_CTE         shift and go to state 87
    CHAR_CTE        shift and go to state 82
    STRING_CTE      shift and go to state 83
    TRUE            shift and go to state 79
    FALSE           shift and go to state 85

    expresion                      shift and go to state 88
    constante                      shift and go to state 84
    llamada                        shift and go to state 81
    exp                            shift and go to state 154
    llamada1                       shift and go to state 65

state 151

    (29) lectura -> ID ASSIGN READ LEFTP RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 155


state 152

    (41) condicion -> IF LEFTP condicion1 RIGHTP condicion2 . LEFTB bloque RIGHTB
    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 . LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    LEFTB           shift and go to state 156


state 153

    (38) ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB . bloque ciclo2 RIGHTB
    (18) bloque -> . bloque estatuto
    (19) bloque -> . empty
    (76) empty -> .

    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)
    RIGHTB          reduce using rule 76 (empty -> .)

    bloque                         shift and go to state 157
    empty                          shift and go to state 59

state 154

    (37) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 158


state 155

    (29) lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .

    RIGHTB          reduce using rule 29 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    IF              reduce using rule 29 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    WHILE           reduce using rule 29 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RETURN          reduce using rule 29 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    ID              reduce using rule 29 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    PRINT           reduce using rule 29 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)


state 156

    (41) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB . bloque RIGHTB
    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB . bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (18) bloque -> . bloque estatuto
    (19) bloque -> . empty
    (76) empty -> .

    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    bloque                         shift and go to state 159
    empty                          shift and go to state 59

state 157

    (38) ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque . ciclo2 RIGHTB
    (18) bloque -> bloque . estatuto
    (40) ciclo2 -> .
    (20) estatuto -> . condicion
    (21) estatuto -> . ciclo
    (22) estatuto -> . return
    (23) estatuto -> . lectura
    (24) estatuto -> . escritura
    (25) estatuto -> . llamada SEMICOLON
    (26) estatuto -> . asignacion
    (41) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (38) ciclo -> . WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (27) return -> . RETURN return1 SEMICOLON
    (29) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (30) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (36) asignacion -> . ID ASSIGN exp SEMICOLON
    (37) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> . ID

    RIGHTB          reduce using rule 40 (ciclo2 -> .)
    IF              shift and go to state 73
    WHILE           shift and go to state 63
    RETURN          shift and go to state 62
    ID              shift and go to state 72
    PRINT           shift and go to state 64

    return                         shift and go to state 71
    ciclo                          shift and go to state 66
    asignacion                     shift and go to state 74
    estatuto                       shift and go to state 67
    llamada                        shift and go to state 68
    condicion                      shift and go to state 69
    ciclo2                         shift and go to state 160
    llamada1                       shift and go to state 65
    lectura                        shift and go to state 70
    escritura                      shift and go to state 76

state 158

    (37) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .

    RIGHTB          reduce using rule 37 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    IF              reduce using rule 37 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 37 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 37 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    ID              reduce using rule 37 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 37 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)


state 159

    (41) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque . RIGHTB
    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque . RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (18) bloque -> bloque . estatuto
    (20) estatuto -> . condicion
    (21) estatuto -> . ciclo
    (22) estatuto -> . return
    (23) estatuto -> . lectura
    (24) estatuto -> . escritura
    (25) estatuto -> . llamada SEMICOLON
    (26) estatuto -> . asignacion
    (41) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (38) ciclo -> . WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (27) return -> . RETURN return1 SEMICOLON
    (29) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (30) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (36) asignacion -> . ID ASSIGN exp SEMICOLON
    (37) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> . ID

    RIGHTB          shift and go to state 161
    IF              shift and go to state 73
    WHILE           shift and go to state 63
    RETURN          shift and go to state 62
    ID              shift and go to state 72
    PRINT           shift and go to state 64

    llamada1                       shift and go to state 65
    return                         shift and go to state 71
    ciclo                          shift and go to state 66
    asignacion                     shift and go to state 74
    estatuto                       shift and go to state 67
    llamada                        shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 76

state 160

    (38) ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 . RIGHTB

    RIGHTB          shift and go to state 162


state 161

    (41) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .
    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB . condicion3 ELSE LEFTB bloque RIGHTB
    (45) condicion3 -> .

    RIGHTB          reduce using rule 41 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    IF              reduce using rule 41 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    WHILE           reduce using rule 41 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    RETURN          reduce using rule 41 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    ID              reduce using rule 41 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    PRINT           reduce using rule 41 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    ELSE            reduce using rule 45 (condicion3 -> .)

    condicion3                     shift and go to state 163

state 162

    (38) ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .

    RIGHTB          reduce using rule 38 (ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    IF              reduce using rule 38 (ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    WHILE           reduce using rule 38 (ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    RETURN          reduce using rule 38 (ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    ID              reduce using rule 38 (ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .)
    PRINT           reduce using rule 38 (ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB .)


state 163

    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 . ELSE LEFTB bloque RIGHTB

    ELSE            shift and go to state 164


state 164

    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE . LEFTB bloque RIGHTB

    LEFTB           shift and go to state 165


state 165

    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB . bloque RIGHTB
    (18) bloque -> . bloque estatuto
    (19) bloque -> . empty
    (76) empty -> .

    RIGHTB          reduce using rule 76 (empty -> .)
    IF              reduce using rule 76 (empty -> .)
    WHILE           reduce using rule 76 (empty -> .)
    RETURN          reduce using rule 76 (empty -> .)
    ID              reduce using rule 76 (empty -> .)
    PRINT           reduce using rule 76 (empty -> .)

    bloque                         shift and go to state 166
    empty                          shift and go to state 59

state 166

    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque . RIGHTB
    (18) bloque -> bloque . estatuto
    (20) estatuto -> . condicion
    (21) estatuto -> . ciclo
    (22) estatuto -> . return
    (23) estatuto -> . lectura
    (24) estatuto -> . escritura
    (25) estatuto -> . llamada SEMICOLON
    (26) estatuto -> . asignacion
    (41) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (42) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (38) ciclo -> . WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB
    (27) return -> . RETURN return1 SEMICOLON
    (29) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (30) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (31) llamada -> . llamada1 LEFTP args RIGHTP
    (36) asignacion -> . ID ASSIGN exp SEMICOLON
    (37) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (32) llamada1 -> . ID

    RIGHTB          shift and go to state 167
    IF              shift and go to state 73
    WHILE           shift and go to state 63
    RETURN          shift and go to state 62
    ID              shift and go to state 72
    PRINT           shift and go to state 64

    llamada1                       shift and go to state 65
    return                         shift and go to state 71
    ciclo                          shift and go to state 66
    asignacion                     shift and go to state 74
    estatuto                       shift and go to state 67
    llamada                        shift and go to state 68
    condicion                      shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 76

state 167

    (42) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .

    RIGHTB          reduce using rule 42 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    IF              reduce using rule 42 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    WHILE           reduce using rule 42 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    RETURN          reduce using rule 42 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    ID              reduce using rule 42 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    PRINT           reduce using rule 42 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)

