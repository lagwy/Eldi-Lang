Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> goto_main add_globales metodos
Rule 2     goto_main -> <empty>
Rule 3     add_globales -> variables_list
Rule 4     variables_list -> variables_list variables
Rule 5     variables_list -> empty
Rule 6     variables -> VAR tipo ID lista_variables SEMICOLON
Rule 7     variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
Rule 8     lista_variables -> COMMA ID lista_variables
Rule 9     lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
Rule 10    lista_variables -> empty
Rule 11    metodos -> metodos metodo
Rule 12    metodos -> empty
Rule 13    metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB
Rule 14    metodo1 -> MAIN
Rule 15    metodo1 -> ID
Rule 16    save_params -> params
Rule 17    tipo_metodo -> VOID
Rule 18    tipo_metodo -> tipo
Rule 19    add_method -> <empty>
Rule 20    method_vars -> variables_list
Rule 21    params -> params parametro
Rule 22    params -> params COMMA parametro
Rule 23    params -> empty
Rule 24    parametro -> tipo ID
Rule 25    bloque -> bloque estatuto
Rule 26    bloque -> empty
Rule 27    estatuto -> condicion
Rule 28    estatuto -> ciclo
Rule 29    estatuto -> return
Rule 30    estatuto -> lectura
Rule 31    estatuto -> escritura
Rule 32    estatuto -> llamada SEMICOLON
Rule 33    estatuto -> asignacion
Rule 34    return -> RETURN return1 SEMICOLON
Rule 35    return1 -> exp
Rule 36    lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON
Rule 37    escritura -> PRINT LEFTP exp RIGHTP SEMICOLON
Rule 38    llamada -> llamada1 LEFTP args RIGHTP
Rule 39    llamada1 -> ID
Rule 40    args -> exp
Rule 41    args -> args COMMA exp
Rule 42    args -> empty
Rule 43    asignacion -> ID ASSIGN exp SEMICOLON
Rule 44    asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
Rule 45    ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
Rule 46    ciclo1 -> <empty>
Rule 47    ciclo2 -> <empty>
Rule 48    condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
Rule 49    condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
Rule 50    condicion1 -> exp
Rule 51    condicion2 -> <empty>
Rule 52    condicion3 -> <empty>
Rule 53    exp -> llamada exp1
Rule 54    exp -> expresion exp2
Rule 55    exp1 -> <empty>
Rule 56    exp2 -> <empty>
Rule 57    expresion -> expresion TIMES expresion
Rule 58    expresion -> expresion DIVISION expresion
Rule 59    expresion -> expresion SUM expresion
Rule 60    expresion -> expresion LESS expresion
Rule 61    expresion -> expresion EQUALS expresion
Rule 62    expresion -> expresion NOTEQUAL expresion
Rule 63    expresion -> expresion GREATEREQUAL expresion
Rule 64    expresion -> expresion GREATERTHAN expresion
Rule 65    expresion -> expresion LESSTHAN expresion
Rule 66    expresion -> expresion LESSEQUAL expresion
Rule 67    expresion -> expresion AND expresion
Rule 68    expresion -> expresion OR expresion
Rule 69    expresion -> constante
Rule 70    expresion -> ID
Rule 71    expresion -> LEFTP expresion RIGHTP
Rule 72    tipo -> INT
Rule 73    tipo -> CHAR
Rule 74    tipo -> BOOLEAN
Rule 75    tipo -> FLOAT
Rule 76    tipo -> STRING
Rule 77    constante -> FLOAT_CTE
Rule 78    constante -> INT_CTE
Rule 79    constante -> CHAR_CTE
Rule 80    constante -> STRING_CTE
Rule 81    constante -> TRUE
Rule 82    constante -> FALSE
Rule 83    empty -> <empty>

Terminals, with rules where they appear

AND                  : 67
ASSIGN               : 36 43 44
BOOLEAN              : 74
CHAR                 : 73
CHAR_CTE             : 79
COMMA                : 8 9 22 41
DIVISION             : 58
ELSE                 : 49
EQUALS               : 61
FALSE                : 82
FLOAT                : 75
FLOAT_CTE            : 77
GREATEREQUAL         : 63
GREATERTHAN          : 64
ID                   : 6 7 8 9 15 24 36 39 43 44 70
IF                   : 48 49
INT                  : 72
INT_CTE              : 7 9 78
LEFTB                : 13 45 48 49 49
LEFTP                : 13 36 37 38 45 48 49 71
LEFTSB               : 7 9 44
LESS                 : 60
LESSEQUAL            : 66
LESSTHAN             : 65
MAIN                 : 14
METHOD               : 13
NOTEQUAL             : 62
OR                   : 68
PRINT                : 37
READ                 : 36
RETURN               : 34
RIGHTB               : 13 45 48 49 49
RIGHTP               : 13 36 37 38 45 48 49 71
RIGHTSB              : 7 9 44
SEMICOLON            : 6 7 32 34 36 37 43 44
STRING               : 76
STRING_CTE           : 80
SUM                  : 59
TIMES                : 57
TRUE                 : 81
VAR                  : 6 7
VOID                 : 17
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

add_globales         : 1
add_method           : 13
args                 : 38 41
asignacion           : 33
bloque               : 13 25 45 48 49 49
ciclo                : 28
ciclo1               : 45
ciclo2               : 45
condicion            : 27
condicion1           : 48 49
condicion2           : 48 49
condicion3           : 49
constante            : 69
empty                : 5 10 12 23 26 42
escritura            : 31
estatuto             : 25
exp                  : 35 37 40 41 43 44 44 45 50
exp1                 : 53
exp2                 : 54
expresion            : 54 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 71
goto_main            : 1
lectura              : 30
lista_variables      : 6 7 8 9
llamada              : 32 53
llamada1             : 38
method_vars          : 13
metodo               : 11
metodo1              : 13
metodos              : 1 11
parametro            : 21 22
params               : 16 21 22
programa             : 0
return               : 29
return1              : 34
save_params          : 13
tipo                 : 6 7 18 24
tipo_metodo          : 13
variables            : 4
variables_list       : 3 4 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . goto_main add_globales metodos
    (2) goto_main -> .

    METHOD          reduce using rule 2 (goto_main -> .)
    VAR             reduce using rule 2 (goto_main -> .)
    $end            reduce using rule 2 (goto_main -> .)

    goto_main                      shift and go to state 1
    programa                       shift and go to state 2

state 1

    (1) programa -> goto_main . add_globales metodos
    (3) add_globales -> . variables_list
    (4) variables_list -> . variables_list variables
    (5) variables_list -> . empty
    (83) empty -> .

    VAR             reduce using rule 83 (empty -> .)
    METHOD          reduce using rule 83 (empty -> .)
    $end            reduce using rule 83 (empty -> .)

    variables_list                 shift and go to state 3
    add_globales                   shift and go to state 4
    empty                          shift and go to state 5

state 2

    (0) S' -> programa .



state 3

    (3) add_globales -> variables_list .
    (4) variables_list -> variables_list . variables
    (6) variables -> . VAR tipo ID lista_variables SEMICOLON
    (7) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    METHOD          reduce using rule 3 (add_globales -> variables_list .)
    $end            reduce using rule 3 (add_globales -> variables_list .)
    VAR             shift and go to state 7

    variables                      shift and go to state 6

state 4

    (1) programa -> goto_main add_globales . metodos
    (11) metodos -> . metodos metodo
    (12) metodos -> . empty
    (83) empty -> .

    METHOD          reduce using rule 83 (empty -> .)
    $end            reduce using rule 83 (empty -> .)

    metodos                        shift and go to state 8
    empty                          shift and go to state 9

state 5

    (5) variables_list -> empty .

    VAR             reduce using rule 5 (variables_list -> empty .)
    METHOD          reduce using rule 5 (variables_list -> empty .)
    $end            reduce using rule 5 (variables_list -> empty .)
    RIGHTB          reduce using rule 5 (variables_list -> empty .)
    IF              reduce using rule 5 (variables_list -> empty .)
    WHILE           reduce using rule 5 (variables_list -> empty .)
    RETURN          reduce using rule 5 (variables_list -> empty .)
    ID              reduce using rule 5 (variables_list -> empty .)
    PRINT           reduce using rule 5 (variables_list -> empty .)


state 6

    (4) variables_list -> variables_list variables .

    VAR             reduce using rule 4 (variables_list -> variables_list variables .)
    METHOD          reduce using rule 4 (variables_list -> variables_list variables .)
    $end            reduce using rule 4 (variables_list -> variables_list variables .)
    RIGHTB          reduce using rule 4 (variables_list -> variables_list variables .)
    IF              reduce using rule 4 (variables_list -> variables_list variables .)
    WHILE           reduce using rule 4 (variables_list -> variables_list variables .)
    RETURN          reduce using rule 4 (variables_list -> variables_list variables .)
    ID              reduce using rule 4 (variables_list -> variables_list variables .)
    PRINT           reduce using rule 4 (variables_list -> variables_list variables .)


state 7

    (6) variables -> VAR . tipo ID lista_variables SEMICOLON
    (7) variables -> VAR . tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (72) tipo -> . INT
    (73) tipo -> . CHAR
    (74) tipo -> . BOOLEAN
    (75) tipo -> . FLOAT
    (76) tipo -> . STRING

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    tipo                           shift and go to state 11

state 8

    (1) programa -> goto_main add_globales metodos .
    (11) metodos -> metodos . metodo
    (13) metodo -> . METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB

    $end            reduce using rule 1 (programa -> goto_main add_globales metodos .)
    METHOD          shift and go to state 17

    metodo                         shift and go to state 16

state 9

    (12) metodos -> empty .

    METHOD          reduce using rule 12 (metodos -> empty .)
    $end            reduce using rule 12 (metodos -> empty .)


state 10

    (75) tipo -> FLOAT .

    ID              reduce using rule 75 (tipo -> FLOAT .)
    MAIN            reduce using rule 75 (tipo -> FLOAT .)


state 11

    (6) variables -> VAR tipo . ID lista_variables SEMICOLON
    (7) variables -> VAR tipo . ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    ID              shift and go to state 18


state 12

    (72) tipo -> INT .

    ID              reduce using rule 72 (tipo -> INT .)
    MAIN            reduce using rule 72 (tipo -> INT .)


state 13

    (73) tipo -> CHAR .

    ID              reduce using rule 73 (tipo -> CHAR .)
    MAIN            reduce using rule 73 (tipo -> CHAR .)


state 14

    (74) tipo -> BOOLEAN .

    ID              reduce using rule 74 (tipo -> BOOLEAN .)
    MAIN            reduce using rule 74 (tipo -> BOOLEAN .)


state 15

    (76) tipo -> STRING .

    ID              reduce using rule 76 (tipo -> STRING .)
    MAIN            reduce using rule 76 (tipo -> STRING .)


state 16

    (11) metodos -> metodos metodo .

    METHOD          reduce using rule 11 (metodos -> metodos metodo .)
    $end            reduce using rule 11 (metodos -> metodos metodo .)


state 17

    (13) metodo -> METHOD . tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB
    (17) tipo_metodo -> . VOID
    (18) tipo_metodo -> . tipo
    (72) tipo -> . INT
    (73) tipo -> . CHAR
    (74) tipo -> . BOOLEAN
    (75) tipo -> . FLOAT
    (76) tipo -> . STRING

    VOID            shift and go to state 20
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    tipo                           shift and go to state 19
    tipo_metodo                    shift and go to state 21

state 18

    (6) variables -> VAR tipo ID . lista_variables SEMICOLON
    (7) variables -> VAR tipo ID . LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (83) empty -> .

    LEFTSB          shift and go to state 22
    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 83 (empty -> .)

    lista_variables                shift and go to state 23
    empty                          shift and go to state 25

state 19

    (18) tipo_metodo -> tipo .

    MAIN            reduce using rule 18 (tipo_metodo -> tipo .)
    ID              reduce using rule 18 (tipo_metodo -> tipo .)


state 20

    (17) tipo_metodo -> VOID .

    MAIN            reduce using rule 17 (tipo_metodo -> VOID .)
    ID              reduce using rule 17 (tipo_metodo -> VOID .)


state 21

    (13) metodo -> METHOD tipo_metodo . metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB
    (14) metodo1 -> . MAIN
    (15) metodo1 -> . ID

    MAIN            shift and go to state 27
    ID              shift and go to state 28

    metodo1                        shift and go to state 26

state 22

    (7) variables -> VAR tipo ID LEFTSB . INT_CTE RIGHTSB lista_variables SEMICOLON

    INT_CTE         shift and go to state 29


state 23

    (6) variables -> VAR tipo ID lista_variables . SEMICOLON

    SEMICOLON       shift and go to state 30


state 24

    (8) lista_variables -> COMMA . ID lista_variables
    (9) lista_variables -> COMMA . ID LEFTSB INT_CTE RIGHTSB lista_variables

    ID              shift and go to state 31


state 25

    (10) lista_variables -> empty .

    SEMICOLON       reduce using rule 10 (lista_variables -> empty .)


state 26

    (13) metodo -> METHOD tipo_metodo metodo1 . LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB

    LEFTP           shift and go to state 32


state 27

    (14) metodo1 -> MAIN .

    LEFTP           reduce using rule 14 (metodo1 -> MAIN .)


state 28

    (15) metodo1 -> ID .

    LEFTP           reduce using rule 15 (metodo1 -> ID .)


state 29

    (7) variables -> VAR tipo ID LEFTSB INT_CTE . RIGHTSB lista_variables SEMICOLON

    RIGHTSB         shift and go to state 33


state 30

    (6) variables -> VAR tipo ID lista_variables SEMICOLON .

    VAR             reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    METHOD          reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    $end            reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    RIGHTB          reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    IF              reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    WHILE           reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    RETURN          reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    ID              reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    PRINT           reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)


state 31

    (8) lista_variables -> COMMA ID . lista_variables
    (9) lista_variables -> COMMA ID . LEFTSB INT_CTE RIGHTSB lista_variables
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (83) empty -> .

    LEFTSB          shift and go to state 34
    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 83 (empty -> .)

    lista_variables                shift and go to state 35
    empty                          shift and go to state 25

state 32

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP . save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB
    (16) save_params -> . params
    (21) params -> . params parametro
    (22) params -> . params COMMA parametro
    (23) params -> . empty
    (83) empty -> .

    COMMA           reduce using rule 83 (empty -> .)
    INT             reduce using rule 83 (empty -> .)
    CHAR            reduce using rule 83 (empty -> .)
    BOOLEAN         reduce using rule 83 (empty -> .)
    FLOAT           reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)
    RIGHTP          reduce using rule 83 (empty -> .)

    save_params                    shift and go to state 36
    params                         shift and go to state 37
    empty                          shift and go to state 38

state 33

    (7) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB . lista_variables SEMICOLON
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (83) empty -> .

    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 83 (empty -> .)

    lista_variables                shift and go to state 39
    empty                          shift and go to state 25

state 34

    (9) lista_variables -> COMMA ID LEFTSB . INT_CTE RIGHTSB lista_variables

    INT_CTE         shift and go to state 40


state 35

    (8) lista_variables -> COMMA ID lista_variables .

    SEMICOLON       reduce using rule 8 (lista_variables -> COMMA ID lista_variables .)


state 36

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params . RIGHTP LEFTB method_vars add_method bloque RIGHTB

    RIGHTP          shift and go to state 41


state 37

    (16) save_params -> params .
    (21) params -> params . parametro
    (22) params -> params . COMMA parametro
    (24) parametro -> . tipo ID
    (72) tipo -> . INT
    (73) tipo -> . CHAR
    (74) tipo -> . BOOLEAN
    (75) tipo -> . FLOAT
    (76) tipo -> . STRING

    RIGHTP          reduce using rule 16 (save_params -> params .)
    COMMA           shift and go to state 44
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 43
    tipo                           shift and go to state 42

state 38

    (23) params -> empty .

    COMMA           reduce using rule 23 (params -> empty .)
    INT             reduce using rule 23 (params -> empty .)
    CHAR            reduce using rule 23 (params -> empty .)
    BOOLEAN         reduce using rule 23 (params -> empty .)
    FLOAT           reduce using rule 23 (params -> empty .)
    STRING          reduce using rule 23 (params -> empty .)
    RIGHTP          reduce using rule 23 (params -> empty .)


state 39

    (7) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables . SEMICOLON

    SEMICOLON       shift and go to state 45


state 40

    (9) lista_variables -> COMMA ID LEFTSB INT_CTE . RIGHTSB lista_variables

    RIGHTSB         shift and go to state 46


state 41

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP . LEFTB method_vars add_method bloque RIGHTB

    LEFTB           shift and go to state 47


state 42

    (24) parametro -> tipo . ID

    ID              shift and go to state 48


state 43

    (21) params -> params parametro .

    COMMA           reduce using rule 21 (params -> params parametro .)
    INT             reduce using rule 21 (params -> params parametro .)
    CHAR            reduce using rule 21 (params -> params parametro .)
    BOOLEAN         reduce using rule 21 (params -> params parametro .)
    FLOAT           reduce using rule 21 (params -> params parametro .)
    STRING          reduce using rule 21 (params -> params parametro .)
    RIGHTP          reduce using rule 21 (params -> params parametro .)


state 44

    (22) params -> params COMMA . parametro
    (24) parametro -> . tipo ID
    (72) tipo -> . INT
    (73) tipo -> . CHAR
    (74) tipo -> . BOOLEAN
    (75) tipo -> . FLOAT
    (76) tipo -> . STRING

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 49
    tipo                           shift and go to state 42

state 45

    (7) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .

    VAR             reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    METHOD          reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    $end            reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    RIGHTB          reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    IF              reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    WHILE           reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    RETURN          reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    ID              reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    PRINT           reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)


state 46

    (9) lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB . lista_variables
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (83) empty -> .

    COMMA           shift and go to state 24
    SEMICOLON       reduce using rule 83 (empty -> .)

    lista_variables                shift and go to state 50
    empty                          shift and go to state 25

state 47

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB . method_vars add_method bloque RIGHTB
    (20) method_vars -> . variables_list
    (4) variables_list -> . variables_list variables
    (5) variables_list -> . empty
    (83) empty -> .

    VAR             reduce using rule 83 (empty -> .)
    RIGHTB          reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)
    ID              reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)

    variables_list                 shift and go to state 51
    empty                          shift and go to state 5
    method_vars                    shift and go to state 52

state 48

    (24) parametro -> tipo ID .

    COMMA           reduce using rule 24 (parametro -> tipo ID .)
    INT             reduce using rule 24 (parametro -> tipo ID .)
    CHAR            reduce using rule 24 (parametro -> tipo ID .)
    BOOLEAN         reduce using rule 24 (parametro -> tipo ID .)
    FLOAT           reduce using rule 24 (parametro -> tipo ID .)
    STRING          reduce using rule 24 (parametro -> tipo ID .)
    RIGHTP          reduce using rule 24 (parametro -> tipo ID .)


state 49

    (22) params -> params COMMA parametro .

    COMMA           reduce using rule 22 (params -> params COMMA parametro .)
    INT             reduce using rule 22 (params -> params COMMA parametro .)
    CHAR            reduce using rule 22 (params -> params COMMA parametro .)
    BOOLEAN         reduce using rule 22 (params -> params COMMA parametro .)
    FLOAT           reduce using rule 22 (params -> params COMMA parametro .)
    STRING          reduce using rule 22 (params -> params COMMA parametro .)
    RIGHTP          reduce using rule 22 (params -> params COMMA parametro .)


state 50

    (9) lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables .

    SEMICOLON       reduce using rule 9 (lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables .)


state 51

    (20) method_vars -> variables_list .
    (4) variables_list -> variables_list . variables
    (6) variables -> . VAR tipo ID lista_variables SEMICOLON
    (7) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    RIGHTB          reduce using rule 20 (method_vars -> variables_list .)
    IF              reduce using rule 20 (method_vars -> variables_list .)
    WHILE           reduce using rule 20 (method_vars -> variables_list .)
    RETURN          reduce using rule 20 (method_vars -> variables_list .)
    ID              reduce using rule 20 (method_vars -> variables_list .)
    PRINT           reduce using rule 20 (method_vars -> variables_list .)
    VAR             shift and go to state 7

    variables                      shift and go to state 6

state 52

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars . add_method bloque RIGHTB
    (19) add_method -> .

    RIGHTB          reduce using rule 19 (add_method -> .)
    IF              reduce using rule 19 (add_method -> .)
    WHILE           reduce using rule 19 (add_method -> .)
    RETURN          reduce using rule 19 (add_method -> .)
    ID              reduce using rule 19 (add_method -> .)
    PRINT           reduce using rule 19 (add_method -> .)

    add_method                     shift and go to state 53

state 53

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method . bloque RIGHTB
    (25) bloque -> . bloque estatuto
    (26) bloque -> . empty
    (83) empty -> .

    RIGHTB          reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)
    ID              reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)

    bloque                         shift and go to state 54
    empty                          shift and go to state 55

state 54

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque . RIGHTB
    (25) bloque -> bloque . estatuto
    (27) estatuto -> . condicion
    (28) estatuto -> . ciclo
    (29) estatuto -> . return
    (30) estatuto -> . lectura
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . asignacion
    (48) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (45) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (34) return -> . RETURN return1 SEMICOLON
    (36) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (37) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (43) asignacion -> . ID ASSIGN exp SEMICOLON
    (44) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (39) llamada1 -> . ID

    RIGHTB          shift and go to state 69
    IF              shift and go to state 67
    WHILE           shift and go to state 57
    RETURN          shift and go to state 56
    ID              shift and go to state 66
    PRINT           shift and go to state 58

    llamada1                       shift and go to state 59
    ciclo                          shift and go to state 60
    estatuto                       shift and go to state 61
    llamada                        shift and go to state 62
    condicion                      shift and go to state 63
    lectura                        shift and go to state 64
    return                         shift and go to state 65
    asignacion                     shift and go to state 68
    escritura                      shift and go to state 70

state 55

    (26) bloque -> empty .

    RIGHTB          reduce using rule 26 (bloque -> empty .)
    IF              reduce using rule 26 (bloque -> empty .)
    WHILE           reduce using rule 26 (bloque -> empty .)
    RETURN          reduce using rule 26 (bloque -> empty .)
    ID              reduce using rule 26 (bloque -> empty .)
    PRINT           reduce using rule 26 (bloque -> empty .)


state 56

    (34) return -> RETURN . return1 SEMICOLON
    (35) return1 -> . exp
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    return1                        shift and go to state 82
    llamada                        shift and go to state 73
    exp                            shift and go to state 83
    llamada1                       shift and go to state 59

state 57

    (45) ciclo -> WHILE . LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB

    LEFTP           shift and go to state 84


state 58

    (37) escritura -> PRINT . LEFTP exp RIGHTP SEMICOLON

    LEFTP           shift and go to state 85


state 59

    (38) llamada -> llamada1 . LEFTP args RIGHTP

    LEFTP           shift and go to state 86


state 60

    (28) estatuto -> ciclo .

    IF              reduce using rule 28 (estatuto -> ciclo .)
    WHILE           reduce using rule 28 (estatuto -> ciclo .)
    RETURN          reduce using rule 28 (estatuto -> ciclo .)
    ID              reduce using rule 28 (estatuto -> ciclo .)
    PRINT           reduce using rule 28 (estatuto -> ciclo .)
    RIGHTB          reduce using rule 28 (estatuto -> ciclo .)


state 61

    (25) bloque -> bloque estatuto .

    RIGHTB          reduce using rule 25 (bloque -> bloque estatuto .)
    IF              reduce using rule 25 (bloque -> bloque estatuto .)
    WHILE           reduce using rule 25 (bloque -> bloque estatuto .)
    RETURN          reduce using rule 25 (bloque -> bloque estatuto .)
    ID              reduce using rule 25 (bloque -> bloque estatuto .)
    PRINT           reduce using rule 25 (bloque -> bloque estatuto .)


state 62

    (32) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 87


state 63

    (27) estatuto -> condicion .

    IF              reduce using rule 27 (estatuto -> condicion .)
    WHILE           reduce using rule 27 (estatuto -> condicion .)
    RETURN          reduce using rule 27 (estatuto -> condicion .)
    ID              reduce using rule 27 (estatuto -> condicion .)
    PRINT           reduce using rule 27 (estatuto -> condicion .)
    RIGHTB          reduce using rule 27 (estatuto -> condicion .)


state 64

    (30) estatuto -> lectura .

    IF              reduce using rule 30 (estatuto -> lectura .)
    WHILE           reduce using rule 30 (estatuto -> lectura .)
    RETURN          reduce using rule 30 (estatuto -> lectura .)
    ID              reduce using rule 30 (estatuto -> lectura .)
    PRINT           reduce using rule 30 (estatuto -> lectura .)
    RIGHTB          reduce using rule 30 (estatuto -> lectura .)


state 65

    (29) estatuto -> return .

    IF              reduce using rule 29 (estatuto -> return .)
    WHILE           reduce using rule 29 (estatuto -> return .)
    RETURN          reduce using rule 29 (estatuto -> return .)
    ID              reduce using rule 29 (estatuto -> return .)
    PRINT           reduce using rule 29 (estatuto -> return .)
    RIGHTB          reduce using rule 29 (estatuto -> return .)


state 66

    (36) lectura -> ID . ASSIGN READ LEFTP RIGHTP SEMICOLON
    (43) asignacion -> ID . ASSIGN exp SEMICOLON
    (44) asignacion -> ID . LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (39) llamada1 -> ID .

    ASSIGN          shift and go to state 89
    LEFTSB          shift and go to state 88
    LEFTP           reduce using rule 39 (llamada1 -> ID .)


state 67

    (48) condicion -> IF . LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> IF . LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    LEFTP           shift and go to state 90


state 68

    (33) estatuto -> asignacion .

    IF              reduce using rule 33 (estatuto -> asignacion .)
    WHILE           reduce using rule 33 (estatuto -> asignacion .)
    RETURN          reduce using rule 33 (estatuto -> asignacion .)
    ID              reduce using rule 33 (estatuto -> asignacion .)
    PRINT           reduce using rule 33 (estatuto -> asignacion .)
    RIGHTB          reduce using rule 33 (estatuto -> asignacion .)


state 69

    (13) metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB .

    METHOD          reduce using rule 13 (metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB .)
    $end            reduce using rule 13 (metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB .)


state 70

    (31) estatuto -> escritura .

    IF              reduce using rule 31 (estatuto -> escritura .)
    WHILE           reduce using rule 31 (estatuto -> escritura .)
    RETURN          reduce using rule 31 (estatuto -> escritura .)
    ID              reduce using rule 31 (estatuto -> escritura .)
    PRINT           reduce using rule 31 (estatuto -> escritura .)
    RIGHTB          reduce using rule 31 (estatuto -> escritura .)


state 71

    (81) constante -> TRUE .

    TIMES           reduce using rule 81 (constante -> TRUE .)
    DIVISION        reduce using rule 81 (constante -> TRUE .)
    SUM             reduce using rule 81 (constante -> TRUE .)
    LESS            reduce using rule 81 (constante -> TRUE .)
    EQUALS          reduce using rule 81 (constante -> TRUE .)
    NOTEQUAL        reduce using rule 81 (constante -> TRUE .)
    GREATEREQUAL    reduce using rule 81 (constante -> TRUE .)
    GREATERTHAN     reduce using rule 81 (constante -> TRUE .)
    LESSTHAN        reduce using rule 81 (constante -> TRUE .)
    LESSEQUAL       reduce using rule 81 (constante -> TRUE .)
    AND             reduce using rule 81 (constante -> TRUE .)
    OR              reduce using rule 81 (constante -> TRUE .)
    SEMICOLON       reduce using rule 81 (constante -> TRUE .)
    RIGHTP          reduce using rule 81 (constante -> TRUE .)
    COMMA           reduce using rule 81 (constante -> TRUE .)
    RIGHTSB         reduce using rule 81 (constante -> TRUE .)


state 72

    (71) expresion -> LEFTP . expresion RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 92
    constante                      shift and go to state 76

state 73

    (53) exp -> llamada . exp1
    (55) exp1 -> .

    SEMICOLON       reduce using rule 55 (exp1 -> .)
    RIGHTP          reduce using rule 55 (exp1 -> .)
    COMMA           reduce using rule 55 (exp1 -> .)
    RIGHTSB         reduce using rule 55 (exp1 -> .)

    exp1                           shift and go to state 93

state 74

    (79) constante -> CHAR_CTE .

    TIMES           reduce using rule 79 (constante -> CHAR_CTE .)
    DIVISION        reduce using rule 79 (constante -> CHAR_CTE .)
    SUM             reduce using rule 79 (constante -> CHAR_CTE .)
    LESS            reduce using rule 79 (constante -> CHAR_CTE .)
    EQUALS          reduce using rule 79 (constante -> CHAR_CTE .)
    NOTEQUAL        reduce using rule 79 (constante -> CHAR_CTE .)
    GREATEREQUAL    reduce using rule 79 (constante -> CHAR_CTE .)
    GREATERTHAN     reduce using rule 79 (constante -> CHAR_CTE .)
    LESSTHAN        reduce using rule 79 (constante -> CHAR_CTE .)
    LESSEQUAL       reduce using rule 79 (constante -> CHAR_CTE .)
    AND             reduce using rule 79 (constante -> CHAR_CTE .)
    OR              reduce using rule 79 (constante -> CHAR_CTE .)
    SEMICOLON       reduce using rule 79 (constante -> CHAR_CTE .)
    RIGHTP          reduce using rule 79 (constante -> CHAR_CTE .)
    COMMA           reduce using rule 79 (constante -> CHAR_CTE .)
    RIGHTSB         reduce using rule 79 (constante -> CHAR_CTE .)


state 75

    (80) constante -> STRING_CTE .

    TIMES           reduce using rule 80 (constante -> STRING_CTE .)
    DIVISION        reduce using rule 80 (constante -> STRING_CTE .)
    SUM             reduce using rule 80 (constante -> STRING_CTE .)
    LESS            reduce using rule 80 (constante -> STRING_CTE .)
    EQUALS          reduce using rule 80 (constante -> STRING_CTE .)
    NOTEQUAL        reduce using rule 80 (constante -> STRING_CTE .)
    GREATEREQUAL    reduce using rule 80 (constante -> STRING_CTE .)
    GREATERTHAN     reduce using rule 80 (constante -> STRING_CTE .)
    LESSTHAN        reduce using rule 80 (constante -> STRING_CTE .)
    LESSEQUAL       reduce using rule 80 (constante -> STRING_CTE .)
    AND             reduce using rule 80 (constante -> STRING_CTE .)
    OR              reduce using rule 80 (constante -> STRING_CTE .)
    SEMICOLON       reduce using rule 80 (constante -> STRING_CTE .)
    RIGHTP          reduce using rule 80 (constante -> STRING_CTE .)
    COMMA           reduce using rule 80 (constante -> STRING_CTE .)
    RIGHTSB         reduce using rule 80 (constante -> STRING_CTE .)


state 76

    (69) expresion -> constante .

    TIMES           reduce using rule 69 (expresion -> constante .)
    DIVISION        reduce using rule 69 (expresion -> constante .)
    SUM             reduce using rule 69 (expresion -> constante .)
    LESS            reduce using rule 69 (expresion -> constante .)
    EQUALS          reduce using rule 69 (expresion -> constante .)
    NOTEQUAL        reduce using rule 69 (expresion -> constante .)
    GREATEREQUAL    reduce using rule 69 (expresion -> constante .)
    GREATERTHAN     reduce using rule 69 (expresion -> constante .)
    LESSTHAN        reduce using rule 69 (expresion -> constante .)
    LESSEQUAL       reduce using rule 69 (expresion -> constante .)
    AND             reduce using rule 69 (expresion -> constante .)
    OR              reduce using rule 69 (expresion -> constante .)
    SEMICOLON       reduce using rule 69 (expresion -> constante .)
    RIGHTP          reduce using rule 69 (expresion -> constante .)
    COMMA           reduce using rule 69 (expresion -> constante .)
    RIGHTSB         reduce using rule 69 (expresion -> constante .)


state 77

    (82) constante -> FALSE .

    TIMES           reduce using rule 82 (constante -> FALSE .)
    DIVISION        reduce using rule 82 (constante -> FALSE .)
    SUM             reduce using rule 82 (constante -> FALSE .)
    LESS            reduce using rule 82 (constante -> FALSE .)
    EQUALS          reduce using rule 82 (constante -> FALSE .)
    NOTEQUAL        reduce using rule 82 (constante -> FALSE .)
    GREATEREQUAL    reduce using rule 82 (constante -> FALSE .)
    GREATERTHAN     reduce using rule 82 (constante -> FALSE .)
    LESSTHAN        reduce using rule 82 (constante -> FALSE .)
    LESSEQUAL       reduce using rule 82 (constante -> FALSE .)
    AND             reduce using rule 82 (constante -> FALSE .)
    OR              reduce using rule 82 (constante -> FALSE .)
    SEMICOLON       reduce using rule 82 (constante -> FALSE .)
    RIGHTP          reduce using rule 82 (constante -> FALSE .)
    COMMA           reduce using rule 82 (constante -> FALSE .)
    RIGHTSB         reduce using rule 82 (constante -> FALSE .)


state 78

    (70) expresion -> ID .
    (39) llamada1 -> ID .

    TIMES           reduce using rule 70 (expresion -> ID .)
    DIVISION        reduce using rule 70 (expresion -> ID .)
    SUM             reduce using rule 70 (expresion -> ID .)
    LESS            reduce using rule 70 (expresion -> ID .)
    EQUALS          reduce using rule 70 (expresion -> ID .)
    NOTEQUAL        reduce using rule 70 (expresion -> ID .)
    GREATEREQUAL    reduce using rule 70 (expresion -> ID .)
    GREATERTHAN     reduce using rule 70 (expresion -> ID .)
    LESSTHAN        reduce using rule 70 (expresion -> ID .)
    LESSEQUAL       reduce using rule 70 (expresion -> ID .)
    AND             reduce using rule 70 (expresion -> ID .)
    OR              reduce using rule 70 (expresion -> ID .)
    SEMICOLON       reduce using rule 70 (expresion -> ID .)
    RIGHTP          reduce using rule 70 (expresion -> ID .)
    COMMA           reduce using rule 70 (expresion -> ID .)
    RIGHTSB         reduce using rule 70 (expresion -> ID .)
    LEFTP           reduce using rule 39 (llamada1 -> ID .)


state 79

    (78) constante -> INT_CTE .

    TIMES           reduce using rule 78 (constante -> INT_CTE .)
    DIVISION        reduce using rule 78 (constante -> INT_CTE .)
    SUM             reduce using rule 78 (constante -> INT_CTE .)
    LESS            reduce using rule 78 (constante -> INT_CTE .)
    EQUALS          reduce using rule 78 (constante -> INT_CTE .)
    NOTEQUAL        reduce using rule 78 (constante -> INT_CTE .)
    GREATEREQUAL    reduce using rule 78 (constante -> INT_CTE .)
    GREATERTHAN     reduce using rule 78 (constante -> INT_CTE .)
    LESSTHAN        reduce using rule 78 (constante -> INT_CTE .)
    LESSEQUAL       reduce using rule 78 (constante -> INT_CTE .)
    AND             reduce using rule 78 (constante -> INT_CTE .)
    OR              reduce using rule 78 (constante -> INT_CTE .)
    SEMICOLON       reduce using rule 78 (constante -> INT_CTE .)
    RIGHTP          reduce using rule 78 (constante -> INT_CTE .)
    COMMA           reduce using rule 78 (constante -> INT_CTE .)
    RIGHTSB         reduce using rule 78 (constante -> INT_CTE .)


state 80

    (54) exp -> expresion . exp2
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion
    (56) exp2 -> .

    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96
    EQUALS          shift and go to state 99
    NOTEQUAL        shift and go to state 102
    GREATEREQUAL    shift and go to state 95
    GREATERTHAN     shift and go to state 104
    LESSTHAN        shift and go to state 101
    LESSEQUAL       shift and go to state 103
    AND             shift and go to state 106
    OR              shift and go to state 105
    SEMICOLON       reduce using rule 56 (exp2 -> .)
    RIGHTP          reduce using rule 56 (exp2 -> .)
    COMMA           reduce using rule 56 (exp2 -> .)
    RIGHTSB         reduce using rule 56 (exp2 -> .)

    exp2                           shift and go to state 97

state 81

    (77) constante -> FLOAT_CTE .

    TIMES           reduce using rule 77 (constante -> FLOAT_CTE .)
    DIVISION        reduce using rule 77 (constante -> FLOAT_CTE .)
    SUM             reduce using rule 77 (constante -> FLOAT_CTE .)
    LESS            reduce using rule 77 (constante -> FLOAT_CTE .)
    EQUALS          reduce using rule 77 (constante -> FLOAT_CTE .)
    NOTEQUAL        reduce using rule 77 (constante -> FLOAT_CTE .)
    GREATEREQUAL    reduce using rule 77 (constante -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 77 (constante -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 77 (constante -> FLOAT_CTE .)
    LESSEQUAL       reduce using rule 77 (constante -> FLOAT_CTE .)
    AND             reduce using rule 77 (constante -> FLOAT_CTE .)
    OR              reduce using rule 77 (constante -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 77 (constante -> FLOAT_CTE .)
    RIGHTP          reduce using rule 77 (constante -> FLOAT_CTE .)
    COMMA           reduce using rule 77 (constante -> FLOAT_CTE .)
    RIGHTSB         reduce using rule 77 (constante -> FLOAT_CTE .)


state 82

    (34) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 107


state 83

    (35) return1 -> exp .

    SEMICOLON       reduce using rule 35 (return1 -> exp .)


state 84

    (45) ciclo -> WHILE LEFTP . exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    exp                            shift and go to state 108
    llamada1                       shift and go to state 59

state 85

    (37) escritura -> PRINT LEFTP . exp RIGHTP SEMICOLON
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    exp                            shift and go to state 109
    llamada1                       shift and go to state 59

state 86

    (38) llamada -> llamada1 LEFTP . args RIGHTP
    (40) args -> . exp
    (41) args -> . args COMMA exp
    (42) args -> . empty
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (83) empty -> .
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    RIGHTP          reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    args                           shift and go to state 111
    llamada                        shift and go to state 73
    exp                            shift and go to state 112
    llamada1                       shift and go to state 59
    empty                          shift and go to state 110

state 87

    (32) estatuto -> llamada SEMICOLON .

    IF              reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 32 (estatuto -> llamada SEMICOLON .)
    RIGHTB          reduce using rule 32 (estatuto -> llamada SEMICOLON .)


state 88

    (44) asignacion -> ID LEFTSB . exp RIGHTSB ASSIGN exp SEMICOLON
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    exp                            shift and go to state 113
    llamada1                       shift and go to state 59

state 89

    (36) lectura -> ID ASSIGN . READ LEFTP RIGHTP SEMICOLON
    (43) asignacion -> ID ASSIGN . exp SEMICOLON
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    READ            shift and go to state 114
    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    exp                            shift and go to state 115
    llamada1                       shift and go to state 59

state 90

    (48) condicion -> IF LEFTP . condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> IF LEFTP . condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (50) condicion1 -> . exp
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    condicion1                     shift and go to state 116
    exp                            shift and go to state 117
    llamada1                       shift and go to state 59

state 91

    (70) expresion -> ID .

    TIMES           reduce using rule 70 (expresion -> ID .)
    DIVISION        reduce using rule 70 (expresion -> ID .)
    SUM             reduce using rule 70 (expresion -> ID .)
    LESS            reduce using rule 70 (expresion -> ID .)
    EQUALS          reduce using rule 70 (expresion -> ID .)
    NOTEQUAL        reduce using rule 70 (expresion -> ID .)
    GREATEREQUAL    reduce using rule 70 (expresion -> ID .)
    GREATERTHAN     reduce using rule 70 (expresion -> ID .)
    LESSTHAN        reduce using rule 70 (expresion -> ID .)
    LESSEQUAL       reduce using rule 70 (expresion -> ID .)
    AND             reduce using rule 70 (expresion -> ID .)
    OR              reduce using rule 70 (expresion -> ID .)
    SEMICOLON       reduce using rule 70 (expresion -> ID .)
    RIGHTP          reduce using rule 70 (expresion -> ID .)
    COMMA           reduce using rule 70 (expresion -> ID .)
    RIGHTSB         reduce using rule 70 (expresion -> ID .)


state 92

    (71) expresion -> LEFTP expresion . RIGHTP
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    RIGHTP          shift and go to state 118
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96
    EQUALS          shift and go to state 99
    NOTEQUAL        shift and go to state 102
    GREATEREQUAL    shift and go to state 95
    GREATERTHAN     shift and go to state 104
    LESSTHAN        shift and go to state 101
    LESSEQUAL       shift and go to state 103
    AND             shift and go to state 106
    OR              shift and go to state 105


state 93

    (53) exp -> llamada exp1 .

    SEMICOLON       reduce using rule 53 (exp -> llamada exp1 .)
    RIGHTP          reduce using rule 53 (exp -> llamada exp1 .)
    COMMA           reduce using rule 53 (exp -> llamada exp1 .)
    RIGHTSB         reduce using rule 53 (exp -> llamada exp1 .)


state 94

    (58) expresion -> expresion DIVISION . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 119
    constante                      shift and go to state 76

state 95

    (63) expresion -> expresion GREATEREQUAL . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 120
    constante                      shift and go to state 76

state 96

    (60) expresion -> expresion LESS . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 121
    constante                      shift and go to state 76

state 97

    (54) exp -> expresion exp2 .

    SEMICOLON       reduce using rule 54 (exp -> expresion exp2 .)
    RIGHTP          reduce using rule 54 (exp -> expresion exp2 .)
    COMMA           reduce using rule 54 (exp -> expresion exp2 .)
    RIGHTSB         reduce using rule 54 (exp -> expresion exp2 .)


state 98

    (59) expresion -> expresion SUM . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 122
    constante                      shift and go to state 76

state 99

    (61) expresion -> expresion EQUALS . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 123
    constante                      shift and go to state 76

state 100

    (57) expresion -> expresion TIMES . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 124
    constante                      shift and go to state 76

state 101

    (65) expresion -> expresion LESSTHAN . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 125
    constante                      shift and go to state 76

state 102

    (62) expresion -> expresion NOTEQUAL . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 126
    constante                      shift and go to state 76

state 103

    (66) expresion -> expresion LESSEQUAL . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 127
    constante                      shift and go to state 76

state 104

    (64) expresion -> expresion GREATERTHAN . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 128
    constante                      shift and go to state 76

state 105

    (68) expresion -> expresion OR . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 129
    constante                      shift and go to state 76

state 106

    (67) expresion -> expresion AND . expresion
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 91
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 130
    constante                      shift and go to state 76

state 107

    (34) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 34 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 34 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 34 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 34 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 34 (return -> RETURN return1 SEMICOLON .)
    RIGHTB          reduce using rule 34 (return -> RETURN return1 SEMICOLON .)


state 108

    (45) ciclo -> WHILE LEFTP exp . RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB

    RIGHTP          shift and go to state 131


state 109

    (37) escritura -> PRINT LEFTP exp . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 132


state 110

    (42) args -> empty .

    RIGHTP          reduce using rule 42 (args -> empty .)
    COMMA           reduce using rule 42 (args -> empty .)


state 111

    (38) llamada -> llamada1 LEFTP args . RIGHTP
    (41) args -> args . COMMA exp

    RIGHTP          shift and go to state 133
    COMMA           shift and go to state 134


state 112

    (40) args -> exp .

    RIGHTP          reduce using rule 40 (args -> exp .)
    COMMA           reduce using rule 40 (args -> exp .)


state 113

    (44) asignacion -> ID LEFTSB exp . RIGHTSB ASSIGN exp SEMICOLON

    RIGHTSB         shift and go to state 135


state 114

    (36) lectura -> ID ASSIGN READ . LEFTP RIGHTP SEMICOLON

    LEFTP           shift and go to state 136


state 115

    (43) asignacion -> ID ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 137


state 116

    (48) condicion -> IF LEFTP condicion1 . RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> IF LEFTP condicion1 . RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    RIGHTP          shift and go to state 138


state 117

    (50) condicion1 -> exp .

    RIGHTP          reduce using rule 50 (condicion1 -> exp .)


state 118

    (71) expresion -> LEFTP expresion RIGHTP .

    TIMES           reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    DIVISION        reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    SUM             reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    LESS            reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    EQUALS          reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    NOTEQUAL        reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    GREATEREQUAL    reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    GREATERTHAN     reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    LESSTHAN        reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    LESSEQUAL       reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    AND             reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    OR              reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    SEMICOLON       reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    RIGHTP          reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    COMMA           reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)
    RIGHTSB         reduce using rule 71 (expresion -> LEFTP expresion RIGHTP .)


state 119

    (58) expresion -> expresion DIVISION expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    TIMES           reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    SUM             reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    LESS            reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    EQUALS          reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    NOTEQUAL        reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    GREATEREQUAL    reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    GREATERTHAN     reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    LESSTHAN        reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    LESSEQUAL       reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    SEMICOLON       reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    RIGHTP          reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    COMMA           reduce using rule 58 (expresion -> expresion DIVISION expresion .)
    RIGHTSB         reduce using rule 58 (expresion -> expresion DIVISION expresion .)

  ! TIMES           [ shift and go to state 100 ]
  ! DIVISION        [ shift and go to state 94 ]
  ! SUM             [ shift and go to state 98 ]
  ! LESS            [ shift and go to state 96 ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 120

    (63) expresion -> expresion GREATEREQUAL expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    NOTEQUAL        reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    GREATEREQUAL    reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    GREATERTHAN     reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    LESSTHAN        reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    LESSEQUAL       reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    AND             reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    OR              reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    SEMICOLON       reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    RIGHTP          reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    COMMA           reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    RIGHTSB         reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96

  ! TIMES           [ reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! SUM             [ reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! LESS            [ reduce using rule 63 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 121

    (60) expresion -> expresion LESS expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    SUM             reduce using rule 60 (expresion -> expresion LESS expresion .)
    LESS            reduce using rule 60 (expresion -> expresion LESS expresion .)
    EQUALS          reduce using rule 60 (expresion -> expresion LESS expresion .)
    NOTEQUAL        reduce using rule 60 (expresion -> expresion LESS expresion .)
    GREATEREQUAL    reduce using rule 60 (expresion -> expresion LESS expresion .)
    GREATERTHAN     reduce using rule 60 (expresion -> expresion LESS expresion .)
    LESSTHAN        reduce using rule 60 (expresion -> expresion LESS expresion .)
    LESSEQUAL       reduce using rule 60 (expresion -> expresion LESS expresion .)
    AND             reduce using rule 60 (expresion -> expresion LESS expresion .)
    OR              reduce using rule 60 (expresion -> expresion LESS expresion .)
    SEMICOLON       reduce using rule 60 (expresion -> expresion LESS expresion .)
    RIGHTP          reduce using rule 60 (expresion -> expresion LESS expresion .)
    COMMA           reduce using rule 60 (expresion -> expresion LESS expresion .)
    RIGHTSB         reduce using rule 60 (expresion -> expresion LESS expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94

  ! TIMES           [ reduce using rule 60 (expresion -> expresion LESS expresion .) ]
  ! DIVISION        [ reduce using rule 60 (expresion -> expresion LESS expresion .) ]
  ! SUM             [ shift and go to state 98 ]
  ! LESS            [ shift and go to state 96 ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 122

    (59) expresion -> expresion SUM expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    SUM             reduce using rule 59 (expresion -> expresion SUM expresion .)
    LESS            reduce using rule 59 (expresion -> expresion SUM expresion .)
    EQUALS          reduce using rule 59 (expresion -> expresion SUM expresion .)
    NOTEQUAL        reduce using rule 59 (expresion -> expresion SUM expresion .)
    GREATEREQUAL    reduce using rule 59 (expresion -> expresion SUM expresion .)
    GREATERTHAN     reduce using rule 59 (expresion -> expresion SUM expresion .)
    LESSTHAN        reduce using rule 59 (expresion -> expresion SUM expresion .)
    LESSEQUAL       reduce using rule 59 (expresion -> expresion SUM expresion .)
    AND             reduce using rule 59 (expresion -> expresion SUM expresion .)
    OR              reduce using rule 59 (expresion -> expresion SUM expresion .)
    SEMICOLON       reduce using rule 59 (expresion -> expresion SUM expresion .)
    RIGHTP          reduce using rule 59 (expresion -> expresion SUM expresion .)
    COMMA           reduce using rule 59 (expresion -> expresion SUM expresion .)
    RIGHTSB         reduce using rule 59 (expresion -> expresion SUM expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94

  ! TIMES           [ reduce using rule 59 (expresion -> expresion SUM expresion .) ]
  ! DIVISION        [ reduce using rule 59 (expresion -> expresion SUM expresion .) ]
  ! SUM             [ shift and go to state 98 ]
  ! LESS            [ shift and go to state 96 ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 123

    (61) expresion -> expresion EQUALS expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    NOTEQUAL        reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    AND             reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    OR              reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    SEMICOLON       reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    RIGHTP          reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    COMMA           reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    RIGHTSB         reduce using rule 61 (expresion -> expresion EQUALS expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96
    GREATEREQUAL    shift and go to state 95
    GREATERTHAN     shift and go to state 104
    LESSTHAN        shift and go to state 101
    LESSEQUAL       shift and go to state 103

  ! TIMES           [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! DIVISION        [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! SUM             [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! LESS            [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! GREATERTHAN     [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! LESSTHAN        [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! LESSEQUAL       [ reduce using rule 61 (expresion -> expresion EQUALS expresion .) ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 124

    (57) expresion -> expresion TIMES expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    TIMES           reduce using rule 57 (expresion -> expresion TIMES expresion .)
    DIVISION        reduce using rule 57 (expresion -> expresion TIMES expresion .)
    SUM             reduce using rule 57 (expresion -> expresion TIMES expresion .)
    LESS            reduce using rule 57 (expresion -> expresion TIMES expresion .)
    EQUALS          reduce using rule 57 (expresion -> expresion TIMES expresion .)
    NOTEQUAL        reduce using rule 57 (expresion -> expresion TIMES expresion .)
    GREATEREQUAL    reduce using rule 57 (expresion -> expresion TIMES expresion .)
    GREATERTHAN     reduce using rule 57 (expresion -> expresion TIMES expresion .)
    LESSTHAN        reduce using rule 57 (expresion -> expresion TIMES expresion .)
    LESSEQUAL       reduce using rule 57 (expresion -> expresion TIMES expresion .)
    AND             reduce using rule 57 (expresion -> expresion TIMES expresion .)
    OR              reduce using rule 57 (expresion -> expresion TIMES expresion .)
    SEMICOLON       reduce using rule 57 (expresion -> expresion TIMES expresion .)
    RIGHTP          reduce using rule 57 (expresion -> expresion TIMES expresion .)
    COMMA           reduce using rule 57 (expresion -> expresion TIMES expresion .)
    RIGHTSB         reduce using rule 57 (expresion -> expresion TIMES expresion .)

  ! TIMES           [ shift and go to state 100 ]
  ! DIVISION        [ shift and go to state 94 ]
  ! SUM             [ shift and go to state 98 ]
  ! LESS            [ shift and go to state 96 ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 125

    (65) expresion -> expresion LESSTHAN expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    NOTEQUAL        reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    GREATEREQUAL    reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    GREATERTHAN     reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    LESSTHAN        reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    LESSEQUAL       reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    AND             reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    OR              reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    SEMICOLON       reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    RIGHTP          reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    COMMA           reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    RIGHTSB         reduce using rule 65 (expresion -> expresion LESSTHAN expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96

  ! TIMES           [ reduce using rule 65 (expresion -> expresion LESSTHAN expresion .) ]
  ! DIVISION        [ reduce using rule 65 (expresion -> expresion LESSTHAN expresion .) ]
  ! SUM             [ reduce using rule 65 (expresion -> expresion LESSTHAN expresion .) ]
  ! LESS            [ reduce using rule 65 (expresion -> expresion LESSTHAN expresion .) ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 126

    (62) expresion -> expresion NOTEQUAL expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    NOTEQUAL        reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    AND             reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    OR              reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    SEMICOLON       reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    RIGHTP          reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    COMMA           reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    RIGHTSB         reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96
    GREATEREQUAL    shift and go to state 95
    GREATERTHAN     shift and go to state 104
    LESSTHAN        shift and go to state 101
    LESSEQUAL       shift and go to state 103

  ! TIMES           [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! SUM             [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESS            [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! GREATERTHAN     [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESSTHAN        [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESSEQUAL       [ reduce using rule 62 (expresion -> expresion NOTEQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 127

    (66) expresion -> expresion LESSEQUAL expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    NOTEQUAL        reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    GREATEREQUAL    reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    GREATERTHAN     reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    LESSTHAN        reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    LESSEQUAL       reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    AND             reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    OR              reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    SEMICOLON       reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    RIGHTP          reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    COMMA           reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    RIGHTSB         reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96

  ! TIMES           [ reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .) ]
  ! SUM             [ reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .) ]
  ! LESS            [ reduce using rule 66 (expresion -> expresion LESSEQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 128

    (64) expresion -> expresion GREATERTHAN expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    NOTEQUAL        reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    GREATEREQUAL    reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    GREATERTHAN     reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    LESSTHAN        reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    LESSEQUAL       reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    AND             reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    OR              reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    SEMICOLON       reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    RIGHTP          reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    COMMA           reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    RIGHTSB         reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96

  ! TIMES           [ reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .) ]
  ! DIVISION        [ reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .) ]
  ! SUM             [ reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .) ]
  ! LESS            [ reduce using rule 64 (expresion -> expresion GREATERTHAN expresion .) ]
  ! EQUALS          [ shift and go to state 99 ]
  ! NOTEQUAL        [ shift and go to state 102 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! GREATERTHAN     [ shift and go to state 104 ]
  ! LESSTHAN        [ shift and go to state 101 ]
  ! LESSEQUAL       [ shift and go to state 103 ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 129

    (68) expresion -> expresion OR expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    AND             reduce using rule 68 (expresion -> expresion OR expresion .)
    OR              reduce using rule 68 (expresion -> expresion OR expresion .)
    SEMICOLON       reduce using rule 68 (expresion -> expresion OR expresion .)
    RIGHTP          reduce using rule 68 (expresion -> expresion OR expresion .)
    COMMA           reduce using rule 68 (expresion -> expresion OR expresion .)
    RIGHTSB         reduce using rule 68 (expresion -> expresion OR expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96
    EQUALS          shift and go to state 99
    NOTEQUAL        shift and go to state 102
    GREATEREQUAL    shift and go to state 95
    GREATERTHAN     shift and go to state 104
    LESSTHAN        shift and go to state 101
    LESSEQUAL       shift and go to state 103

  ! TIMES           [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! SUM             [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! LESS            [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! EQUALS          [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! NOTEQUAL        [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! GREATERTHAN     [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! LESSTHAN        [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! LESSEQUAL       [ reduce using rule 68 (expresion -> expresion OR expresion .) ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 130

    (67) expresion -> expresion AND expresion .
    (57) expresion -> expresion . TIMES expresion
    (58) expresion -> expresion . DIVISION expresion
    (59) expresion -> expresion . SUM expresion
    (60) expresion -> expresion . LESS expresion
    (61) expresion -> expresion . EQUALS expresion
    (62) expresion -> expresion . NOTEQUAL expresion
    (63) expresion -> expresion . GREATEREQUAL expresion
    (64) expresion -> expresion . GREATERTHAN expresion
    (65) expresion -> expresion . LESSTHAN expresion
    (66) expresion -> expresion . LESSEQUAL expresion
    (67) expresion -> expresion . AND expresion
    (68) expresion -> expresion . OR expresion

    AND             reduce using rule 67 (expresion -> expresion AND expresion .)
    OR              reduce using rule 67 (expresion -> expresion AND expresion .)
    SEMICOLON       reduce using rule 67 (expresion -> expresion AND expresion .)
    RIGHTP          reduce using rule 67 (expresion -> expresion AND expresion .)
    COMMA           reduce using rule 67 (expresion -> expresion AND expresion .)
    RIGHTSB         reduce using rule 67 (expresion -> expresion AND expresion .)
    TIMES           shift and go to state 100
    DIVISION        shift and go to state 94
    SUM             shift and go to state 98
    LESS            shift and go to state 96
    EQUALS          shift and go to state 99
    NOTEQUAL        shift and go to state 102
    GREATEREQUAL    shift and go to state 95
    GREATERTHAN     shift and go to state 104
    LESSTHAN        shift and go to state 101
    LESSEQUAL       shift and go to state 103

  ! TIMES           [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! SUM             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! LESS            [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! EQUALS          [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! NOTEQUAL        [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! GREATERTHAN     [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! LESSTHAN        [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! LESSEQUAL       [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 105 ]


state 131

    (45) ciclo -> WHILE LEFTP exp RIGHTP . ciclo1 LEFTB bloque ciclo2 RIGHTB
    (46) ciclo1 -> .

    LEFTB           reduce using rule 46 (ciclo1 -> .)

    ciclo1                         shift and go to state 139

state 132

    (37) escritura -> PRINT LEFTP exp RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 140


state 133

    (38) llamada -> llamada1 LEFTP args RIGHTP .

    SEMICOLON       reduce using rule 38 (llamada -> llamada1 LEFTP args RIGHTP .)
    RIGHTP          reduce using rule 38 (llamada -> llamada1 LEFTP args RIGHTP .)
    RIGHTSB         reduce using rule 38 (llamada -> llamada1 LEFTP args RIGHTP .)
    COMMA           reduce using rule 38 (llamada -> llamada1 LEFTP args RIGHTP .)


state 134

    (41) args -> args COMMA . exp
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    exp                            shift and go to state 141
    llamada1                       shift and go to state 59

state 135

    (44) asignacion -> ID LEFTSB exp RIGHTSB . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 142


state 136

    (36) lectura -> ID ASSIGN READ LEFTP . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 143


state 137

    (43) asignacion -> ID ASSIGN exp SEMICOLON .

    RIGHTB          reduce using rule 43 (asignacion -> ID ASSIGN exp SEMICOLON .)
    IF              reduce using rule 43 (asignacion -> ID ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 43 (asignacion -> ID ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 43 (asignacion -> ID ASSIGN exp SEMICOLON .)
    ID              reduce using rule 43 (asignacion -> ID ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 43 (asignacion -> ID ASSIGN exp SEMICOLON .)


state 138

    (48) condicion -> IF LEFTP condicion1 RIGHTP . condicion2 LEFTB bloque RIGHTB
    (49) condicion -> IF LEFTP condicion1 RIGHTP . condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (51) condicion2 -> .

    LEFTB           reduce using rule 51 (condicion2 -> .)

    condicion2                     shift and go to state 144

state 139

    (45) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 . LEFTB bloque ciclo2 RIGHTB

    LEFTB           shift and go to state 145


state 140

    (37) escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .

    RIGHTB          reduce using rule 37 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    IF              reduce using rule 37 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    WHILE           reduce using rule 37 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RETURN          reduce using rule 37 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    ID              reduce using rule 37 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    PRINT           reduce using rule 37 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)


state 141

    (41) args -> args COMMA exp .

    RIGHTP          reduce using rule 41 (args -> args COMMA exp .)
    COMMA           reduce using rule 41 (args -> args COMMA exp .)


state 142

    (44) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN . exp SEMICOLON
    (53) exp -> . llamada exp1
    (54) exp -> . expresion exp2
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (57) expresion -> . expresion TIMES expresion
    (58) expresion -> . expresion DIVISION expresion
    (59) expresion -> . expresion SUM expresion
    (60) expresion -> . expresion LESS expresion
    (61) expresion -> . expresion EQUALS expresion
    (62) expresion -> . expresion NOTEQUAL expresion
    (63) expresion -> . expresion GREATEREQUAL expresion
    (64) expresion -> . expresion GREATERTHAN expresion
    (65) expresion -> . expresion LESSTHAN expresion
    (66) expresion -> . expresion LESSEQUAL expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . expresion OR expresion
    (69) expresion -> . constante
    (70) expresion -> . ID
    (71) expresion -> . LEFTP expresion RIGHTP
    (39) llamada1 -> . ID
    (77) constante -> . FLOAT_CTE
    (78) constante -> . INT_CTE
    (79) constante -> . CHAR_CTE
    (80) constante -> . STRING_CTE
    (81) constante -> . TRUE
    (82) constante -> . FALSE

    ID              shift and go to state 78
    LEFTP           shift and go to state 72
    FLOAT_CTE       shift and go to state 81
    INT_CTE         shift and go to state 79
    CHAR_CTE        shift and go to state 74
    STRING_CTE      shift and go to state 75
    TRUE            shift and go to state 71
    FALSE           shift and go to state 77

    expresion                      shift and go to state 80
    constante                      shift and go to state 76
    llamada                        shift and go to state 73
    exp                            shift and go to state 146
    llamada1                       shift and go to state 59

state 143

    (36) lectura -> ID ASSIGN READ LEFTP RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 147


state 144

    (48) condicion -> IF LEFTP condicion1 RIGHTP condicion2 . LEFTB bloque RIGHTB
    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 . LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    LEFTB           shift and go to state 148


state 145

    (45) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB . bloque ciclo2 RIGHTB
    (25) bloque -> . bloque estatuto
    (26) bloque -> . empty
    (83) empty -> .

    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)
    ID              reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)
    RIGHTB          reduce using rule 83 (empty -> .)

    bloque                         shift and go to state 149
    empty                          shift and go to state 55

state 146

    (44) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 150


state 147

    (36) lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .

    RIGHTB          reduce using rule 36 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    IF              reduce using rule 36 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    WHILE           reduce using rule 36 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RETURN          reduce using rule 36 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    ID              reduce using rule 36 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    PRINT           reduce using rule 36 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)


state 148

    (48) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB . bloque RIGHTB
    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB . bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (25) bloque -> . bloque estatuto
    (26) bloque -> . empty
    (83) empty -> .

    RIGHTB          reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)
    ID              reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)

    bloque                         shift and go to state 151
    empty                          shift and go to state 55

state 149

    (45) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque . ciclo2 RIGHTB
    (25) bloque -> bloque . estatuto
    (47) ciclo2 -> .
    (27) estatuto -> . condicion
    (28) estatuto -> . ciclo
    (29) estatuto -> . return
    (30) estatuto -> . lectura
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . asignacion
    (48) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (45) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (34) return -> . RETURN return1 SEMICOLON
    (36) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (37) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (43) asignacion -> . ID ASSIGN exp SEMICOLON
    (44) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (39) llamada1 -> . ID

    RIGHTB          reduce using rule 47 (ciclo2 -> .)
    IF              shift and go to state 67
    WHILE           shift and go to state 57
    RETURN          shift and go to state 56
    ID              shift and go to state 66
    PRINT           shift and go to state 58

    return                         shift and go to state 65
    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 68
    estatuto                       shift and go to state 61
    llamada                        shift and go to state 62
    condicion                      shift and go to state 63
    ciclo2                         shift and go to state 152
    llamada1                       shift and go to state 59
    lectura                        shift and go to state 64
    escritura                      shift and go to state 70

state 150

    (44) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .

    RIGHTB          reduce using rule 44 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    IF              reduce using rule 44 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 44 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 44 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    ID              reduce using rule 44 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 44 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)


state 151

    (48) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque . RIGHTB
    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque . RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (25) bloque -> bloque . estatuto
    (27) estatuto -> . condicion
    (28) estatuto -> . ciclo
    (29) estatuto -> . return
    (30) estatuto -> . lectura
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . asignacion
    (48) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (45) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (34) return -> . RETURN return1 SEMICOLON
    (36) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (37) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (43) asignacion -> . ID ASSIGN exp SEMICOLON
    (44) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (39) llamada1 -> . ID

    RIGHTB          shift and go to state 153
    IF              shift and go to state 67
    WHILE           shift and go to state 57
    RETURN          shift and go to state 56
    ID              shift and go to state 66
    PRINT           shift and go to state 58

    llamada1                       shift and go to state 59
    return                         shift and go to state 65
    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 68
    estatuto                       shift and go to state 61
    llamada                        shift and go to state 62
    condicion                      shift and go to state 63
    lectura                        shift and go to state 64
    escritura                      shift and go to state 70

state 152

    (45) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 . RIGHTB

    RIGHTB          shift and go to state 154


state 153

    (48) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .
    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB . condicion3 ELSE LEFTB bloque RIGHTB
    (52) condicion3 -> .

    RIGHTB          reduce using rule 48 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    IF              reduce using rule 48 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    WHILE           reduce using rule 48 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    RETURN          reduce using rule 48 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    ID              reduce using rule 48 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    PRINT           reduce using rule 48 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    ELSE            reduce using rule 52 (condicion3 -> .)

    condicion3                     shift and go to state 155

state 154

    (45) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .

    IF              reduce using rule 45 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    WHILE           reduce using rule 45 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    RETURN          reduce using rule 45 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    ID              reduce using rule 45 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    PRINT           reduce using rule 45 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    RIGHTB          reduce using rule 45 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)


state 155

    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 . ELSE LEFTB bloque RIGHTB

    ELSE            shift and go to state 156


state 156

    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE . LEFTB bloque RIGHTB

    LEFTB           shift and go to state 157


state 157

    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB . bloque RIGHTB
    (25) bloque -> . bloque estatuto
    (26) bloque -> . empty
    (83) empty -> .

    RIGHTB          reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)
    ID              reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)

    bloque                         shift and go to state 158
    empty                          shift and go to state 55

state 158

    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque . RIGHTB
    (25) bloque -> bloque . estatuto
    (27) estatuto -> . condicion
    (28) estatuto -> . ciclo
    (29) estatuto -> . return
    (30) estatuto -> . lectura
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada SEMICOLON
    (33) estatuto -> . asignacion
    (48) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (49) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (45) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (34) return -> . RETURN return1 SEMICOLON
    (36) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (37) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (38) llamada -> . llamada1 LEFTP args RIGHTP
    (43) asignacion -> . ID ASSIGN exp SEMICOLON
    (44) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (39) llamada1 -> . ID

    RIGHTB          shift and go to state 159
    IF              shift and go to state 67
    WHILE           shift and go to state 57
    RETURN          shift and go to state 56
    ID              shift and go to state 66
    PRINT           shift and go to state 58

    llamada1                       shift and go to state 59
    return                         shift and go to state 65
    ciclo                          shift and go to state 60
    asignacion                     shift and go to state 68
    estatuto                       shift and go to state 61
    llamada                        shift and go to state 62
    condicion                      shift and go to state 63
    lectura                        shift and go to state 64
    escritura                      shift and go to state 70

state 159

    (49) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .

    RIGHTB          reduce using rule 49 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    IF              reduce using rule 49 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    WHILE           reduce using rule 49 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    RETURN          reduce using rule 49 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    ID              reduce using rule 49 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    PRINT           reduce using rule 49 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)

