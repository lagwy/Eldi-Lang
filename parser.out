Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> goto_main add_globales metodos
Rule 2     goto_main -> <empty>
Rule 3     add_globales -> variables_list
Rule 4     variables_list -> variables_list variables
Rule 5     variables_list -> empty
Rule 6     variables -> VAR tipo ID lista_variables SEMICOLON
Rule 7     variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
Rule 8     lista_variables -> COMMA ID lista_variables
Rule 9     lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
Rule 10    lista_variables -> empty
Rule 11    metodos -> metodos metodo
Rule 12    metodos -> empty
Rule 13    metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method
Rule 14    inicio_method -> <empty>
Rule 15    end_method -> <empty>
Rule 16    metodo1 -> MAIN
Rule 17    metodo1 -> ID
Rule 18    save_params -> params
Rule 19    tipo_metodo -> VOID
Rule 20    tipo_metodo -> tipo
Rule 21    add_method -> <empty>
Rule 22    method_vars -> variables_list
Rule 23    params -> params parametro
Rule 24    params -> params COMMA parametro
Rule 25    params -> empty
Rule 26    parametro -> tipo ID
Rule 27    bloque -> bloque estatuto
Rule 28    bloque -> empty
Rule 29    estatuto -> condicion
Rule 30    estatuto -> ciclo
Rule 31    estatuto -> return
Rule 32    estatuto -> lectura
Rule 33    estatuto -> escritura
Rule 34    estatuto -> llamada SEMICOLON
Rule 35    estatuto -> asignacion
Rule 36    return -> RETURN return1 SEMICOLON
Rule 37    return1 -> exp
Rule 38    lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON
Rule 39    escritura -> PRINT LEFTP exp RIGHTP SEMICOLON
Rule 40    llamada -> llamada1 LEFTP args RIGHTP
Rule 41    llamada1 -> ID
Rule 42    args -> exp
Rule 43    args -> args COMMA exp
Rule 44    args -> empty
Rule 45    asignacion -> ID ASSIGN exp SEMICOLON
Rule 46    asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
Rule 47    ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
Rule 48    ciclo1 -> <empty>
Rule 49    ciclo2 -> <empty>
Rule 50    condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
Rule 51    condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
Rule 52    condicion1 -> exp
Rule 53    condicion2 -> <empty>
Rule 54    condicion3 -> <empty>
Rule 55    exp -> llamada exp1
Rule 56    exp -> expresion exp2
Rule 57    exp1 -> <empty>
Rule 58    exp2 -> <empty>
Rule 59    expresion -> expresion TIMES expresion
Rule 60    expresion -> expresion DIVISION expresion
Rule 61    expresion -> expresion SUM expresion
Rule 62    expresion -> expresion LESS expresion
Rule 63    expresion -> expresion EQUALS expresion
Rule 64    expresion -> expresion NOTEQUAL expresion
Rule 65    expresion -> expresion GREATEREQUAL expresion
Rule 66    expresion -> expresion GREATERTHAN expresion
Rule 67    expresion -> expresion LESSTHAN expresion
Rule 68    expresion -> expresion LESSEQUAL expresion
Rule 69    expresion -> expresion AND expresion
Rule 70    expresion -> expresion OR expresion
Rule 71    expresion -> constante
Rule 72    expresion -> ID
Rule 73    expresion -> LEFTP expresion RIGHTP
Rule 74    tipo -> INT
Rule 75    tipo -> CHAR
Rule 76    tipo -> BOOLEAN
Rule 77    tipo -> FLOAT
Rule 78    tipo -> STRING
Rule 79    constante -> FLOAT_CTE
Rule 80    constante -> INT_CTE
Rule 81    constante -> CHAR_CTE
Rule 82    constante -> STRING_CTE
Rule 83    constante -> TRUE
Rule 84    constante -> FALSE
Rule 85    empty -> <empty>

Terminals, with rules where they appear

AND                  : 69
ASSIGN               : 38 45 46
BOOLEAN              : 76
CHAR                 : 75
CHAR_CTE             : 81
COMMA                : 8 9 24 43
DIVISION             : 60
ELSE                 : 51
EQUALS               : 63
FALSE                : 84
FLOAT                : 77
FLOAT_CTE            : 79
GREATEREQUAL         : 65
GREATERTHAN          : 66
ID                   : 6 7 8 9 17 26 38 41 45 46 72
IF                   : 50 51
INT                  : 74
INT_CTE              : 7 9 80
LEFTB                : 13 47 50 51 51
LEFTP                : 13 38 39 40 47 50 51 73
LEFTSB               : 7 9 46
LESS                 : 62
LESSEQUAL            : 68
LESSTHAN             : 67
MAIN                 : 16
METHOD               : 13
NOTEQUAL             : 64
OR                   : 70
PRINT                : 39
READ                 : 38
RETURN               : 36
RIGHTB               : 13 47 50 51 51
RIGHTP               : 13 38 39 40 47 50 51 73
RIGHTSB              : 7 9 46
SEMICOLON            : 6 7 34 36 38 39 45 46
STRING               : 78
STRING_CTE           : 82
SUM                  : 61
TIMES                : 59
TRUE                 : 83
VAR                  : 6 7
VOID                 : 19
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

add_globales         : 1
add_method           : 13
args                 : 40 43
asignacion           : 35
bloque               : 13 27 47 50 51 51
ciclo                : 30
ciclo1               : 47
ciclo2               : 47
condicion            : 29
condicion1           : 50 51
condicion2           : 50 51
condicion3           : 51
constante            : 71
empty                : 5 10 12 25 28 44
end_method           : 13
escritura            : 33
estatuto             : 27
exp                  : 37 39 42 43 45 46 46 47 52
exp1                 : 55
exp2                 : 56
expresion            : 56 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 73
goto_main            : 1
inicio_method        : 13
lectura              : 32
lista_variables      : 6 7 8 9
llamada              : 34 55
llamada1             : 40
method_vars          : 13
metodo               : 11
metodo1              : 13
metodos              : 1 11
parametro            : 23 24
params               : 18 23 24
programa             : 0
return               : 31
return1              : 36
save_params          : 13
tipo                 : 6 7 20 26
tipo_metodo          : 13
variables            : 4
variables_list       : 3 4 22

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . goto_main add_globales metodos
    (2) goto_main -> .

    METHOD          reduce using rule 2 (goto_main -> .)
    VAR             reduce using rule 2 (goto_main -> .)
    $end            reduce using rule 2 (goto_main -> .)

    goto_main                      shift and go to state 1
    programa                       shift and go to state 2

state 1

    (1) programa -> goto_main . add_globales metodos
    (3) add_globales -> . variables_list
    (4) variables_list -> . variables_list variables
    (5) variables_list -> . empty
    (85) empty -> .

    VAR             reduce using rule 85 (empty -> .)
    METHOD          reduce using rule 85 (empty -> .)
    $end            reduce using rule 85 (empty -> .)

    variables_list                 shift and go to state 3
    add_globales                   shift and go to state 4
    empty                          shift and go to state 5

state 2

    (0) S' -> programa .



state 3

    (3) add_globales -> variables_list .
    (4) variables_list -> variables_list . variables
    (6) variables -> . VAR tipo ID lista_variables SEMICOLON
    (7) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    METHOD          reduce using rule 3 (add_globales -> variables_list .)
    $end            reduce using rule 3 (add_globales -> variables_list .)
    VAR             shift and go to state 7

    variables                      shift and go to state 6

state 4

    (1) programa -> goto_main add_globales . metodos
    (11) metodos -> . metodos metodo
    (12) metodos -> . empty
    (85) empty -> .

    METHOD          reduce using rule 85 (empty -> .)
    $end            reduce using rule 85 (empty -> .)

    metodos                        shift and go to state 8
    empty                          shift and go to state 9

state 5

    (5) variables_list -> empty .

    VAR             reduce using rule 5 (variables_list -> empty .)
    METHOD          reduce using rule 5 (variables_list -> empty .)
    $end            reduce using rule 5 (variables_list -> empty .)
    RIGHTB          reduce using rule 5 (variables_list -> empty .)
    IF              reduce using rule 5 (variables_list -> empty .)
    WHILE           reduce using rule 5 (variables_list -> empty .)
    RETURN          reduce using rule 5 (variables_list -> empty .)
    ID              reduce using rule 5 (variables_list -> empty .)
    PRINT           reduce using rule 5 (variables_list -> empty .)


state 6

    (4) variables_list -> variables_list variables .

    VAR             reduce using rule 4 (variables_list -> variables_list variables .)
    METHOD          reduce using rule 4 (variables_list -> variables_list variables .)
    $end            reduce using rule 4 (variables_list -> variables_list variables .)
    RIGHTB          reduce using rule 4 (variables_list -> variables_list variables .)
    IF              reduce using rule 4 (variables_list -> variables_list variables .)
    WHILE           reduce using rule 4 (variables_list -> variables_list variables .)
    RETURN          reduce using rule 4 (variables_list -> variables_list variables .)
    ID              reduce using rule 4 (variables_list -> variables_list variables .)
    PRINT           reduce using rule 4 (variables_list -> variables_list variables .)


state 7

    (6) variables -> VAR . tipo ID lista_variables SEMICOLON
    (7) variables -> VAR . tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (74) tipo -> . INT
    (75) tipo -> . CHAR
    (76) tipo -> . BOOLEAN
    (77) tipo -> . FLOAT
    (78) tipo -> . STRING

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    tipo                           shift and go to state 11

state 8

    (1) programa -> goto_main add_globales metodos .
    (11) metodos -> metodos . metodo
    (13) metodo -> . inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method
    (14) inicio_method -> .

    $end            reduce using rule 1 (programa -> goto_main add_globales metodos .)
    METHOD          reduce using rule 14 (inicio_method -> .)

    metodo                         shift and go to state 16
    inicio_method                  shift and go to state 17

state 9

    (12) metodos -> empty .

    METHOD          reduce using rule 12 (metodos -> empty .)
    $end            reduce using rule 12 (metodos -> empty .)


state 10

    (77) tipo -> FLOAT .

    ID              reduce using rule 77 (tipo -> FLOAT .)
    MAIN            reduce using rule 77 (tipo -> FLOAT .)


state 11

    (6) variables -> VAR tipo . ID lista_variables SEMICOLON
    (7) variables -> VAR tipo . ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    ID              shift and go to state 18


state 12

    (74) tipo -> INT .

    ID              reduce using rule 74 (tipo -> INT .)
    MAIN            reduce using rule 74 (tipo -> INT .)


state 13

    (75) tipo -> CHAR .

    ID              reduce using rule 75 (tipo -> CHAR .)
    MAIN            reduce using rule 75 (tipo -> CHAR .)


state 14

    (76) tipo -> BOOLEAN .

    ID              reduce using rule 76 (tipo -> BOOLEAN .)
    MAIN            reduce using rule 76 (tipo -> BOOLEAN .)


state 15

    (78) tipo -> STRING .

    ID              reduce using rule 78 (tipo -> STRING .)
    MAIN            reduce using rule 78 (tipo -> STRING .)


state 16

    (11) metodos -> metodos metodo .

    METHOD          reduce using rule 11 (metodos -> metodos metodo .)
    $end            reduce using rule 11 (metodos -> metodos metodo .)


state 17

    (13) metodo -> inicio_method . METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method

    METHOD          shift and go to state 19


state 18

    (6) variables -> VAR tipo ID . lista_variables SEMICOLON
    (7) variables -> VAR tipo ID . LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (85) empty -> .

    LEFTSB          shift and go to state 20
    COMMA           shift and go to state 22
    SEMICOLON       reduce using rule 85 (empty -> .)

    lista_variables                shift and go to state 21
    empty                          shift and go to state 23

state 19

    (13) metodo -> inicio_method METHOD . tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method
    (19) tipo_metodo -> . VOID
    (20) tipo_metodo -> . tipo
    (74) tipo -> . INT
    (75) tipo -> . CHAR
    (76) tipo -> . BOOLEAN
    (77) tipo -> . FLOAT
    (78) tipo -> . STRING

    VOID            shift and go to state 25
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    tipo                           shift and go to state 24
    tipo_metodo                    shift and go to state 26

state 20

    (7) variables -> VAR tipo ID LEFTSB . INT_CTE RIGHTSB lista_variables SEMICOLON

    INT_CTE         shift and go to state 27


state 21

    (6) variables -> VAR tipo ID lista_variables . SEMICOLON

    SEMICOLON       shift and go to state 28


state 22

    (8) lista_variables -> COMMA . ID lista_variables
    (9) lista_variables -> COMMA . ID LEFTSB INT_CTE RIGHTSB lista_variables

    ID              shift and go to state 29


state 23

    (10) lista_variables -> empty .

    SEMICOLON       reduce using rule 10 (lista_variables -> empty .)


state 24

    (20) tipo_metodo -> tipo .

    MAIN            reduce using rule 20 (tipo_metodo -> tipo .)
    ID              reduce using rule 20 (tipo_metodo -> tipo .)


state 25

    (19) tipo_metodo -> VOID .

    MAIN            reduce using rule 19 (tipo_metodo -> VOID .)
    ID              reduce using rule 19 (tipo_metodo -> VOID .)


state 26

    (13) metodo -> inicio_method METHOD tipo_metodo . metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method
    (16) metodo1 -> . MAIN
    (17) metodo1 -> . ID

    MAIN            shift and go to state 31
    ID              shift and go to state 32

    metodo1                        shift and go to state 30

state 27

    (7) variables -> VAR tipo ID LEFTSB INT_CTE . RIGHTSB lista_variables SEMICOLON

    RIGHTSB         shift and go to state 33


state 28

    (6) variables -> VAR tipo ID lista_variables SEMICOLON .

    VAR             reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    METHOD          reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    $end            reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    RIGHTB          reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    IF              reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    WHILE           reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    RETURN          reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    ID              reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)
    PRINT           reduce using rule 6 (variables -> VAR tipo ID lista_variables SEMICOLON .)


state 29

    (8) lista_variables -> COMMA ID . lista_variables
    (9) lista_variables -> COMMA ID . LEFTSB INT_CTE RIGHTSB lista_variables
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (85) empty -> .

    LEFTSB          shift and go to state 34
    COMMA           shift and go to state 22
    SEMICOLON       reduce using rule 85 (empty -> .)

    lista_variables                shift and go to state 35
    empty                          shift and go to state 23

state 30

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 . LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method

    LEFTP           shift and go to state 36


state 31

    (16) metodo1 -> MAIN .

    LEFTP           reduce using rule 16 (metodo1 -> MAIN .)


state 32

    (17) metodo1 -> ID .

    LEFTP           reduce using rule 17 (metodo1 -> ID .)


state 33

    (7) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB . lista_variables SEMICOLON
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (85) empty -> .

    COMMA           shift and go to state 22
    SEMICOLON       reduce using rule 85 (empty -> .)

    lista_variables                shift and go to state 37
    empty                          shift and go to state 23

state 34

    (9) lista_variables -> COMMA ID LEFTSB . INT_CTE RIGHTSB lista_variables

    INT_CTE         shift and go to state 38


state 35

    (8) lista_variables -> COMMA ID lista_variables .

    SEMICOLON       reduce using rule 8 (lista_variables -> COMMA ID lista_variables .)


state 36

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP . save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method
    (18) save_params -> . params
    (23) params -> . params parametro
    (24) params -> . params COMMA parametro
    (25) params -> . empty
    (85) empty -> .

    COMMA           reduce using rule 85 (empty -> .)
    INT             reduce using rule 85 (empty -> .)
    CHAR            reduce using rule 85 (empty -> .)
    BOOLEAN         reduce using rule 85 (empty -> .)
    FLOAT           reduce using rule 85 (empty -> .)
    STRING          reduce using rule 85 (empty -> .)
    RIGHTP          reduce using rule 85 (empty -> .)

    save_params                    shift and go to state 39
    params                         shift and go to state 40
    empty                          shift and go to state 41

state 37

    (7) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables . SEMICOLON

    SEMICOLON       shift and go to state 42


state 38

    (9) lista_variables -> COMMA ID LEFTSB INT_CTE . RIGHTSB lista_variables

    RIGHTSB         shift and go to state 43


state 39

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params . RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method

    RIGHTP          shift and go to state 44


state 40

    (18) save_params -> params .
    (23) params -> params . parametro
    (24) params -> params . COMMA parametro
    (26) parametro -> . tipo ID
    (74) tipo -> . INT
    (75) tipo -> . CHAR
    (76) tipo -> . BOOLEAN
    (77) tipo -> . FLOAT
    (78) tipo -> . STRING

    RIGHTP          reduce using rule 18 (save_params -> params .)
    COMMA           shift and go to state 47
    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 46
    tipo                           shift and go to state 45

state 41

    (25) params -> empty .

    COMMA           reduce using rule 25 (params -> empty .)
    INT             reduce using rule 25 (params -> empty .)
    CHAR            reduce using rule 25 (params -> empty .)
    BOOLEAN         reduce using rule 25 (params -> empty .)
    FLOAT           reduce using rule 25 (params -> empty .)
    STRING          reduce using rule 25 (params -> empty .)
    RIGHTP          reduce using rule 25 (params -> empty .)


state 42

    (7) variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .

    VAR             reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    METHOD          reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    $end            reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    RIGHTB          reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    IF              reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    WHILE           reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    RETURN          reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    ID              reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)
    PRINT           reduce using rule 7 (variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON .)


state 43

    (9) lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB . lista_variables
    (8) lista_variables -> . COMMA ID lista_variables
    (9) lista_variables -> . COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables
    (10) lista_variables -> . empty
    (85) empty -> .

    COMMA           shift and go to state 22
    SEMICOLON       reduce using rule 85 (empty -> .)

    lista_variables                shift and go to state 48
    empty                          shift and go to state 23

state 44

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP . LEFTB method_vars add_method bloque RIGHTB end_method

    LEFTB           shift and go to state 49


state 45

    (26) parametro -> tipo . ID

    ID              shift and go to state 50


state 46

    (23) params -> params parametro .

    COMMA           reduce using rule 23 (params -> params parametro .)
    INT             reduce using rule 23 (params -> params parametro .)
    CHAR            reduce using rule 23 (params -> params parametro .)
    BOOLEAN         reduce using rule 23 (params -> params parametro .)
    FLOAT           reduce using rule 23 (params -> params parametro .)
    STRING          reduce using rule 23 (params -> params parametro .)
    RIGHTP          reduce using rule 23 (params -> params parametro .)


state 47

    (24) params -> params COMMA . parametro
    (26) parametro -> . tipo ID
    (74) tipo -> . INT
    (75) tipo -> . CHAR
    (76) tipo -> . BOOLEAN
    (77) tipo -> . FLOAT
    (78) tipo -> . STRING

    INT             shift and go to state 12
    CHAR            shift and go to state 13
    BOOLEAN         shift and go to state 14
    FLOAT           shift and go to state 10
    STRING          shift and go to state 15

    parametro                      shift and go to state 51
    tipo                           shift and go to state 45

state 48

    (9) lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables .

    SEMICOLON       reduce using rule 9 (lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables .)


state 49

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB . method_vars add_method bloque RIGHTB end_method
    (22) method_vars -> . variables_list
    (4) variables_list -> . variables_list variables
    (5) variables_list -> . empty
    (85) empty -> .

    VAR             reduce using rule 85 (empty -> .)
    RIGHTB          reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    ID              reduce using rule 85 (empty -> .)
    PRINT           reduce using rule 85 (empty -> .)

    variables_list                 shift and go to state 52
    empty                          shift and go to state 5
    method_vars                    shift and go to state 53

state 50

    (26) parametro -> tipo ID .

    COMMA           reduce using rule 26 (parametro -> tipo ID .)
    INT             reduce using rule 26 (parametro -> tipo ID .)
    CHAR            reduce using rule 26 (parametro -> tipo ID .)
    BOOLEAN         reduce using rule 26 (parametro -> tipo ID .)
    FLOAT           reduce using rule 26 (parametro -> tipo ID .)
    STRING          reduce using rule 26 (parametro -> tipo ID .)
    RIGHTP          reduce using rule 26 (parametro -> tipo ID .)


state 51

    (24) params -> params COMMA parametro .

    COMMA           reduce using rule 24 (params -> params COMMA parametro .)
    INT             reduce using rule 24 (params -> params COMMA parametro .)
    CHAR            reduce using rule 24 (params -> params COMMA parametro .)
    BOOLEAN         reduce using rule 24 (params -> params COMMA parametro .)
    FLOAT           reduce using rule 24 (params -> params COMMA parametro .)
    STRING          reduce using rule 24 (params -> params COMMA parametro .)
    RIGHTP          reduce using rule 24 (params -> params COMMA parametro .)


state 52

    (22) method_vars -> variables_list .
    (4) variables_list -> variables_list . variables
    (6) variables -> . VAR tipo ID lista_variables SEMICOLON
    (7) variables -> . VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON

    RIGHTB          reduce using rule 22 (method_vars -> variables_list .)
    IF              reduce using rule 22 (method_vars -> variables_list .)
    WHILE           reduce using rule 22 (method_vars -> variables_list .)
    RETURN          reduce using rule 22 (method_vars -> variables_list .)
    ID              reduce using rule 22 (method_vars -> variables_list .)
    PRINT           reduce using rule 22 (method_vars -> variables_list .)
    VAR             shift and go to state 7

    variables                      shift and go to state 6

state 53

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars . add_method bloque RIGHTB end_method
    (21) add_method -> .

    RIGHTB          reduce using rule 21 (add_method -> .)
    IF              reduce using rule 21 (add_method -> .)
    WHILE           reduce using rule 21 (add_method -> .)
    RETURN          reduce using rule 21 (add_method -> .)
    ID              reduce using rule 21 (add_method -> .)
    PRINT           reduce using rule 21 (add_method -> .)

    add_method                     shift and go to state 54

state 54

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method . bloque RIGHTB end_method
    (27) bloque -> . bloque estatuto
    (28) bloque -> . empty
    (85) empty -> .

    RIGHTB          reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    ID              reduce using rule 85 (empty -> .)
    PRINT           reduce using rule 85 (empty -> .)

    bloque                         shift and go to state 55
    empty                          shift and go to state 56

state 55

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque . RIGHTB end_method
    (27) bloque -> bloque . estatuto
    (29) estatuto -> . condicion
    (30) estatuto -> . ciclo
    (31) estatuto -> . return
    (32) estatuto -> . lectura
    (33) estatuto -> . escritura
    (34) estatuto -> . llamada SEMICOLON
    (35) estatuto -> . asignacion
    (50) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (47) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (36) return -> . RETURN return1 SEMICOLON
    (38) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (39) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (45) asignacion -> . ID ASSIGN exp SEMICOLON
    (46) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (41) llamada1 -> . ID

    RIGHTB          shift and go to state 70
    IF              shift and go to state 68
    WHILE           shift and go to state 58
    RETURN          shift and go to state 57
    ID              shift and go to state 67
    PRINT           shift and go to state 59

    llamada1                       shift and go to state 60
    ciclo                          shift and go to state 61
    estatuto                       shift and go to state 62
    llamada                        shift and go to state 63
    condicion                      shift and go to state 64
    lectura                        shift and go to state 65
    return                         shift and go to state 66
    asignacion                     shift and go to state 69
    escritura                      shift and go to state 71

state 56

    (28) bloque -> empty .

    IF              reduce using rule 28 (bloque -> empty .)
    WHILE           reduce using rule 28 (bloque -> empty .)
    RETURN          reduce using rule 28 (bloque -> empty .)
    ID              reduce using rule 28 (bloque -> empty .)
    PRINT           reduce using rule 28 (bloque -> empty .)
    RIGHTB          reduce using rule 28 (bloque -> empty .)


state 57

    (36) return -> RETURN . return1 SEMICOLON
    (37) return1 -> . exp
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    return1                        shift and go to state 83
    llamada                        shift and go to state 74
    exp                            shift and go to state 84
    llamada1                       shift and go to state 60

state 58

    (47) ciclo -> WHILE . LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB

    LEFTP           shift and go to state 85


state 59

    (39) escritura -> PRINT . LEFTP exp RIGHTP SEMICOLON

    LEFTP           shift and go to state 86


state 60

    (40) llamada -> llamada1 . LEFTP args RIGHTP

    LEFTP           shift and go to state 87


state 61

    (30) estatuto -> ciclo .

    RIGHTB          reduce using rule 30 (estatuto -> ciclo .)
    IF              reduce using rule 30 (estatuto -> ciclo .)
    WHILE           reduce using rule 30 (estatuto -> ciclo .)
    RETURN          reduce using rule 30 (estatuto -> ciclo .)
    ID              reduce using rule 30 (estatuto -> ciclo .)
    PRINT           reduce using rule 30 (estatuto -> ciclo .)


state 62

    (27) bloque -> bloque estatuto .

    IF              reduce using rule 27 (bloque -> bloque estatuto .)
    WHILE           reduce using rule 27 (bloque -> bloque estatuto .)
    RETURN          reduce using rule 27 (bloque -> bloque estatuto .)
    ID              reduce using rule 27 (bloque -> bloque estatuto .)
    PRINT           reduce using rule 27 (bloque -> bloque estatuto .)
    RIGHTB          reduce using rule 27 (bloque -> bloque estatuto .)


state 63

    (34) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 88


state 64

    (29) estatuto -> condicion .

    RIGHTB          reduce using rule 29 (estatuto -> condicion .)
    IF              reduce using rule 29 (estatuto -> condicion .)
    WHILE           reduce using rule 29 (estatuto -> condicion .)
    RETURN          reduce using rule 29 (estatuto -> condicion .)
    ID              reduce using rule 29 (estatuto -> condicion .)
    PRINT           reduce using rule 29 (estatuto -> condicion .)


state 65

    (32) estatuto -> lectura .

    RIGHTB          reduce using rule 32 (estatuto -> lectura .)
    IF              reduce using rule 32 (estatuto -> lectura .)
    WHILE           reduce using rule 32 (estatuto -> lectura .)
    RETURN          reduce using rule 32 (estatuto -> lectura .)
    ID              reduce using rule 32 (estatuto -> lectura .)
    PRINT           reduce using rule 32 (estatuto -> lectura .)


state 66

    (31) estatuto -> return .

    RIGHTB          reduce using rule 31 (estatuto -> return .)
    IF              reduce using rule 31 (estatuto -> return .)
    WHILE           reduce using rule 31 (estatuto -> return .)
    RETURN          reduce using rule 31 (estatuto -> return .)
    ID              reduce using rule 31 (estatuto -> return .)
    PRINT           reduce using rule 31 (estatuto -> return .)


state 67

    (38) lectura -> ID . ASSIGN READ LEFTP RIGHTP SEMICOLON
    (45) asignacion -> ID . ASSIGN exp SEMICOLON
    (46) asignacion -> ID . LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (41) llamada1 -> ID .

    ASSIGN          shift and go to state 90
    LEFTSB          shift and go to state 89
    LEFTP           reduce using rule 41 (llamada1 -> ID .)


state 68

    (50) condicion -> IF . LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> IF . LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    LEFTP           shift and go to state 91


state 69

    (35) estatuto -> asignacion .

    RIGHTB          reduce using rule 35 (estatuto -> asignacion .)
    IF              reduce using rule 35 (estatuto -> asignacion .)
    WHILE           reduce using rule 35 (estatuto -> asignacion .)
    RETURN          reduce using rule 35 (estatuto -> asignacion .)
    ID              reduce using rule 35 (estatuto -> asignacion .)
    PRINT           reduce using rule 35 (estatuto -> asignacion .)


state 70

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB . end_method
    (15) end_method -> .

    METHOD          reduce using rule 15 (end_method -> .)
    $end            reduce using rule 15 (end_method -> .)

    end_method                     shift and go to state 92

state 71

    (33) estatuto -> escritura .

    RIGHTB          reduce using rule 33 (estatuto -> escritura .)
    IF              reduce using rule 33 (estatuto -> escritura .)
    WHILE           reduce using rule 33 (estatuto -> escritura .)
    RETURN          reduce using rule 33 (estatuto -> escritura .)
    ID              reduce using rule 33 (estatuto -> escritura .)
    PRINT           reduce using rule 33 (estatuto -> escritura .)


state 72

    (83) constante -> TRUE .

    TIMES           reduce using rule 83 (constante -> TRUE .)
    DIVISION        reduce using rule 83 (constante -> TRUE .)
    SUM             reduce using rule 83 (constante -> TRUE .)
    LESS            reduce using rule 83 (constante -> TRUE .)
    EQUALS          reduce using rule 83 (constante -> TRUE .)
    NOTEQUAL        reduce using rule 83 (constante -> TRUE .)
    GREATEREQUAL    reduce using rule 83 (constante -> TRUE .)
    GREATERTHAN     reduce using rule 83 (constante -> TRUE .)
    LESSTHAN        reduce using rule 83 (constante -> TRUE .)
    LESSEQUAL       reduce using rule 83 (constante -> TRUE .)
    AND             reduce using rule 83 (constante -> TRUE .)
    OR              reduce using rule 83 (constante -> TRUE .)
    SEMICOLON       reduce using rule 83 (constante -> TRUE .)
    RIGHTP          reduce using rule 83 (constante -> TRUE .)
    COMMA           reduce using rule 83 (constante -> TRUE .)
    RIGHTSB         reduce using rule 83 (constante -> TRUE .)


state 73

    (73) expresion -> LEFTP . expresion RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 94
    constante                      shift and go to state 77

state 74

    (55) exp -> llamada . exp1
    (57) exp1 -> .

    SEMICOLON       reduce using rule 57 (exp1 -> .)
    RIGHTP          reduce using rule 57 (exp1 -> .)
    COMMA           reduce using rule 57 (exp1 -> .)
    RIGHTSB         reduce using rule 57 (exp1 -> .)

    exp1                           shift and go to state 95

state 75

    (81) constante -> CHAR_CTE .

    TIMES           reduce using rule 81 (constante -> CHAR_CTE .)
    DIVISION        reduce using rule 81 (constante -> CHAR_CTE .)
    SUM             reduce using rule 81 (constante -> CHAR_CTE .)
    LESS            reduce using rule 81 (constante -> CHAR_CTE .)
    EQUALS          reduce using rule 81 (constante -> CHAR_CTE .)
    NOTEQUAL        reduce using rule 81 (constante -> CHAR_CTE .)
    GREATEREQUAL    reduce using rule 81 (constante -> CHAR_CTE .)
    GREATERTHAN     reduce using rule 81 (constante -> CHAR_CTE .)
    LESSTHAN        reduce using rule 81 (constante -> CHAR_CTE .)
    LESSEQUAL       reduce using rule 81 (constante -> CHAR_CTE .)
    AND             reduce using rule 81 (constante -> CHAR_CTE .)
    OR              reduce using rule 81 (constante -> CHAR_CTE .)
    SEMICOLON       reduce using rule 81 (constante -> CHAR_CTE .)
    RIGHTP          reduce using rule 81 (constante -> CHAR_CTE .)
    COMMA           reduce using rule 81 (constante -> CHAR_CTE .)
    RIGHTSB         reduce using rule 81 (constante -> CHAR_CTE .)


state 76

    (82) constante -> STRING_CTE .

    TIMES           reduce using rule 82 (constante -> STRING_CTE .)
    DIVISION        reduce using rule 82 (constante -> STRING_CTE .)
    SUM             reduce using rule 82 (constante -> STRING_CTE .)
    LESS            reduce using rule 82 (constante -> STRING_CTE .)
    EQUALS          reduce using rule 82 (constante -> STRING_CTE .)
    NOTEQUAL        reduce using rule 82 (constante -> STRING_CTE .)
    GREATEREQUAL    reduce using rule 82 (constante -> STRING_CTE .)
    GREATERTHAN     reduce using rule 82 (constante -> STRING_CTE .)
    LESSTHAN        reduce using rule 82 (constante -> STRING_CTE .)
    LESSEQUAL       reduce using rule 82 (constante -> STRING_CTE .)
    AND             reduce using rule 82 (constante -> STRING_CTE .)
    OR              reduce using rule 82 (constante -> STRING_CTE .)
    SEMICOLON       reduce using rule 82 (constante -> STRING_CTE .)
    RIGHTP          reduce using rule 82 (constante -> STRING_CTE .)
    COMMA           reduce using rule 82 (constante -> STRING_CTE .)
    RIGHTSB         reduce using rule 82 (constante -> STRING_CTE .)


state 77

    (71) expresion -> constante .

    TIMES           reduce using rule 71 (expresion -> constante .)
    DIVISION        reduce using rule 71 (expresion -> constante .)
    SUM             reduce using rule 71 (expresion -> constante .)
    LESS            reduce using rule 71 (expresion -> constante .)
    EQUALS          reduce using rule 71 (expresion -> constante .)
    NOTEQUAL        reduce using rule 71 (expresion -> constante .)
    GREATEREQUAL    reduce using rule 71 (expresion -> constante .)
    GREATERTHAN     reduce using rule 71 (expresion -> constante .)
    LESSTHAN        reduce using rule 71 (expresion -> constante .)
    LESSEQUAL       reduce using rule 71 (expresion -> constante .)
    AND             reduce using rule 71 (expresion -> constante .)
    OR              reduce using rule 71 (expresion -> constante .)
    SEMICOLON       reduce using rule 71 (expresion -> constante .)
    RIGHTP          reduce using rule 71 (expresion -> constante .)
    COMMA           reduce using rule 71 (expresion -> constante .)
    RIGHTSB         reduce using rule 71 (expresion -> constante .)


state 78

    (84) constante -> FALSE .

    TIMES           reduce using rule 84 (constante -> FALSE .)
    DIVISION        reduce using rule 84 (constante -> FALSE .)
    SUM             reduce using rule 84 (constante -> FALSE .)
    LESS            reduce using rule 84 (constante -> FALSE .)
    EQUALS          reduce using rule 84 (constante -> FALSE .)
    NOTEQUAL        reduce using rule 84 (constante -> FALSE .)
    GREATEREQUAL    reduce using rule 84 (constante -> FALSE .)
    GREATERTHAN     reduce using rule 84 (constante -> FALSE .)
    LESSTHAN        reduce using rule 84 (constante -> FALSE .)
    LESSEQUAL       reduce using rule 84 (constante -> FALSE .)
    AND             reduce using rule 84 (constante -> FALSE .)
    OR              reduce using rule 84 (constante -> FALSE .)
    SEMICOLON       reduce using rule 84 (constante -> FALSE .)
    RIGHTP          reduce using rule 84 (constante -> FALSE .)
    COMMA           reduce using rule 84 (constante -> FALSE .)
    RIGHTSB         reduce using rule 84 (constante -> FALSE .)


state 79

    (72) expresion -> ID .
    (41) llamada1 -> ID .

    TIMES           reduce using rule 72 (expresion -> ID .)
    DIVISION        reduce using rule 72 (expresion -> ID .)
    SUM             reduce using rule 72 (expresion -> ID .)
    LESS            reduce using rule 72 (expresion -> ID .)
    EQUALS          reduce using rule 72 (expresion -> ID .)
    NOTEQUAL        reduce using rule 72 (expresion -> ID .)
    GREATEREQUAL    reduce using rule 72 (expresion -> ID .)
    GREATERTHAN     reduce using rule 72 (expresion -> ID .)
    LESSTHAN        reduce using rule 72 (expresion -> ID .)
    LESSEQUAL       reduce using rule 72 (expresion -> ID .)
    AND             reduce using rule 72 (expresion -> ID .)
    OR              reduce using rule 72 (expresion -> ID .)
    RIGHTP          reduce using rule 72 (expresion -> ID .)
    RIGHTSB         reduce using rule 72 (expresion -> ID .)
    COMMA           reduce using rule 72 (expresion -> ID .)
    SEMICOLON       reduce using rule 72 (expresion -> ID .)
    LEFTP           reduce using rule 41 (llamada1 -> ID .)


state 80

    (80) constante -> INT_CTE .

    TIMES           reduce using rule 80 (constante -> INT_CTE .)
    DIVISION        reduce using rule 80 (constante -> INT_CTE .)
    SUM             reduce using rule 80 (constante -> INT_CTE .)
    LESS            reduce using rule 80 (constante -> INT_CTE .)
    EQUALS          reduce using rule 80 (constante -> INT_CTE .)
    NOTEQUAL        reduce using rule 80 (constante -> INT_CTE .)
    GREATEREQUAL    reduce using rule 80 (constante -> INT_CTE .)
    GREATERTHAN     reduce using rule 80 (constante -> INT_CTE .)
    LESSTHAN        reduce using rule 80 (constante -> INT_CTE .)
    LESSEQUAL       reduce using rule 80 (constante -> INT_CTE .)
    AND             reduce using rule 80 (constante -> INT_CTE .)
    OR              reduce using rule 80 (constante -> INT_CTE .)
    SEMICOLON       reduce using rule 80 (constante -> INT_CTE .)
    RIGHTP          reduce using rule 80 (constante -> INT_CTE .)
    COMMA           reduce using rule 80 (constante -> INT_CTE .)
    RIGHTSB         reduce using rule 80 (constante -> INT_CTE .)


state 81

    (56) exp -> expresion . exp2
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion
    (58) exp2 -> .

    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98
    EQUALS          shift and go to state 101
    NOTEQUAL        shift and go to state 104
    GREATEREQUAL    shift and go to state 97
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 103
    LESSEQUAL       shift and go to state 105
    AND             shift and go to state 108
    OR              shift and go to state 107
    SEMICOLON       reduce using rule 58 (exp2 -> .)
    RIGHTP          reduce using rule 58 (exp2 -> .)
    COMMA           reduce using rule 58 (exp2 -> .)
    RIGHTSB         reduce using rule 58 (exp2 -> .)

    exp2                           shift and go to state 99

state 82

    (79) constante -> FLOAT_CTE .

    TIMES           reduce using rule 79 (constante -> FLOAT_CTE .)
    DIVISION        reduce using rule 79 (constante -> FLOAT_CTE .)
    SUM             reduce using rule 79 (constante -> FLOAT_CTE .)
    LESS            reduce using rule 79 (constante -> FLOAT_CTE .)
    EQUALS          reduce using rule 79 (constante -> FLOAT_CTE .)
    NOTEQUAL        reduce using rule 79 (constante -> FLOAT_CTE .)
    GREATEREQUAL    reduce using rule 79 (constante -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 79 (constante -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 79 (constante -> FLOAT_CTE .)
    LESSEQUAL       reduce using rule 79 (constante -> FLOAT_CTE .)
    AND             reduce using rule 79 (constante -> FLOAT_CTE .)
    OR              reduce using rule 79 (constante -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 79 (constante -> FLOAT_CTE .)
    RIGHTP          reduce using rule 79 (constante -> FLOAT_CTE .)
    COMMA           reduce using rule 79 (constante -> FLOAT_CTE .)
    RIGHTSB         reduce using rule 79 (constante -> FLOAT_CTE .)


state 83

    (36) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 109


state 84

    (37) return1 -> exp .

    SEMICOLON       reduce using rule 37 (return1 -> exp .)


state 85

    (47) ciclo -> WHILE LEFTP . exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    exp                            shift and go to state 110
    llamada1                       shift and go to state 60

state 86

    (39) escritura -> PRINT LEFTP . exp RIGHTP SEMICOLON
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    exp                            shift and go to state 111
    llamada1                       shift and go to state 60

state 87

    (40) llamada -> llamada1 LEFTP . args RIGHTP
    (42) args -> . exp
    (43) args -> . args COMMA exp
    (44) args -> . empty
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (85) empty -> .
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    RIGHTP          reduce using rule 85 (empty -> .)
    COMMA           reduce using rule 85 (empty -> .)
    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    args                           shift and go to state 113
    llamada                        shift and go to state 74
    exp                            shift and go to state 114
    llamada1                       shift and go to state 60
    empty                          shift and go to state 112

state 88

    (34) estatuto -> llamada SEMICOLON .

    RIGHTB          reduce using rule 34 (estatuto -> llamada SEMICOLON .)
    IF              reduce using rule 34 (estatuto -> llamada SEMICOLON .)
    WHILE           reduce using rule 34 (estatuto -> llamada SEMICOLON .)
    RETURN          reduce using rule 34 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 34 (estatuto -> llamada SEMICOLON .)
    PRINT           reduce using rule 34 (estatuto -> llamada SEMICOLON .)


state 89

    (46) asignacion -> ID LEFTSB . exp RIGHTSB ASSIGN exp SEMICOLON
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    exp                            shift and go to state 115
    llamada1                       shift and go to state 60

state 90

    (38) lectura -> ID ASSIGN . READ LEFTP RIGHTP SEMICOLON
    (45) asignacion -> ID ASSIGN . exp SEMICOLON
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    READ            shift and go to state 116
    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    exp                            shift and go to state 117
    llamada1                       shift and go to state 60

state 91

    (50) condicion -> IF LEFTP . condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> IF LEFTP . condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (52) condicion1 -> . exp
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    condicion1                     shift and go to state 118
    exp                            shift and go to state 119
    llamada1                       shift and go to state 60

state 92

    (13) metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method .

    METHOD          reduce using rule 13 (metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method .)
    $end            reduce using rule 13 (metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method .)


state 93

    (72) expresion -> ID .

    TIMES           reduce using rule 72 (expresion -> ID .)
    DIVISION        reduce using rule 72 (expresion -> ID .)
    SUM             reduce using rule 72 (expresion -> ID .)
    LESS            reduce using rule 72 (expresion -> ID .)
    EQUALS          reduce using rule 72 (expresion -> ID .)
    NOTEQUAL        reduce using rule 72 (expresion -> ID .)
    GREATEREQUAL    reduce using rule 72 (expresion -> ID .)
    GREATERTHAN     reduce using rule 72 (expresion -> ID .)
    LESSTHAN        reduce using rule 72 (expresion -> ID .)
    LESSEQUAL       reduce using rule 72 (expresion -> ID .)
    AND             reduce using rule 72 (expresion -> ID .)
    OR              reduce using rule 72 (expresion -> ID .)
    SEMICOLON       reduce using rule 72 (expresion -> ID .)
    RIGHTP          reduce using rule 72 (expresion -> ID .)
    COMMA           reduce using rule 72 (expresion -> ID .)
    RIGHTSB         reduce using rule 72 (expresion -> ID .)


state 94

    (73) expresion -> LEFTP expresion . RIGHTP
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    RIGHTP          shift and go to state 120
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98
    EQUALS          shift and go to state 101
    NOTEQUAL        shift and go to state 104
    GREATEREQUAL    shift and go to state 97
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 103
    LESSEQUAL       shift and go to state 105
    AND             shift and go to state 108
    OR              shift and go to state 107


state 95

    (55) exp -> llamada exp1 .

    RIGHTSB         reduce using rule 55 (exp -> llamada exp1 .)
    RIGHTP          reduce using rule 55 (exp -> llamada exp1 .)
    COMMA           reduce using rule 55 (exp -> llamada exp1 .)
    SEMICOLON       reduce using rule 55 (exp -> llamada exp1 .)


state 96

    (60) expresion -> expresion DIVISION . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 121
    constante                      shift and go to state 77

state 97

    (65) expresion -> expresion GREATEREQUAL . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 122
    constante                      shift and go to state 77

state 98

    (62) expresion -> expresion LESS . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 123
    constante                      shift and go to state 77

state 99

    (56) exp -> expresion exp2 .

    RIGHTSB         reduce using rule 56 (exp -> expresion exp2 .)
    RIGHTP          reduce using rule 56 (exp -> expresion exp2 .)
    COMMA           reduce using rule 56 (exp -> expresion exp2 .)
    SEMICOLON       reduce using rule 56 (exp -> expresion exp2 .)


state 100

    (61) expresion -> expresion SUM . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 124
    constante                      shift and go to state 77

state 101

    (63) expresion -> expresion EQUALS . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 125
    constante                      shift and go to state 77

state 102

    (59) expresion -> expresion TIMES . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 126
    constante                      shift and go to state 77

state 103

    (67) expresion -> expresion LESSTHAN . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 127
    constante                      shift and go to state 77

state 104

    (64) expresion -> expresion NOTEQUAL . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 128
    constante                      shift and go to state 77

state 105

    (68) expresion -> expresion LESSEQUAL . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 129
    constante                      shift and go to state 77

state 106

    (66) expresion -> expresion GREATERTHAN . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 130
    constante                      shift and go to state 77

state 107

    (70) expresion -> expresion OR . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 131
    constante                      shift and go to state 77

state 108

    (69) expresion -> expresion AND . expresion
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 93
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 132
    constante                      shift and go to state 77

state 109

    (36) return -> RETURN return1 SEMICOLON .

    RIGHTB          reduce using rule 36 (return -> RETURN return1 SEMICOLON .)
    IF              reduce using rule 36 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 36 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 36 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 36 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 36 (return -> RETURN return1 SEMICOLON .)


state 110

    (47) ciclo -> WHILE LEFTP exp . RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB

    RIGHTP          shift and go to state 133


state 111

    (39) escritura -> PRINT LEFTP exp . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 134


state 112

    (44) args -> empty .

    RIGHTP          reduce using rule 44 (args -> empty .)
    COMMA           reduce using rule 44 (args -> empty .)


state 113

    (40) llamada -> llamada1 LEFTP args . RIGHTP
    (43) args -> args . COMMA exp

    RIGHTP          shift and go to state 135
    COMMA           shift and go to state 136


state 114

    (42) args -> exp .

    RIGHTP          reduce using rule 42 (args -> exp .)
    COMMA           reduce using rule 42 (args -> exp .)


state 115

    (46) asignacion -> ID LEFTSB exp . RIGHTSB ASSIGN exp SEMICOLON

    RIGHTSB         shift and go to state 137


state 116

    (38) lectura -> ID ASSIGN READ . LEFTP RIGHTP SEMICOLON

    LEFTP           shift and go to state 138


state 117

    (45) asignacion -> ID ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 139


state 118

    (50) condicion -> IF LEFTP condicion1 . RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> IF LEFTP condicion1 . RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    RIGHTP          shift and go to state 140


state 119

    (52) condicion1 -> exp .

    RIGHTP          reduce using rule 52 (condicion1 -> exp .)


state 120

    (73) expresion -> LEFTP expresion RIGHTP .

    TIMES           reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    DIVISION        reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    SUM             reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    LESS            reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    EQUALS          reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    NOTEQUAL        reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    GREATEREQUAL    reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    GREATERTHAN     reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    LESSTHAN        reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    LESSEQUAL       reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    AND             reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    OR              reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    SEMICOLON       reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    RIGHTP          reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    COMMA           reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)
    RIGHTSB         reduce using rule 73 (expresion -> LEFTP expresion RIGHTP .)


state 121

    (60) expresion -> expresion DIVISION expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    TIMES           reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    SUM             reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    LESS            reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    EQUALS          reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    NOTEQUAL        reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    GREATEREQUAL    reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    GREATERTHAN     reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    LESSTHAN        reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    LESSEQUAL       reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    SEMICOLON       reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    RIGHTP          reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    COMMA           reduce using rule 60 (expresion -> expresion DIVISION expresion .)
    RIGHTSB         reduce using rule 60 (expresion -> expresion DIVISION expresion .)

  ! TIMES           [ shift and go to state 102 ]
  ! DIVISION        [ shift and go to state 96 ]
  ! SUM             [ shift and go to state 100 ]
  ! LESS            [ shift and go to state 98 ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 122

    (65) expresion -> expresion GREATEREQUAL expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    NOTEQUAL        reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    GREATEREQUAL    reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    GREATERTHAN     reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    LESSTHAN        reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    LESSEQUAL       reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    AND             reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    OR              reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    SEMICOLON       reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    RIGHTP          reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    COMMA           reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    RIGHTSB         reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98

  ! TIMES           [ reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! SUM             [ reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! LESS            [ reduce using rule 65 (expresion -> expresion GREATEREQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 123

    (62) expresion -> expresion LESS expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    SUM             reduce using rule 62 (expresion -> expresion LESS expresion .)
    LESS            reduce using rule 62 (expresion -> expresion LESS expresion .)
    EQUALS          reduce using rule 62 (expresion -> expresion LESS expresion .)
    NOTEQUAL        reduce using rule 62 (expresion -> expresion LESS expresion .)
    GREATEREQUAL    reduce using rule 62 (expresion -> expresion LESS expresion .)
    GREATERTHAN     reduce using rule 62 (expresion -> expresion LESS expresion .)
    LESSTHAN        reduce using rule 62 (expresion -> expresion LESS expresion .)
    LESSEQUAL       reduce using rule 62 (expresion -> expresion LESS expresion .)
    AND             reduce using rule 62 (expresion -> expresion LESS expresion .)
    OR              reduce using rule 62 (expresion -> expresion LESS expresion .)
    SEMICOLON       reduce using rule 62 (expresion -> expresion LESS expresion .)
    RIGHTP          reduce using rule 62 (expresion -> expresion LESS expresion .)
    COMMA           reduce using rule 62 (expresion -> expresion LESS expresion .)
    RIGHTSB         reduce using rule 62 (expresion -> expresion LESS expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96

  ! TIMES           [ reduce using rule 62 (expresion -> expresion LESS expresion .) ]
  ! DIVISION        [ reduce using rule 62 (expresion -> expresion LESS expresion .) ]
  ! SUM             [ shift and go to state 100 ]
  ! LESS            [ shift and go to state 98 ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 124

    (61) expresion -> expresion SUM expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    SUM             reduce using rule 61 (expresion -> expresion SUM expresion .)
    LESS            reduce using rule 61 (expresion -> expresion SUM expresion .)
    EQUALS          reduce using rule 61 (expresion -> expresion SUM expresion .)
    NOTEQUAL        reduce using rule 61 (expresion -> expresion SUM expresion .)
    GREATEREQUAL    reduce using rule 61 (expresion -> expresion SUM expresion .)
    GREATERTHAN     reduce using rule 61 (expresion -> expresion SUM expresion .)
    LESSTHAN        reduce using rule 61 (expresion -> expresion SUM expresion .)
    LESSEQUAL       reduce using rule 61 (expresion -> expresion SUM expresion .)
    AND             reduce using rule 61 (expresion -> expresion SUM expresion .)
    OR              reduce using rule 61 (expresion -> expresion SUM expresion .)
    SEMICOLON       reduce using rule 61 (expresion -> expresion SUM expresion .)
    RIGHTP          reduce using rule 61 (expresion -> expresion SUM expresion .)
    COMMA           reduce using rule 61 (expresion -> expresion SUM expresion .)
    RIGHTSB         reduce using rule 61 (expresion -> expresion SUM expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96

  ! TIMES           [ reduce using rule 61 (expresion -> expresion SUM expresion .) ]
  ! DIVISION        [ reduce using rule 61 (expresion -> expresion SUM expresion .) ]
  ! SUM             [ shift and go to state 100 ]
  ! LESS            [ shift and go to state 98 ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 125

    (63) expresion -> expresion EQUALS expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    NOTEQUAL        reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    AND             reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    OR              reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    SEMICOLON       reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    RIGHTP          reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    COMMA           reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    RIGHTSB         reduce using rule 63 (expresion -> expresion EQUALS expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98
    GREATEREQUAL    shift and go to state 97
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 103
    LESSEQUAL       shift and go to state 105

  ! TIMES           [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! DIVISION        [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! SUM             [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! LESS            [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! GREATERTHAN     [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! LESSTHAN        [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! LESSEQUAL       [ reduce using rule 63 (expresion -> expresion EQUALS expresion .) ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 126

    (59) expresion -> expresion TIMES expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    TIMES           reduce using rule 59 (expresion -> expresion TIMES expresion .)
    DIVISION        reduce using rule 59 (expresion -> expresion TIMES expresion .)
    SUM             reduce using rule 59 (expresion -> expresion TIMES expresion .)
    LESS            reduce using rule 59 (expresion -> expresion TIMES expresion .)
    EQUALS          reduce using rule 59 (expresion -> expresion TIMES expresion .)
    NOTEQUAL        reduce using rule 59 (expresion -> expresion TIMES expresion .)
    GREATEREQUAL    reduce using rule 59 (expresion -> expresion TIMES expresion .)
    GREATERTHAN     reduce using rule 59 (expresion -> expresion TIMES expresion .)
    LESSTHAN        reduce using rule 59 (expresion -> expresion TIMES expresion .)
    LESSEQUAL       reduce using rule 59 (expresion -> expresion TIMES expresion .)
    AND             reduce using rule 59 (expresion -> expresion TIMES expresion .)
    OR              reduce using rule 59 (expresion -> expresion TIMES expresion .)
    SEMICOLON       reduce using rule 59 (expresion -> expresion TIMES expresion .)
    RIGHTP          reduce using rule 59 (expresion -> expresion TIMES expresion .)
    COMMA           reduce using rule 59 (expresion -> expresion TIMES expresion .)
    RIGHTSB         reduce using rule 59 (expresion -> expresion TIMES expresion .)

  ! TIMES           [ shift and go to state 102 ]
  ! DIVISION        [ shift and go to state 96 ]
  ! SUM             [ shift and go to state 100 ]
  ! LESS            [ shift and go to state 98 ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 127

    (67) expresion -> expresion LESSTHAN expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    NOTEQUAL        reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    GREATEREQUAL    reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    GREATERTHAN     reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    LESSTHAN        reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    LESSEQUAL       reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    AND             reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    OR              reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    SEMICOLON       reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    RIGHTP          reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    COMMA           reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    RIGHTSB         reduce using rule 67 (expresion -> expresion LESSTHAN expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98

  ! TIMES           [ reduce using rule 67 (expresion -> expresion LESSTHAN expresion .) ]
  ! DIVISION        [ reduce using rule 67 (expresion -> expresion LESSTHAN expresion .) ]
  ! SUM             [ reduce using rule 67 (expresion -> expresion LESSTHAN expresion .) ]
  ! LESS            [ reduce using rule 67 (expresion -> expresion LESSTHAN expresion .) ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 128

    (64) expresion -> expresion NOTEQUAL expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    NOTEQUAL        reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    AND             reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    OR              reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    SEMICOLON       reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    RIGHTP          reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    COMMA           reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    RIGHTSB         reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98
    GREATEREQUAL    shift and go to state 97
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 103
    LESSEQUAL       shift and go to state 105

  ! TIMES           [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! SUM             [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESS            [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! GREATERTHAN     [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESSTHAN        [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! LESSEQUAL       [ reduce using rule 64 (expresion -> expresion NOTEQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 129

    (68) expresion -> expresion LESSEQUAL expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    NOTEQUAL        reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    GREATEREQUAL    reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    GREATERTHAN     reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    LESSTHAN        reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    LESSEQUAL       reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    AND             reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    OR              reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    SEMICOLON       reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    RIGHTP          reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    COMMA           reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    RIGHTSB         reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98

  ! TIMES           [ reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .) ]
  ! DIVISION        [ reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .) ]
  ! SUM             [ reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .) ]
  ! LESS            [ reduce using rule 68 (expresion -> expresion LESSEQUAL expresion .) ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 130

    (66) expresion -> expresion GREATERTHAN expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    EQUALS          reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    NOTEQUAL        reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    GREATEREQUAL    reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    GREATERTHAN     reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    LESSTHAN        reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    LESSEQUAL       reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    AND             reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    OR              reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    SEMICOLON       reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    RIGHTP          reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    COMMA           reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    RIGHTSB         reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98

  ! TIMES           [ reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .) ]
  ! DIVISION        [ reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .) ]
  ! SUM             [ reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .) ]
  ! LESS            [ reduce using rule 66 (expresion -> expresion GREATERTHAN expresion .) ]
  ! EQUALS          [ shift and go to state 101 ]
  ! NOTEQUAL        [ shift and go to state 104 ]
  ! GREATEREQUAL    [ shift and go to state 97 ]
  ! GREATERTHAN     [ shift and go to state 106 ]
  ! LESSTHAN        [ shift and go to state 103 ]
  ! LESSEQUAL       [ shift and go to state 105 ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 131

    (70) expresion -> expresion OR expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    AND             reduce using rule 70 (expresion -> expresion OR expresion .)
    OR              reduce using rule 70 (expresion -> expresion OR expresion .)
    SEMICOLON       reduce using rule 70 (expresion -> expresion OR expresion .)
    RIGHTP          reduce using rule 70 (expresion -> expresion OR expresion .)
    COMMA           reduce using rule 70 (expresion -> expresion OR expresion .)
    RIGHTSB         reduce using rule 70 (expresion -> expresion OR expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98
    EQUALS          shift and go to state 101
    NOTEQUAL        shift and go to state 104
    GREATEREQUAL    shift and go to state 97
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 103
    LESSEQUAL       shift and go to state 105

  ! TIMES           [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! SUM             [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! LESS            [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! EQUALS          [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! NOTEQUAL        [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! GREATERTHAN     [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! LESSTHAN        [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! LESSEQUAL       [ reduce using rule 70 (expresion -> expresion OR expresion .) ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 132

    (69) expresion -> expresion AND expresion .
    (59) expresion -> expresion . TIMES expresion
    (60) expresion -> expresion . DIVISION expresion
    (61) expresion -> expresion . SUM expresion
    (62) expresion -> expresion . LESS expresion
    (63) expresion -> expresion . EQUALS expresion
    (64) expresion -> expresion . NOTEQUAL expresion
    (65) expresion -> expresion . GREATEREQUAL expresion
    (66) expresion -> expresion . GREATERTHAN expresion
    (67) expresion -> expresion . LESSTHAN expresion
    (68) expresion -> expresion . LESSEQUAL expresion
    (69) expresion -> expresion . AND expresion
    (70) expresion -> expresion . OR expresion

    AND             reduce using rule 69 (expresion -> expresion AND expresion .)
    OR              reduce using rule 69 (expresion -> expresion AND expresion .)
    SEMICOLON       reduce using rule 69 (expresion -> expresion AND expresion .)
    RIGHTP          reduce using rule 69 (expresion -> expresion AND expresion .)
    COMMA           reduce using rule 69 (expresion -> expresion AND expresion .)
    RIGHTSB         reduce using rule 69 (expresion -> expresion AND expresion .)
    TIMES           shift and go to state 102
    DIVISION        shift and go to state 96
    SUM             shift and go to state 100
    LESS            shift and go to state 98
    EQUALS          shift and go to state 101
    NOTEQUAL        shift and go to state 104
    GREATEREQUAL    shift and go to state 97
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 103
    LESSEQUAL       shift and go to state 105

  ! TIMES           [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! SUM             [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! LESS            [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! EQUALS          [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! NOTEQUAL        [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! GREATEREQUAL    [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! GREATERTHAN     [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! LESSTHAN        [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! LESSEQUAL       [ reduce using rule 69 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 108 ]
  ! OR              [ shift and go to state 107 ]


state 133

    (47) ciclo -> WHILE LEFTP exp RIGHTP . ciclo1 LEFTB bloque ciclo2 RIGHTB
    (48) ciclo1 -> .

    LEFTB           reduce using rule 48 (ciclo1 -> .)

    ciclo1                         shift and go to state 141

state 134

    (39) escritura -> PRINT LEFTP exp RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 142


state 135

    (40) llamada -> llamada1 LEFTP args RIGHTP .

    RIGHTSB         reduce using rule 40 (llamada -> llamada1 LEFTP args RIGHTP .)
    SEMICOLON       reduce using rule 40 (llamada -> llamada1 LEFTP args RIGHTP .)
    RIGHTP          reduce using rule 40 (llamada -> llamada1 LEFTP args RIGHTP .)
    COMMA           reduce using rule 40 (llamada -> llamada1 LEFTP args RIGHTP .)


state 136

    (43) args -> args COMMA . exp
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    exp                            shift and go to state 143
    llamada1                       shift and go to state 60

state 137

    (46) asignacion -> ID LEFTSB exp RIGHTSB . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 144


state 138

    (38) lectura -> ID ASSIGN READ LEFTP . RIGHTP SEMICOLON

    RIGHTP          shift and go to state 145


state 139

    (45) asignacion -> ID ASSIGN exp SEMICOLON .

    IF              reduce using rule 45 (asignacion -> ID ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 45 (asignacion -> ID ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 45 (asignacion -> ID ASSIGN exp SEMICOLON .)
    ID              reduce using rule 45 (asignacion -> ID ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 45 (asignacion -> ID ASSIGN exp SEMICOLON .)
    RIGHTB          reduce using rule 45 (asignacion -> ID ASSIGN exp SEMICOLON .)


state 140

    (50) condicion -> IF LEFTP condicion1 RIGHTP . condicion2 LEFTB bloque RIGHTB
    (51) condicion -> IF LEFTP condicion1 RIGHTP . condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (53) condicion2 -> .

    LEFTB           reduce using rule 53 (condicion2 -> .)

    condicion2                     shift and go to state 146

state 141

    (47) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 . LEFTB bloque ciclo2 RIGHTB

    LEFTB           shift and go to state 147


state 142

    (39) escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .

    IF              reduce using rule 39 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    WHILE           reduce using rule 39 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RETURN          reduce using rule 39 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    ID              reduce using rule 39 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    PRINT           reduce using rule 39 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 39 (escritura -> PRINT LEFTP exp RIGHTP SEMICOLON .)


state 143

    (43) args -> args COMMA exp .

    RIGHTP          reduce using rule 43 (args -> args COMMA exp .)
    COMMA           reduce using rule 43 (args -> args COMMA exp .)


state 144

    (46) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN . exp SEMICOLON
    (55) exp -> . llamada exp1
    (56) exp -> . expresion exp2
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (59) expresion -> . expresion TIMES expresion
    (60) expresion -> . expresion DIVISION expresion
    (61) expresion -> . expresion SUM expresion
    (62) expresion -> . expresion LESS expresion
    (63) expresion -> . expresion EQUALS expresion
    (64) expresion -> . expresion NOTEQUAL expresion
    (65) expresion -> . expresion GREATEREQUAL expresion
    (66) expresion -> . expresion GREATERTHAN expresion
    (67) expresion -> . expresion LESSTHAN expresion
    (68) expresion -> . expresion LESSEQUAL expresion
    (69) expresion -> . expresion AND expresion
    (70) expresion -> . expresion OR expresion
    (71) expresion -> . constante
    (72) expresion -> . ID
    (73) expresion -> . LEFTP expresion RIGHTP
    (41) llamada1 -> . ID
    (79) constante -> . FLOAT_CTE
    (80) constante -> . INT_CTE
    (81) constante -> . CHAR_CTE
    (82) constante -> . STRING_CTE
    (83) constante -> . TRUE
    (84) constante -> . FALSE

    ID              shift and go to state 79
    LEFTP           shift and go to state 73
    FLOAT_CTE       shift and go to state 82
    INT_CTE         shift and go to state 80
    CHAR_CTE        shift and go to state 75
    STRING_CTE      shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 78

    expresion                      shift and go to state 81
    constante                      shift and go to state 77
    llamada                        shift and go to state 74
    exp                            shift and go to state 148
    llamada1                       shift and go to state 60

state 145

    (38) lectura -> ID ASSIGN READ LEFTP RIGHTP . SEMICOLON

    SEMICOLON       shift and go to state 149


state 146

    (50) condicion -> IF LEFTP condicion1 RIGHTP condicion2 . LEFTB bloque RIGHTB
    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 . LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB

    LEFTB           shift and go to state 150


state 147

    (47) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB . bloque ciclo2 RIGHTB
    (27) bloque -> . bloque estatuto
    (28) bloque -> . empty
    (85) empty -> .

    IF              reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    ID              reduce using rule 85 (empty -> .)
    PRINT           reduce using rule 85 (empty -> .)
    RIGHTB          reduce using rule 85 (empty -> .)

    bloque                         shift and go to state 151
    empty                          shift and go to state 56

state 148

    (46) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 152


state 149

    (38) lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .

    IF              reduce using rule 38 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    WHILE           reduce using rule 38 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RETURN          reduce using rule 38 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    ID              reduce using rule 38 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    PRINT           reduce using rule 38 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)
    RIGHTB          reduce using rule 38 (lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON .)


state 150

    (50) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB . bloque RIGHTB
    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB . bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (27) bloque -> . bloque estatuto
    (28) bloque -> . empty
    (85) empty -> .

    RIGHTB          reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    ID              reduce using rule 85 (empty -> .)
    PRINT           reduce using rule 85 (empty -> .)

    bloque                         shift and go to state 153
    empty                          shift and go to state 56

state 151

    (47) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque . ciclo2 RIGHTB
    (27) bloque -> bloque . estatuto
    (49) ciclo2 -> .
    (29) estatuto -> . condicion
    (30) estatuto -> . ciclo
    (31) estatuto -> . return
    (32) estatuto -> . lectura
    (33) estatuto -> . escritura
    (34) estatuto -> . llamada SEMICOLON
    (35) estatuto -> . asignacion
    (50) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (47) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (36) return -> . RETURN return1 SEMICOLON
    (38) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (39) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (45) asignacion -> . ID ASSIGN exp SEMICOLON
    (46) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (41) llamada1 -> . ID

    RIGHTB          reduce using rule 49 (ciclo2 -> .)
    IF              shift and go to state 68
    WHILE           shift and go to state 58
    RETURN          shift and go to state 57
    ID              shift and go to state 67
    PRINT           shift and go to state 59

    return                         shift and go to state 66
    ciclo                          shift and go to state 61
    asignacion                     shift and go to state 69
    estatuto                       shift and go to state 62
    llamada                        shift and go to state 63
    condicion                      shift and go to state 64
    ciclo2                         shift and go to state 154
    llamada1                       shift and go to state 60
    lectura                        shift and go to state 65
    escritura                      shift and go to state 71

state 152

    (46) asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .

    IF              reduce using rule 46 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    WHILE           reduce using rule 46 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    RETURN          reduce using rule 46 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    ID              reduce using rule 46 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    PRINT           reduce using rule 46 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)
    RIGHTB          reduce using rule 46 (asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON .)


state 153

    (50) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque . RIGHTB
    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque . RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (27) bloque -> bloque . estatuto
    (29) estatuto -> . condicion
    (30) estatuto -> . ciclo
    (31) estatuto -> . return
    (32) estatuto -> . lectura
    (33) estatuto -> . escritura
    (34) estatuto -> . llamada SEMICOLON
    (35) estatuto -> . asignacion
    (50) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (47) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (36) return -> . RETURN return1 SEMICOLON
    (38) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (39) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (45) asignacion -> . ID ASSIGN exp SEMICOLON
    (46) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (41) llamada1 -> . ID

    RIGHTB          shift and go to state 155
    IF              shift and go to state 68
    WHILE           shift and go to state 58
    RETURN          shift and go to state 57
    ID              shift and go to state 67
    PRINT           shift and go to state 59

    llamada1                       shift and go to state 60
    return                         shift and go to state 66
    ciclo                          shift and go to state 61
    asignacion                     shift and go to state 69
    estatuto                       shift and go to state 62
    llamada                        shift and go to state 63
    condicion                      shift and go to state 64
    lectura                        shift and go to state 65
    escritura                      shift and go to state 71

state 154

    (47) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 . RIGHTB

    RIGHTB          shift and go to state 156


state 155

    (50) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .
    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB . condicion3 ELSE LEFTB bloque RIGHTB
    (54) condicion3 -> .

    RIGHTB          reduce using rule 50 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    IF              reduce using rule 50 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    WHILE           reduce using rule 50 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    RETURN          reduce using rule 50 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    ID              reduce using rule 50 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    PRINT           reduce using rule 50 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB .)
    ELSE            reduce using rule 54 (condicion3 -> .)

    condicion3                     shift and go to state 157

state 156

    (47) ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .

    RIGHTB          reduce using rule 47 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    IF              reduce using rule 47 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    WHILE           reduce using rule 47 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    RETURN          reduce using rule 47 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    ID              reduce using rule 47 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)
    PRINT           reduce using rule 47 (ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB .)


state 157

    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 . ELSE LEFTB bloque RIGHTB

    ELSE            shift and go to state 158


state 158

    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE . LEFTB bloque RIGHTB

    LEFTB           shift and go to state 159


state 159

    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB . bloque RIGHTB
    (27) bloque -> . bloque estatuto
    (28) bloque -> . empty
    (85) empty -> .

    RIGHTB          reduce using rule 85 (empty -> .)
    IF              reduce using rule 85 (empty -> .)
    WHILE           reduce using rule 85 (empty -> .)
    RETURN          reduce using rule 85 (empty -> .)
    ID              reduce using rule 85 (empty -> .)
    PRINT           reduce using rule 85 (empty -> .)

    bloque                         shift and go to state 160
    empty                          shift and go to state 56

state 160

    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque . RIGHTB
    (27) bloque -> bloque . estatuto
    (29) estatuto -> . condicion
    (30) estatuto -> . ciclo
    (31) estatuto -> . return
    (32) estatuto -> . lectura
    (33) estatuto -> . escritura
    (34) estatuto -> . llamada SEMICOLON
    (35) estatuto -> . asignacion
    (50) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB
    (51) condicion -> . IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB
    (47) ciclo -> . WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB
    (36) return -> . RETURN return1 SEMICOLON
    (38) lectura -> . ID ASSIGN READ LEFTP RIGHTP SEMICOLON
    (39) escritura -> . PRINT LEFTP exp RIGHTP SEMICOLON
    (40) llamada -> . llamada1 LEFTP args RIGHTP
    (45) asignacion -> . ID ASSIGN exp SEMICOLON
    (46) asignacion -> . ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON
    (41) llamada1 -> . ID

    RIGHTB          shift and go to state 161
    IF              shift and go to state 68
    WHILE           shift and go to state 58
    RETURN          shift and go to state 57
    ID              shift and go to state 67
    PRINT           shift and go to state 59

    llamada1                       shift and go to state 60
    return                         shift and go to state 66
    ciclo                          shift and go to state 61
    asignacion                     shift and go to state 69
    estatuto                       shift and go to state 62
    llamada                        shift and go to state 63
    condicion                      shift and go to state 64
    lectura                        shift and go to state 65
    escritura                      shift and go to state 71

state 161

    (51) condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .

    RIGHTB          reduce using rule 51 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    IF              reduce using rule 51 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    WHILE           reduce using rule 51 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    RETURN          reduce using rule 51 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    ID              reduce using rule 51 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)
    PRINT           reduce using rule 51 (condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB .)

