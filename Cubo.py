# -*- coding: utf-8 -*-
# Identificadores de los tipos
__entero  = 0
__decimal = 1
__char = 2
__string = 3
__boolean = 4
__error = -1

# Identificadores de las operaciones
__suma = 0
__menos = 1
__division = 2
__multi = 3
__concatenation = 4
__mayor = 5
__menor = 6
__igual = 7
__diferente = 8
__mayorigual = 9
__menorigual = 10
__aand = 11
__oor = 12

# Semantica de operadores y operandos
__cubo = [
    [ 0, 0,  0,  0,  0,  0, -1,  4,  4,  4,  4,  4,  4, -1, -1 ],
    [ 0, 1,  1,  1,  1,  1, -1,  4,  4,  4,  4,  4,  4, -1, -1 ],
    [ 0, 2, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 0, 3, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 0, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 1, 0,  1,  1,  1,  1, -1,  4,  4,  4,  4,  4,  4, -1, -1 ],
    [ 1, 1,  1,  1,  1,  1, -1,  4,  4,  4,  4,  4,  4, -1, -1 ],
    [ 1, 2, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 1, 3, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 2, 0, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 2, 1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 2, 2, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 2, 3, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 2, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 3, 0, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 3, 1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 3, 2, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 3, 3, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 4, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 4, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 4, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],
    [ 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4,  4 ] ]

###########################################################################
#   resultante
#   Encontrar el tipo del resultado de una operación
###########################################################################
def resultante (tipo1, tipo2, operador):
    ren = tipo1 * 5 + tipo2
    col = operador + 2
    return __cubo[ren][col]

# print resultante(2, 3, 4)
