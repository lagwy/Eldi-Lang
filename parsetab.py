
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FCAF0CA02F27E94C7C4B450BDB4B9D1D'
    
_lr_action_items = {'NOTEQUAL':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,108,-87,-78,108,-77,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,108,108,-79,]),'STRING_CTE':([58,73,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[78,-48,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RETURN':([5,6,28,42,49,52,53,54,55,56,62,63,65,66,67,70,72,90,113,144,149,155,156,158,159,161,162,163,165,166,167,169,170,172,],[-5,-4,-6,-7,-93,-22,-21,-93,58,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-38,-93,-93,58,58,-59,-46,-60,-51,-55,-93,58,-56,]),'LESS':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,102,-87,-78,102,-77,-80,-66,102,-68,-67,102,-65,102,102,102,102,102,102,-79,]),'READ':([91,],[119,]),'VOID':([19,],[25,]),'ELSE':([162,165,],[-59,168,]),'CHAR':([7,19,36,40,41,46,47,50,51,],[13,13,-93,13,-25,-23,13,-26,-24,]),'LESSEQUAL':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,109,-87,-78,109,-77,-80,-66,-71,-68,-67,109,-65,-73,109,-74,-72,109,109,-79,]),'WHILE':([5,6,28,42,49,52,53,54,55,56,62,63,65,66,67,70,72,90,113,144,149,155,156,158,159,161,162,163,165,166,167,169,170,172,],[-5,-4,-6,-7,-93,-22,-21,-93,59,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-38,-93,-93,59,59,-59,-46,-60,-51,-55,-93,59,-56,]),'PRINT':([5,6,28,42,49,52,53,54,55,56,62,63,65,66,67,70,72,90,113,144,149,155,156,158,159,161,162,163,165,166,167,169,170,172,],[-5,-4,-6,-7,-93,-22,-21,-93,60,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-38,-93,-93,60,60,-59,-46,-60,-51,-55,-93,60,-56,]),'TRUE':([58,73,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[74,-48,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'LEFTSB':([18,29,57,68,81,95,],[20,34,73,-47,99,99,]),'LEFTP':([30,31,32,58,59,60,61,68,69,73,75,81,87,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,119,142,157,],[36,-16,-17,75,-52,88,89,-41,92,-48,75,-41,114,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,143,75,75,]),'SEMICOLON':([18,21,23,29,33,35,37,43,48,64,74,76,77,78,79,80,81,82,83,84,85,86,95,97,98,103,120,125,127,128,129,130,131,132,133,134,135,136,137,138,140,141,147,151,160,],[-93,28,-10,-93,-93,-8,42,-93,-9,90,-91,-63,-89,-90,-81,-92,-78,-88,-64,-87,113,-37,-78,-61,-77,-62,144,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,-76,-75,149,-40,-79,155,163,]),'CHAR_CTE':([58,73,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[77,-48,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'COMMA':([18,29,33,36,40,41,43,46,50,51,74,76,77,78,79,80,81,82,83,84,89,95,97,98,103,116,117,118,125,127,128,129,130,131,132,133,134,135,136,137,138,141,147,150,],[22,22,22,-93,47,-25,22,-23,-26,-24,-91,-63,-89,-90,-81,-92,-78,-88,-64,-87,-93,-78,-61,-77,-62,-44,142,-42,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,-76,-75,-40,-79,-43,]),'LEFTB':([44,145,152,154,168,],[49,-58,156,158,169,]),'IF':([5,6,28,42,49,52,53,54,55,56,62,63,65,66,67,70,72,90,113,144,149,155,156,158,159,161,162,163,165,166,167,169,170,172,],[-5,-4,-6,-7,-93,-22,-21,-93,69,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-38,-93,-93,69,69,-59,-46,-60,-51,-55,-93,69,-56,]),'METHOD':([0,1,3,4,5,6,8,9,16,17,28,42,71,93,],[-2,-93,-3,-93,-5,-4,-14,-12,-11,19,-6,-7,-15,-13,]),'$end':([0,1,2,3,4,5,6,8,9,16,28,42,71,93,],[-2,-93,0,-3,-93,-5,-4,-1,-12,-11,-6,-7,-15,-13,]),'DIVISION':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,100,-87,-78,100,-77,-80,-66,100,100,100,100,-65,100,100,100,100,100,100,-79,]),'STRING':([7,19,36,40,41,46,47,50,51,],[15,15,-93,15,-25,-23,15,-26,-24,]),'GREATEREQUAL':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,101,-87,-78,101,-77,-80,-66,-71,-68,-67,101,-65,-73,101,-74,-72,101,101,-79,]),'EQUALS':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,105,-87,-78,105,-77,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,105,105,-79,]),'GREATERTHAN':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,110,-87,-78,110,-77,-80,-66,-71,-68,-67,110,-65,-73,110,-74,-72,110,110,-79,]),'VAR':([0,1,3,5,6,28,42,49,52,],[-2,-93,7,-5,-4,-6,-7,-93,7,]),'FALSE':([58,73,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[80,-48,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TIMES':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,106,-87,-78,106,-77,-80,-66,106,106,106,106,-65,106,106,106,106,106,106,-79,]),'ID':([5,6,10,11,12,13,14,15,22,24,25,26,28,42,45,49,52,53,54,55,56,58,62,63,65,66,67,70,72,73,75,88,89,90,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,142,144,149,155,156,157,158,159,161,162,163,165,166,167,169,170,172,],[-5,-4,-85,18,-82,-83,-84,-86,29,-20,-19,32,-6,-7,50,-93,-22,-21,-93,68,-28,81,-30,-27,-29,-32,-31,-35,-33,-48,95,81,81,-34,81,81,81,81,95,95,95,95,95,95,95,95,95,95,95,95,-36,81,81,-45,-39,-38,-93,81,-93,68,68,-59,-46,-60,-51,-55,-93,68,-56,]),'INT_CTE':([20,34,58,73,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[27,38,82,-48,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'AND':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,112,-87,-78,112,-77,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,-76,-75,-79,]),'RIGHTP':([36,39,40,41,46,50,51,74,76,77,78,79,80,81,82,83,84,89,95,96,97,98,103,115,116,117,118,121,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,143,147,148,150,],[-93,44,-18,-25,-23,-26,-24,-91,-63,-89,-90,-81,-92,-78,-88,-64,-87,-93,-78,125,-61,-77,-62,140,-44,141,-42,145,-57,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,-76,-75,-53,-40,151,-79,154,-43,]),'RIGHTSB':([27,38,74,76,77,78,79,80,81,82,83,84,95,97,98,103,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,146,147,],[33,43,-91,-63,-89,-90,-81,-92,-78,-88,-64,-87,-78,-61,-77,-62,-50,-49,-80,147,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,-76,-75,-40,153,-79,]),'INT':([7,19,36,40,41,46,47,50,51,],[12,12,-93,12,-25,-23,12,-26,-24,]),'SUM':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,104,-87,-78,104,-77,-80,-66,104,-68,-67,104,-65,104,104,104,104,104,104,-79,]),'FLOAT':([7,19,36,40,41,46,47,50,51,],[10,10,-93,10,-25,-23,10,-26,-24,]),'FLOAT_CTE':([58,73,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[84,-48,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'LESSTHAN':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,107,-87,-78,107,-77,-80,-66,-71,-68,-67,107,-65,-73,107,-74,-72,107,107,-79,]),'ASSIGN':([68,153,],[91,157,]),'BOOLEAN':([7,19,36,40,41,46,47,50,51,],[14,14,-93,14,-25,-23,14,-26,-24,]),'RIGHTB':([5,6,28,42,49,52,53,54,55,56,62,63,65,66,67,70,72,90,113,144,149,155,156,158,159,161,162,163,164,165,166,167,169,170,171,172,],[-5,-4,-6,-7,-93,-22,-21,-93,71,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-38,-93,-93,162,-54,-59,-46,166,-60,-51,-55,-93,-60,172,-56,]),'MAIN':([10,12,13,14,15,24,25,26,],[-85,-82,-83,-84,-86,-20,-19,31,]),'OR':([74,77,78,79,80,81,82,83,84,95,96,98,125,127,128,129,130,131,132,133,134,135,136,137,138,147,],[-91,-89,-90,-81,-92,-78,-88,111,-87,-78,111,-77,-80,-66,-71,-68,-67,-69,-65,-73,-70,-74,-72,-76,-75,-79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion_id':([55,159,161,170,],[57,57,57,57,]),'goto_main':([0,],[1,]),'constante':([58,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'condicion2':([145,],[152,]),'variables':([3,52,],[6,6,]),'end_method':([71,],[93,]),'metodo1':([26,],[30,]),'add_globales':([1,],[4,]),'conf':([79,],[98,]),'condicion3':([162,],[165,]),'bloque':([54,156,158,169,],[55,159,161,170,]),'llamada1':([55,58,88,89,91,92,94,99,114,142,157,159,161,170,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'method_vars':([49,],[53,]),'ciclo':([55,159,161,170,],[62,62,62,62,]),'tipo':([7,19,40,47,],[11,24,45,45,]),'asignacion_inter':([94,],[123,]),'exp2':([83,],[103,]),'exp1':([76,],[97,]),'estatuto':([55,159,161,170,],[63,63,63,63,]),'llamada':([55,58,88,89,91,92,94,99,114,142,157,159,161,170,],[64,76,76,76,76,76,76,76,76,76,76,64,64,64,]),'condicion':([55,159,161,170,],[65,65,65,65,]),'variables_list':([1,49,],[3,52,]),'params':([36,],[40,]),'lectura':([55,159,161,170,],[66,66,66,66,]),'empty':([1,4,18,29,33,36,43,49,54,89,156,158,169,],[5,9,23,23,23,41,23,5,56,116,56,56,56,]),'return':([55,159,161,170,],[67,67,67,67,]),'parametro':([40,47,],[46,51,]),'args':([89,],[117,]),'save_params':([36,],[39,]),'condicion1':([92,],[121,]),'inicio_method':([8,],[17,]),'ciclo2':([161,],[164,]),'add_method':([53,],[54,]),'ciclo1':([139,],[148,]),'tipo_metodo':([19,],[26,]),'expresion':([58,75,88,89,91,92,94,99,100,101,102,104,105,106,107,108,109,110,111,112,114,142,157,],[83,96,83,83,83,83,83,83,127,128,129,130,131,132,133,134,135,136,137,138,83,83,83,]),'condicion4':([165,170,],[167,171,]),'metodo':([8,],[16,]),'asignacion':([55,159,161,170,],[70,70,70,70,]),'metodos':([4,],[8,]),'return1':([58,],[85,]),'salto_ciclo':([59,],[87,]),'programa':([0,],[2,]),'exp':([58,88,89,91,92,94,99,114,142,157,],[86,115,118,120,122,124,126,139,150,160,]),'lista_variables':([18,29,33,43,],[21,35,37,48,]),'asignacion2':([123,],[146,]),'asignacion1':([73,],[94,]),'escritura':([55,159,161,170,],[72,72,72,72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> goto_main add_globales metodos','programa',3,'p_programa','Parser.py',359),
  ('goto_main -> <empty>','goto_main',0,'p_goto_main','Parser.py',379),
  ('add_globales -> variables_list','add_globales',1,'p_add_globales','Parser.py',394),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',404),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',405),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',422),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',423),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',459),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',460),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',461),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',485),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',486),
  ('metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method','metodo',13,'p_metodo','Parser.py',503),
  ('inicio_method -> <empty>','inicio_method',0,'p_inicio_method','Parser.py',529),
  ('end_method -> <empty>','end_method',0,'p_end_method','Parser.py',539),
  ('metodo1 -> MAIN','metodo1',1,'p_metodo1','Parser.py',569),
  ('metodo1 -> ID','metodo1',1,'p_metodo1','Parser.py',570),
  ('save_params -> params','save_params',1,'p_save_params','Parser.py',589),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',601),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',602),
  ('add_method -> <empty>','add_method',0,'p_add_method','Parser.py',614),
  ('method_vars -> variables_list','method_vars',1,'p_method_vars','Parser.py',671),
  ('params -> params parametro','params',2,'p_params','Parser.py',682),
  ('params -> params COMMA parametro','params',3,'p_params','Parser.py',683),
  ('params -> empty','params',1,'p_params','Parser.py',684),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',705),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',717),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',718),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',725),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',726),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',727),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',728),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',729),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',730),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',731),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','Parser.py',739),
  ('return1 -> exp','return1',1,'p_return1','Parser.py',750),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',824),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',879),
  ('llamada -> llamada1 LEFTP args RIGHTP','llamada',4,'p_llamada','Parser.py',900),
  ('llamada1 -> ID','llamada1',1,'p_llamada1','Parser.py',938),
  ('args -> exp','args',1,'p_args','Parser.py',980),
  ('args -> args COMMA exp','args',3,'p_args','Parser.py',981),
  ('args -> empty','args',1,'p_args','Parser.py',982),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',1092),
  ('asignacion -> asignacion_id LEFTSB asignacion1 asignacion_inter asignacion2 RIGHTSB ASSIGN exp SEMICOLON','asignacion',9,'p_asignacion','Parser.py',1093),
  ('asignacion_id -> ID','asignacion_id',1,'p_asignacion_id','Parser.py',1205),
  ('asignacion1 -> <empty>','asignacion1',0,'p_asignacion1','Parser.py',1212),
  ('asignacion_inter -> exp','asignacion_inter',1,'p_asignacion_inter','Parser.py',1224),
  ('asignacion2 -> <empty>','asignacion2',0,'p_asignacion2','Parser.py',1231),
  ('ciclo -> WHILE salto_ciclo LEFTP exp ciclo1 RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',10,'p_ciclo','Parser.py',1255),
  ('salto_ciclo -> <empty>','salto_ciclo',0,'p_salto_ciclo','Parser.py',1266),
  ('ciclo1 -> <empty>','ciclo1',0,'p_ciclo1','Parser.py',1275),
  ('ciclo2 -> <empty>','ciclo2',0,'p_ciclo2','Parser.py',1297),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 condicion4','condicion',10,'p_condicion','Parser.py',1318),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque condicion4 RIGHTB','condicion',14,'p_condicion','Parser.py',1319),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',1326),
  ('condicion2 -> <empty>','condicion2',0,'p_condicion2','Parser.py',1336),
  ('condicion3 -> <empty>','condicion3',0,'p_condicion3','Parser.py',1375),
  ('condicion4 -> <empty>','condicion4',0,'p_condicion4','Parser.py',1396),
  ('exp -> llamada exp1','exp',2,'p_exp','Parser.py',1407),
  ('exp -> expresion exp2','exp',2,'p_exp','Parser.py',1408),
  ('exp1 -> <empty>','exp1',0,'p_exp1','Parser.py',1420),
  ('exp2 -> <empty>','exp2',0,'p_exp2','Parser.py',1429),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','Parser.py',1440),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser.py',1441),
  ('expresion -> expresion SUM expresion','expresion',3,'p_expresion','Parser.py',1442),
  ('expresion -> expresion LESS expresion','expresion',3,'p_expresion','Parser.py',1443),
  ('expresion -> expresion EQUALS expresion','expresion',3,'p_expresion','Parser.py',1444),
  ('expresion -> expresion NOTEQUAL expresion','expresion',3,'p_expresion','Parser.py',1445),
  ('expresion -> expresion GREATEREQUAL expresion','expresion',3,'p_expresion','Parser.py',1446),
  ('expresion -> expresion GREATERTHAN expresion','expresion',3,'p_expresion','Parser.py',1447),
  ('expresion -> expresion LESSTHAN expresion','expresion',3,'p_expresion','Parser.py',1448),
  ('expresion -> expresion LESSEQUAL expresion','expresion',3,'p_expresion','Parser.py',1449),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser.py',1450),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser.py',1451),
  ('expresion -> constante conf','expresion',2,'p_expresion2','Parser.py',1616),
  ('expresion -> ID','expresion',1,'p_expresion2','Parser.py',1617),
  ('expresion -> ID LEFTSB exp RIGHTSB','expresion',4,'p_expresion2','Parser.py',1618),
  ('expresion -> LEFTP expresion RIGHTP','expresion',3,'p_expresion2','Parser.py',1619),
  ('conf -> <empty>','conf',0,'p_conf','Parser.py',1688),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',1696),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',1697),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',1698),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',1699),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',1700),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',1721),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',1722),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',1723),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',1724),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',1725),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',1726),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1734),
]
