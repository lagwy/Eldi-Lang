
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '01AD1F43D88CA6BF9F10E494473F1207'
    
_lr_action_items = {'NOTEQUAL':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,110,-70,-63,110,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,110,110,]),'STRING_CTE':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'RETURN':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,66,67,69,70,71,74,76,95,115,145,148,153,155,156,157,158,159,161,162,165,166,167,],[-3,-2,-4,-76,-76,-76,-5,-76,-76,-76,62,-19,62,62,-21,-18,-20,-23,-22,-26,-24,-25,-27,-36,-30,-76,-29,-76,62,-37,62,-41,-38,-76,62,-42,]),'LESS':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,104,-70,-63,104,-64,-51,104,-53,-52,104,-50,104,104,104,104,104,104,]),'READ':([97,],[122,]),'VOID':([9,],[17,]),'ELSE':([161,163,],[-45,164,]),'CHAR':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[13,13,-76,-76,-76,13,-16,13,13,-14,13,-17,-15,]),'LESSEQUAL':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,111,-70,-63,111,-64,-51,-56,-53,-52,111,-50,-58,111,-59,-57,111,111,]),'WHILE':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,66,67,69,70,71,74,76,95,115,145,148,153,155,156,157,158,159,161,162,165,166,167,],[-3,-2,-4,-76,-76,-76,-5,-76,-76,-76,63,-19,63,63,-21,-18,-20,-23,-22,-26,-24,-25,-27,-36,-30,-76,-29,-76,63,-37,63,-41,-38,-76,63,-42,]),'PRINT':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,66,67,69,70,71,74,76,95,115,145,148,153,155,156,157,158,159,161,162,165,166,167,],[-3,-2,-4,-76,-76,-76,-5,-76,-76,-76,64,-19,64,64,-21,-18,-20,-23,-22,-26,-24,-25,-27,-36,-30,-76,-29,-76,64,-37,64,-41,-38,-76,64,-42,]),'TRUE':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LEFTSB':([18,31,72,],[22,37,96,]),'LEFTP':([19,20,21,62,63,64,65,72,73,80,86,92,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,122,142,150,],[26,27,28,80,-39,93,94,-32,98,80,-32,116,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,144,80,80,]),'SEMICOLON':([18,23,25,31,36,38,45,53,57,68,79,81,82,83,84,85,86,87,88,89,90,91,99,101,105,123,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,151,154,],[-76,30,-8,-76,-76,-6,52,-76,-7,95,-74,-48,-72,-73,-62,-75,-63,-71,-49,-70,115,-28,-63,-46,-47,145,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,-61,-60,148,-31,155,158,]),'CHAR_CTE':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'COMMA':([18,26,27,28,31,32,33,34,35,36,41,48,49,53,79,81,82,83,84,85,86,87,88,89,94,99,101,105,118,119,120,126,127,128,129,130,131,132,133,134,135,136,137,138,141,149,],[24,-76,-76,-76,24,42,-16,42,42,24,-14,-17,-15,24,-74,-48,-72,-73,-62,-75,-63,-71,-49,-70,-76,-63,-46,-47,-35,142,-33,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,-61,-60,-31,-34,]),'LEFTB':([39,43,44,146,147,152,164,],[47,50,51,-44,153,156,165,]),'IF':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,66,67,69,70,71,74,76,95,115,145,148,153,155,156,157,158,159,161,162,165,166,167,],[-3,-2,-4,-76,-76,-76,-5,-76,-76,-76,73,-19,73,73,-21,-18,-20,-23,-22,-26,-24,-25,-27,-36,-30,-76,-29,-76,73,-37,73,-41,-38,-76,73,-42,]),'METHOD':([0,1,3,4,5,7,8,30,52,75,77,78,],[-76,-76,-3,-2,9,-10,-9,-4,-5,-13,-12,-11,]),'$end':([0,1,2,3,4,5,7,8,30,52,75,77,78,],[-76,-76,0,-3,-2,-1,-10,-9,-4,-5,-13,-12,-11,]),'DIVISION':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,102,-70,-63,102,-64,-51,102,102,102,102,-50,102,102,102,102,102,102,]),'STRING':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[15,15,-76,-76,-76,15,-16,15,15,-14,15,-17,-15,]),'GREATEREQUAL':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,103,-70,-63,103,-64,-51,-56,-53,-52,103,-50,-58,103,-59,-57,103,103,]),'EQUALS':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,107,-70,-63,107,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,107,107,]),'GREATERTHAN':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,112,-70,-63,112,-64,-51,-56,-53,-52,112,-50,-58,112,-59,-57,112,112,]),'VAR':([0,1,3,4,30,47,50,51,52,54,55,56,],[-76,6,-3,-2,-4,-76,-76,-76,-5,6,6,6,]),'FALSE':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'TIMES':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,108,-70,-63,108,-64,-51,108,108,108,108,-50,108,108,108,108,108,108,]),'ID':([3,4,10,11,12,13,14,15,16,17,24,30,40,47,50,51,52,54,55,56,58,59,60,61,62,66,67,69,70,71,74,76,80,93,94,95,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,115,116,142,145,148,150,153,155,156,157,158,159,161,162,165,166,167,],[-3,-2,-68,18,-65,-66,-67,-69,19,20,31,-4,48,-76,-76,-76,-5,-76,-76,-76,72,-19,72,72,86,-21,-18,-20,-23,-22,-26,-24,99,86,86,-25,86,86,86,99,99,99,99,99,99,99,99,99,99,99,99,-27,86,86,-36,-30,86,-76,-29,-76,72,-37,72,-41,-38,-76,72,-42,]),'INT_CTE':([22,37,62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[29,46,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'AND':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,114,-70,-63,114,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,-61,-60,]),'RIGHTP':([26,27,28,32,33,34,35,41,48,49,79,81,82,83,84,85,86,87,88,89,94,99,100,101,105,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,144,149,],[-76,-76,-76,39,-16,43,44,-14,-17,-15,-74,-48,-72,-73,-62,-75,-63,-71,-49,-70,-76,-63,126,-46,-47,140,-35,141,-33,146,-43,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,-61,-60,147,-31,151,-34,]),'RIGHTSB':([29,46,79,81,82,83,84,85,86,87,88,89,99,101,105,121,126,127,128,129,130,131,132,133,134,135,136,137,138,141,],[36,53,-74,-48,-72,-73,-62,-75,-63,-71,-49,-70,-63,-46,-47,143,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,-61,-60,-31,]),'INT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[12,12,-76,-76,-76,12,-16,12,12,-14,12,-17,-15,]),'SUM':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,106,-70,-63,106,-64,-51,106,-53,-52,106,-50,106,106,106,106,106,106,]),'FLOAT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[10,10,-76,-76,-76,10,-16,10,10,-14,10,-17,-15,]),'FLOAT_CTE':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'LESSTHAN':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,109,-70,-63,109,-64,-51,-56,-53,-52,109,-50,-58,109,-59,-57,109,109,]),'ASSIGN':([72,143,],[97,150,]),'BOOLEAN':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[14,14,-76,-76,-76,14,-16,14,14,-14,14,-17,-15,]),'RIGHTB':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,66,67,69,70,71,74,76,95,115,145,148,153,155,156,157,158,159,160,161,162,165,166,167,],[-3,-2,-4,-76,-76,-76,-5,-76,-76,-76,75,-19,77,78,-21,-18,-20,-23,-22,-26,-24,-25,-27,-36,-30,-76,-29,-76,-40,-37,161,162,-41,-38,-76,167,-42,]),'MAIN':([17,],[21,]),'OR':([79,82,83,84,85,86,87,88,89,99,100,126,127,128,129,130,131,132,133,134,135,136,137,138,],[-74,-72,-73,-62,-75,-63,-71,113,-70,-63,113,-64,-51,-56,-53,-52,-54,-50,-58,-55,-59,-57,-61,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constante':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'variables':([1,54,55,56,],[4,4,4,4,]),'condicion1':([98,],[124,]),'condicion2':([146,],[152,]),'condicion3':([161,],[163,]),'bloque':([54,55,56,153,156,165,],[58,60,61,157,159,166,]),'llamada1':([58,60,61,62,93,94,96,97,98,116,142,150,157,159,166,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'ciclo':([58,60,61,157,159,166,],[66,66,66,66,66,66,]),'tipo':([6,9,32,34,35,42,],[11,16,40,40,40,40,]),'exp2':([88,],[105,]),'exp1':([81,],[101,]),'estatuto':([58,60,61,157,159,166,],[67,67,67,67,67,67,]),'llamada':([58,60,61,62,93,94,96,97,98,116,142,150,157,159,166,],[68,68,68,81,81,81,81,81,81,81,81,81,68,68,68,]),'condicion':([58,60,61,157,159,166,],[69,69,69,69,69,69,]),'variables_list':([0,47,50,51,],[1,54,55,56,]),'params':([26,27,28,],[32,34,35,]),'lectura':([58,60,61,157,159,166,],[70,70,70,70,70,70,]),'empty':([0,1,18,26,27,28,31,36,47,50,51,53,54,55,56,94,153,156,165,],[3,7,25,33,33,33,25,25,3,3,3,25,59,59,59,118,59,59,59,]),'return':([58,60,61,157,159,166,],[71,71,71,71,71,71,]),'parametro':([32,34,35,42,],[41,41,41,49,]),'args':([94,],[119,]),'metodos':([1,],[5,]),'ciclo2':([157,],[160,]),'ciclo1':([63,],[92,]),'expresion':([62,80,93,94,96,97,98,102,103,104,106,107,108,109,110,111,112,113,114,116,142,150,],[88,100,88,88,88,88,88,127,128,129,130,131,132,133,134,135,136,137,138,88,88,88,]),'metodo':([5,],[8,]),'asignacion':([58,60,61,157,159,166,],[74,74,74,74,74,74,]),'return1':([62,],[90,]),'programa':([0,],[2,]),'exp':([62,93,94,96,97,98,116,142,150,],[91,117,120,121,123,125,139,149,154,]),'lista_variables':([18,31,36,53,],[23,38,45,57,]),'escritura':([58,60,61,157,159,166,],[76,76,76,76,76,76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variables_list metodos','programa',2,'p_programa','Parser.py',361),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',382),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',383),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',394),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',395),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',412),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',413),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',414),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',426),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',427),
  ('metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',437),
  ('metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',438),
  ('metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',439),
  ('params -> params parametro','params',2,'p_params','Parser.py',490),
  ('params -> params COMMA parametro','params',3,'p_params','Parser.py',491),
  ('params -> empty','params',1,'p_params','Parser.py',492),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',507),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',514),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',515),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',518),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',519),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',520),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',521),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',522),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',523),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',524),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','Parser.py',529),
  ('return1 -> exp','return1',1,'p_return1','Parser.py',532),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',550),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',562),
  ('llamada -> llamada1 LEFTP args RIGHTP','llamada',4,'p_llamada','Parser.py',572),
  ('llamada1 -> ID','llamada1',1,'p_llamada1','Parser.py',619),
  ('args -> exp','args',1,'p_args','Parser.py',629),
  ('args -> args COMMA exp','args',3,'p_args','Parser.py',630),
  ('args -> empty','args',1,'p_args','Parser.py',631),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',659),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser.py',660),
  ('ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',9,'p_ciclo','Parser.py',686),
  ('ciclo1 -> <empty>','ciclo1',0,'p_ciclo1','Parser.py',693),
  ('ciclo2 -> <empty>','ciclo2',0,'p_ciclo2','Parser.py',705),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB','condicion',8,'p_condicion','Parser.py',715),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB','condicion',13,'p_condicion','Parser.py',716),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',721),
  ('condicion2 -> <empty>','condicion2',0,'p_condicion2','Parser.py',727),
  ('condicion3 -> <empty>','condicion3',0,'p_condicion3','Parser.py',741),
  ('exp -> llamada exp1','exp',2,'p_exp','Parser.py',750),
  ('exp -> expresion exp2','exp',2,'p_exp','Parser.py',751),
  ('exp1 -> <empty>','exp1',0,'p_exp1','Parser.py',756),
  ('exp2 -> <empty>','exp2',0,'p_exp2','Parser.py',762),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','Parser.py',768),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser.py',769),
  ('expresion -> expresion SUM expresion','expresion',3,'p_expresion','Parser.py',770),
  ('expresion -> expresion LESS expresion','expresion',3,'p_expresion','Parser.py',771),
  ('expresion -> expresion EQUALS expresion','expresion',3,'p_expresion','Parser.py',772),
  ('expresion -> expresion NOTEQUAL expresion','expresion',3,'p_expresion','Parser.py',773),
  ('expresion -> expresion GREATEREQUAL expresion','expresion',3,'p_expresion','Parser.py',774),
  ('expresion -> expresion GREATERTHAN expresion','expresion',3,'p_expresion','Parser.py',775),
  ('expresion -> expresion LESSTHAN expresion','expresion',3,'p_expresion','Parser.py',776),
  ('expresion -> expresion LESSEQUAL expresion','expresion',3,'p_expresion','Parser.py',777),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser.py',778),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser.py',779),
  ('expresion -> constante','expresion',1,'p_expresion2','Parser.py',859),
  ('expresion -> ID','expresion',1,'p_expresion2','Parser.py',860),
  ('expresion -> LEFTP expresion RIGHTP','expresion',3,'p_expresion2','Parser.py',861),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',871),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',872),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',873),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',874),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',875),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',891),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',892),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',893),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',894),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',895),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',896),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',901),
]
