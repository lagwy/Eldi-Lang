
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1CDF3DA8B80240177BA93C4885CD26DB'
    
_lr_action_items = {'NOTEQUAL':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,104,-79,-72,104,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,104,104,]),'STRING_CTE':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'RETURN':([5,6,28,42,49,52,53,54,55,56,61,62,64,65,66,69,71,88,109,139,142,147,149,150,151,152,153,155,156,159,160,161,],[-5,-4,-6,-7,-85,-22,-21,-85,57,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-85,-38,-85,57,-46,57,-50,-47,-85,57,-51,]),'LESS':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,98,-79,-72,98,-73,-60,98,-62,-61,98,-59,98,98,98,98,98,98,]),'READ':([90,],[116,]),'VOID':([19,],[25,]),'ELSE':([155,157,],[-54,158,]),'CHAR':([7,19,36,40,41,46,47,50,51,],[13,13,-85,13,-25,-23,13,-26,-24,]),'LESSEQUAL':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,105,-79,-72,105,-73,-60,-65,-62,-61,105,-59,-67,105,-68,-66,105,105,]),'WHILE':([5,6,28,42,49,52,53,54,55,56,61,62,64,65,66,69,71,88,109,139,142,147,149,150,151,152,153,155,156,159,160,161,],[-5,-4,-6,-7,-85,-22,-21,-85,58,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-85,-38,-85,58,-46,58,-50,-47,-85,58,-51,]),'PRINT':([5,6,28,42,49,52,53,54,55,56,61,62,64,65,66,69,71,88,109,139,142,147,149,150,151,152,153,155,156,159,160,161,],[-5,-4,-6,-7,-85,-22,-21,-85,59,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-85,-38,-85,59,-46,59,-50,-47,-85,59,-51,]),'TRUE':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'LEFTSB':([18,29,67,],[20,34,89,]),'LEFTP':([30,31,32,57,58,59,60,67,68,73,79,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,116,136,144,],[36,-16,-17,73,85,86,87,-41,91,73,-41,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,138,73,73,]),'SEMICOLON':([18,21,23,29,33,35,37,43,48,63,72,74,75,76,77,78,79,80,81,82,83,84,93,95,99,117,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,145,148,],[-85,28,-10,-85,-85,-8,42,-85,-9,88,-83,-57,-81,-82,-71,-84,-72,-80,-58,-79,109,-37,-72,-55,-56,139,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,-70,-69,142,-40,149,152,]),'CHAR_CTE':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'COMMA':([18,29,33,36,40,41,43,46,50,51,72,74,75,76,77,78,79,80,81,82,87,93,95,99,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,135,143,],[22,22,22,-85,47,-25,22,-23,-26,-24,-83,-57,-81,-82,-71,-84,-72,-80,-58,-79,-85,-72,-55,-56,-44,136,-42,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,-70,-69,-40,-43,]),'LEFTB':([44,133,140,141,146,158,],[49,-48,-53,147,150,159,]),'IF':([5,6,28,42,49,52,53,54,55,56,61,62,64,65,66,69,71,88,109,139,142,147,149,150,151,152,153,155,156,159,160,161,],[-5,-4,-6,-7,-85,-22,-21,-85,68,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-85,-38,-85,68,-46,68,-50,-47,-85,68,-51,]),'METHOD':([0,1,3,4,5,6,8,9,16,17,28,42,70,92,],[-2,-85,-3,-85,-5,-4,-14,-12,-11,19,-6,-7,-15,-13,]),'$end':([0,1,2,3,4,5,6,8,9,16,28,42,70,92,],[-2,-85,0,-3,-85,-5,-4,-1,-12,-11,-6,-7,-15,-13,]),'DIVISION':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,96,-79,-72,96,-73,-60,96,96,96,96,-59,96,96,96,96,96,96,]),'STRING':([7,19,36,40,41,46,47,50,51,],[15,15,-85,15,-25,-23,15,-26,-24,]),'GREATEREQUAL':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,97,-79,-72,97,-73,-60,-65,-62,-61,97,-59,-67,97,-68,-66,97,97,]),'EQUALS':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,101,-79,-72,101,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,101,101,]),'GREATERTHAN':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,106,-79,-72,106,-73,-60,-65,-62,-61,106,-59,-67,106,-68,-66,106,106,]),'VAR':([0,1,3,5,6,28,42,49,52,],[-2,-85,7,-5,-4,-6,-7,-85,7,]),'FALSE':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'TIMES':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,102,-79,-72,102,-73,-60,102,102,102,102,-59,102,102,102,102,102,102,]),'ID':([5,6,10,11,12,13,14,15,22,24,25,26,28,42,45,49,52,53,54,55,56,57,61,62,64,65,66,69,71,73,85,86,87,88,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,109,136,139,142,144,147,149,150,151,152,153,155,156,159,160,161,],[-5,-4,-77,18,-74,-75,-76,-78,29,-20,-19,32,-6,-7,50,-85,-22,-21,-85,67,-28,79,-30,-27,-29,-32,-31,-35,-33,93,79,79,79,-34,79,79,79,93,93,93,93,93,93,93,93,93,93,93,93,-36,79,-45,-39,79,-85,-38,-85,67,-46,67,-50,-47,-85,67,-51,]),'INT_CTE':([20,34,57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[27,38,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'AND':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,108,-79,-72,108,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,-70,-69,]),'RIGHTP':([36,39,40,41,46,50,51,72,74,75,76,77,78,79,80,81,82,87,93,94,95,99,110,111,112,113,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,138,143,],[-85,44,-18,-25,-23,-26,-24,-83,-57,-81,-82,-71,-84,-72,-80,-58,-79,-85,-72,120,-55,-56,133,134,-44,135,-42,140,-52,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,-70,-69,-40,145,-43,]),'RIGHTSB':([27,38,72,74,75,76,77,78,79,80,81,82,93,95,99,115,120,121,122,123,124,125,126,127,128,129,130,131,132,135,],[33,43,-83,-57,-81,-82,-71,-84,-72,-80,-58,-79,-72,-55,-56,137,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,-70,-69,-40,]),'INT':([7,19,36,40,41,46,47,50,51,],[12,12,-85,12,-25,-23,12,-26,-24,]),'SUM':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,100,-79,-72,100,-73,-60,100,-62,-61,100,-59,100,100,100,100,100,100,]),'FLOAT':([7,19,36,40,41,46,47,50,51,],[10,10,-85,10,-25,-23,10,-26,-24,]),'FLOAT_CTE':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'LESSTHAN':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,103,-79,-72,103,-73,-60,-65,-62,-61,103,-59,-67,103,-68,-66,103,103,]),'ASSIGN':([67,137,],[90,144,]),'BOOLEAN':([7,19,36,40,41,46,47,50,51,],[14,14,-85,14,-25,-23,14,-26,-24,]),'RIGHTB':([5,6,28,42,49,52,53,54,55,56,61,62,64,65,66,69,71,88,109,139,142,147,149,150,151,152,153,154,155,156,159,160,161,],[-5,-4,-6,-7,-85,-22,-21,-85,70,-28,-30,-27,-29,-32,-31,-35,-33,-34,-36,-45,-39,-85,-38,-85,-49,-46,155,156,-50,-47,-85,161,-51,]),'MAIN':([10,12,13,14,15,24,25,26,],[-77,-74,-75,-76,-78,-20,-19,31,]),'OR':([72,75,76,77,78,79,80,81,82,93,94,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-83,-81,-82,-71,-84,-72,-80,107,-79,-72,107,-73,-60,-65,-62,-61,-63,-59,-67,-64,-68,-66,-70,-69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'goto_main':([0,],[1,]),'constante':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'variables':([3,52,],[6,6,]),'end_method':([70,],[92,]),'metodo1':([26,],[30,]),'add_globales':([1,],[4,]),'condicion2':([140,],[146,]),'condicion3':([155,],[157,]),'bloque':([54,147,150,159,],[55,151,153,160,]),'llamada1':([55,57,85,86,87,89,90,91,136,144,151,153,160,],[60,60,60,60,60,60,60,60,60,60,60,60,60,]),'method_vars':([49,],[53,]),'ciclo':([55,151,153,160,],[61,61,61,61,]),'tipo':([7,19,40,47,],[11,24,45,45,]),'exp2':([81,],[99,]),'exp1':([74,],[95,]),'estatuto':([55,151,153,160,],[62,62,62,62,]),'llamada':([55,57,85,86,87,89,90,91,136,144,151,153,160,],[63,74,74,74,74,74,74,74,74,74,63,63,63,]),'condicion':([55,151,153,160,],[64,64,64,64,]),'variables_list':([1,49,],[3,52,]),'params':([36,],[40,]),'lectura':([55,151,153,160,],[65,65,65,65,]),'empty':([1,4,18,29,33,36,43,49,54,87,147,150,159,],[5,9,23,23,23,41,23,5,56,112,56,56,56,]),'return':([55,151,153,160,],[66,66,66,66,]),'parametro':([40,47,],[46,51,]),'args':([87,],[113,]),'save_params':([36,],[39,]),'condicion1':([91,],[118,]),'inicio_method':([8,],[17,]),'ciclo2':([151,],[154,]),'add_method':([53,],[54,]),'ciclo1':([133,],[141,]),'tipo_metodo':([19,],[26,]),'expresion':([57,73,85,86,87,89,90,91,96,97,98,100,101,102,103,104,105,106,107,108,136,144,],[81,94,81,81,81,81,81,81,121,122,123,124,125,126,127,128,129,130,131,132,81,81,]),'metodo':([8,],[16,]),'asignacion':([55,151,153,160,],[69,69,69,69,]),'metodos':([4,],[8,]),'return1':([57,],[83,]),'programa':([0,],[2,]),'exp':([57,85,86,87,89,90,91,136,144,],[84,110,111,114,115,117,119,143,148,]),'lista_variables':([18,29,33,43,],[21,35,37,48,]),'escritura':([55,151,153,160,],[71,71,71,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> goto_main add_globales metodos','programa',3,'p_programa','Parser.py',380),
  ('goto_main -> <empty>','goto_main',0,'p_goto_main','Parser.py',407),
  ('add_globales -> variables_list','add_globales',1,'p_add_globales','Parser.py',418),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',423),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',424),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',435),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',436),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',453),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',454),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',455),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',467),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',468),
  ('metodo -> inicio_method METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB end_method','metodo',13,'p_metodo','Parser.py',482),
  ('inicio_method -> <empty>','inicio_method',0,'p_inicio_method','Parser.py',500),
  ('end_method -> <empty>','end_method',0,'p_end_method','Parser.py',504),
  ('metodo1 -> MAIN','metodo1',1,'p_metodo1','Parser.py',515),
  ('metodo1 -> ID','metodo1',1,'p_metodo1','Parser.py',516),
  ('save_params -> params','save_params',1,'p_save_params','Parser.py',526),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',533),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',534),
  ('add_method -> <empty>','add_method',0,'p_add_method','Parser.py',540),
  ('method_vars -> variables_list','method_vars',1,'p_method_vars','Parser.py',596),
  ('params -> params parametro','params',2,'p_params','Parser.py',602),
  ('params -> params COMMA parametro','params',3,'p_params','Parser.py',603),
  ('params -> empty','params',1,'p_params','Parser.py',604),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',619),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',626),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',627),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',630),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',631),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',632),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',633),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',634),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',635),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',636),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','Parser.py',641),
  ('return1 -> exp','return1',1,'p_return1','Parser.py',644),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',663),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',710),
  ('llamada -> llamada1 LEFTP args RIGHTP','llamada',4,'p_llamada','Parser.py',722),
  ('llamada1 -> ID','llamada1',1,'p_llamada1','Parser.py',749),
  ('args -> exp','args',1,'p_args','Parser.py',784),
  ('args -> args COMMA exp','args',3,'p_args','Parser.py',785),
  ('args -> empty','args',1,'p_args','Parser.py',786),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',870),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser.py',871),
  ('ciclo -> WHILE LEFTP exp RIGHTP ciclo1 LEFTB bloque ciclo2 RIGHTB','ciclo',9,'p_ciclo','Parser.py',987),
  ('ciclo1 -> <empty>','ciclo1',0,'p_ciclo1','Parser.py',994),
  ('ciclo2 -> <empty>','ciclo2',0,'p_ciclo2','Parser.py',1007),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB','condicion',8,'p_condicion','Parser.py',1018),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB','condicion',13,'p_condicion','Parser.py',1019),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',1024),
  ('condicion2 -> <empty>','condicion2',0,'p_condicion2','Parser.py',1030),
  ('condicion3 -> <empty>','condicion3',0,'p_condicion3','Parser.py',1046),
  ('exp -> llamada exp1','exp',2,'p_exp','Parser.py',1056),
  ('exp -> expresion exp2','exp',2,'p_exp','Parser.py',1057),
  ('exp1 -> <empty>','exp1',0,'p_exp1','Parser.py',1062),
  ('exp2 -> <empty>','exp2',0,'p_exp2','Parser.py',1068),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','Parser.py',1074),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser.py',1075),
  ('expresion -> expresion SUM expresion','expresion',3,'p_expresion','Parser.py',1076),
  ('expresion -> expresion LESS expresion','expresion',3,'p_expresion','Parser.py',1077),
  ('expresion -> expresion EQUALS expresion','expresion',3,'p_expresion','Parser.py',1078),
  ('expresion -> expresion NOTEQUAL expresion','expresion',3,'p_expresion','Parser.py',1079),
  ('expresion -> expresion GREATEREQUAL expresion','expresion',3,'p_expresion','Parser.py',1080),
  ('expresion -> expresion GREATERTHAN expresion','expresion',3,'p_expresion','Parser.py',1081),
  ('expresion -> expresion LESSTHAN expresion','expresion',3,'p_expresion','Parser.py',1082),
  ('expresion -> expresion LESSEQUAL expresion','expresion',3,'p_expresion','Parser.py',1083),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser.py',1084),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser.py',1085),
  ('expresion -> constante','expresion',1,'p_expresion2','Parser.py',1227),
  ('expresion -> ID','expresion',1,'p_expresion2','Parser.py',1228),
  ('expresion -> LEFTP expresion RIGHTP','expresion',3,'p_expresion2','Parser.py',1229),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',1239),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',1240),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',1241),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',1242),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',1243),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',1259),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',1260),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',1261),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',1262),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',1263),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',1264),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',1269),
]
