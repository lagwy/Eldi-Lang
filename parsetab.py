
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F1BF884C0EE560C57950BCF36FF38F68'
    
_lr_action_items = {'NOTEQUAL':([81,84,85,87,89,90,91,92,93,95,104,127,138,139,],[-72,-70,-71,108,-57,-60,-73,-61,-68,-69,-61,-62,-58,-59,]),'STRING_CTE':([64,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[85,-72,85,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,85,85,85,85,-74,85,-61,85,85,85,85,85,85,85,85,85,85,85,85,85,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,85,-34,85,-36,-35,]),'RETURN':([3,4,30,46,48,49,50,52,56,57,59,60,62,63,67,68,70,71,72,75,77,99,118,144,149,150,156,157,159,161,162,163,164,166,167,168,],[-3,-2,-4,-74,-74,-74,-5,-74,-74,-74,64,-20,64,64,-26,-19,-27,-22,-21,-25,-23,-24,-28,-37,-74,-30,-74,64,-29,64,-39,-38,-40,-74,64,-41,]),'LESS':([81,84,85,87,88,89,90,91,92,93,95,104,127,130,131,132,133,134,135,138,139,],[-72,-70,-71,-50,115,-57,-60,-73,-61,-68,-69,-61,-62,-52,-51,-53,-55,-54,-56,-58,-59,]),'READ':([101,],[122,]),'VOID':([9,],[17,]),'ELSE':([164,],[165,]),'CHAR':([6,9,26,27,28,32,33,34,35,41,47,53,54,55,78,],[13,13,-74,-74,-74,13,-15,13,13,-14,-74,-16,-18,13,-17,]),'LESSEQUAL':([81,84,85,87,89,90,91,92,93,95,104,127,138,139,],[-72,-70,-71,113,-57,-60,-73,-61,-68,-69,-61,-62,-58,-59,]),'WHILE':([3,4,30,46,48,49,50,52,56,57,59,60,62,63,67,68,70,71,72,75,77,99,118,144,149,150,156,157,159,161,162,163,164,166,167,168,],[-3,-2,-4,-74,-74,-74,-5,-74,-74,-74,65,-20,65,65,-26,-19,-27,-22,-21,-25,-23,-24,-28,-37,-74,-30,-74,65,-29,65,-39,-38,-40,-74,65,-41,]),'PRINT':([3,4,30,46,48,49,50,52,56,57,59,60,62,63,67,68,70,71,72,75,77,99,118,144,149,150,156,157,159,161,162,163,164,166,167,168,],[-3,-2,-4,-74,-74,-74,-5,-74,-74,-74,66,-20,66,66,-26,-19,-27,-22,-21,-25,-23,-24,-28,-37,-74,-30,-74,66,-29,66,-39,-38,-40,-74,66,-41,]),'TRUE':([64,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[81,-72,81,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,81,81,81,81,-74,81,-61,81,81,81,81,81,81,81,81,81,81,81,81,81,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,81,-34,81,-36,-35,]),'LEFTSB':([18,31,73,],[22,37,100,]),'LEFTP':([19,20,21,64,65,66,73,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,122,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[26,27,28,82,97,98,102,103,-72,82,-42,-70,-71,-44,-50,-47,-57,-60,-73,102,-68,-43,-69,82,82,82,82,-74,82,-61,82,82,82,82,82,82,82,82,82,82,82,82,143,82,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,82,-34,82,-36,-35,]),'SEMICOLON':([18,23,25,31,36,38,44,51,58,69,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,104,123,127,128,129,130,131,132,133,134,135,136,137,138,139,141,146,152,158,],[-74,30,-8,-74,-74,-6,50,-74,-7,99,-72,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,118,-61,144,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,150,-31,159,163,]),'CHAR_CTE':([64,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[84,-72,84,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,84,84,84,84,-74,84,-61,84,84,84,84,84,84,84,84,84,84,84,84,84,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,84,-34,84,-36,-35,]),'COMMA':([18,31,36,47,51,81,83,84,85,86,87,88,89,90,91,92,93,94,95,104,127,128,129,130,131,132,133,134,135,136,137,138,139,146,147,],[24,24,24,55,24,-72,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,-61,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-31,154,]),'LEFTB':([39,42,43,140,148,165,],[46,48,49,149,156,166,]),'IF':([3,4,30,46,48,49,50,52,56,57,59,60,62,63,67,68,70,71,72,75,77,99,118,144,149,150,156,157,159,161,162,163,164,166,167,168,],[-3,-2,-4,-74,-74,-74,-5,-74,-74,-74,74,-20,74,74,-26,-19,-27,-22,-21,-25,-23,-24,-28,-37,-74,-30,-74,74,-29,74,-39,-38,-40,-74,74,-41,]),'METHOD':([0,1,3,4,5,7,8,30,50,76,79,80,],[-74,-74,-3,-2,9,-10,-9,-4,-5,-13,-12,-11,]),'$end':([0,1,2,3,4,5,7,8,30,50,76,79,80,],[-74,-74,0,-3,-2,-1,-10,-9,-4,-5,-13,-12,-11,]),'DIVISION':([81,84,85,86,87,88,89,90,91,92,93,95,104,127,130,131,132,133,134,135,136,137,138,139,],[-72,-70,-71,106,-50,-47,-57,-60,-73,-61,-68,-69,-61,-62,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,]),'STRING':([6,9,26,27,28,32,33,34,35,41,47,53,54,55,78,],[15,15,-74,-74,-74,15,-15,15,15,-14,-74,-16,-18,15,-17,]),'GREATEREQUAL':([81,84,85,87,89,90,91,92,93,95,104,127,138,139,],[-72,-70,-71,110,-57,-60,-73,-61,-68,-69,-61,-62,-58,-59,]),'EQUALS':([81,84,85,87,89,90,91,92,93,95,104,127,138,139,],[-72,-70,-71,109,-57,-60,-73,-61,-68,-69,-61,-62,-58,-59,]),'GREATERTHAN':([81,84,85,87,89,90,91,92,93,95,104,127,138,139,],[-72,-70,-71,112,-57,-60,-73,-61,-68,-69,-61,-62,-58,-59,]),'VAR':([0,1,3,4,30,46,48,49,50,52,56,57,],[-74,6,-3,-2,-4,-74,-74,-74,-5,6,6,6,]),'FALSE':([64,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[91,-72,91,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,91,91,91,91,-74,91,-61,91,91,91,91,91,91,91,91,91,91,91,91,91,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,91,-34,91,-36,-35,]),'TIMES':([81,84,85,86,87,88,89,90,91,92,93,95,104,127,130,131,132,133,134,135,136,137,138,139,],[-72,-70,-71,107,-50,-47,-57,-60,-73,-61,-68,-69,-61,-62,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,]),'ID':([3,4,10,11,12,13,14,15,16,17,24,30,40,46,48,49,50,52,56,57,59,60,61,62,63,64,67,68,70,71,72,75,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,],[-3,-2,-66,18,-63,-64,-65,-67,19,20,31,-4,47,-74,-74,-74,-5,-74,-74,-74,73,-20,78,73,73,92,-26,-19,-27,-22,-21,-25,-23,-72,104,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,92,92,-24,92,92,-74,92,-61,104,104,104,104,104,104,104,104,104,104,104,104,-28,92,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-37,-32,-31,-74,-74,-30,92,-34,92,-36,-74,73,-29,-35,73,-39,-38,-40,-74,73,-41,]),'INT_CTE':([22,37,64,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[29,45,93,-72,93,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,93,93,93,93,-74,93,-61,93,93,93,93,93,93,93,93,93,93,93,93,93,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,93,-34,93,-36,-35,]),'AND':([81,84,85,89,90,91,92,93,95,104,127,],[-72,-70,-71,116,-60,-73,-61,-68,-69,-61,-62,]),'RIGHTP':([26,27,28,32,33,34,35,41,47,53,54,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,102,104,105,119,120,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,145,146,147,153,155,160,],[-74,-74,-74,39,-15,42,43,-14,-74,-16,-18,-17,-72,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,-74,-61,127,140,141,146,-33,148,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,152,-32,-31,-74,-34,-36,-35,]),'RIGHTSB':([29,45,81,83,84,85,86,87,88,89,90,91,92,93,94,95,104,121,127,128,129,130,131,132,133,134,135,136,137,138,139,146,],[36,51,-72,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,-61,142,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-31,]),'INT':([6,9,26,27,28,32,33,34,35,41,47,53,54,55,78,],[12,12,-74,-74,-74,12,-15,12,12,-14,-74,-16,-18,12,-17,]),'SUM':([81,84,85,87,88,89,90,91,92,93,95,104,127,130,131,132,133,134,135,138,139,],[-72,-70,-71,-50,114,-57,-60,-73,-61,-68,-69,-61,-62,-52,-51,-53,-55,-54,-56,-58,-59,]),'FLOAT':([6,9,26,27,28,32,33,34,35,41,47,53,54,55,78,],[10,10,-74,-74,-74,10,-15,10,10,-14,-74,-16,-18,10,-17,]),'FLOAT_CTE':([64,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,145,146,147,151,153,154,155,160,],[95,-72,95,-42,-70,-71,-44,-50,-47,-57,-60,-73,-61,-68,-43,-69,95,95,95,95,-74,95,-61,95,95,95,95,95,95,95,95,95,95,95,95,95,-33,-62,-46,-45,-52,-51,-53,-55,-54,-56,-48,-49,-58,-59,-32,-31,-74,95,-34,95,-36,-35,]),'LESSTHAN':([81,84,85,87,89,90,91,92,93,95,104,127,138,139,],[-72,-70,-71,111,-57,-60,-73,-61,-68,-69,-61,-62,-58,-59,]),'ASSIGN':([73,142,],[101,151,]),'BOOLEAN':([6,9,26,27,28,32,33,34,35,41,47,53,54,55,78,],[14,14,-74,-74,-74,14,-15,14,14,-14,-74,-16,-18,14,-17,]),'RIGHTB':([3,4,30,46,48,49,50,52,56,57,59,60,62,63,67,68,70,71,72,75,77,99,118,144,149,150,156,157,159,161,162,163,164,166,167,168,],[-3,-2,-4,-74,-74,-74,-5,-74,-74,-74,76,-20,79,80,-26,-19,-27,-22,-21,-25,-23,-24,-28,-37,-74,-30,-74,162,-29,164,-39,-38,-40,-74,168,-41,]),'MAIN':([17,],[21,]),'OR':([81,84,85,89,90,91,92,93,95,104,127,],[-72,-70,-71,117,-60,-73,-61,-68,-69,-61,-62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constante':([64,82,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,124,151,154,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'variables':([1,52,56,57,],[4,4,4,4,]),'bloque':([52,56,57,149,156,166,],[59,62,63,157,161,167,]),'ciclo':([59,62,63,157,161,167,],[67,67,67,67,67,67,]),'tipo':([6,9,32,34,35,55,],[11,16,40,40,40,61,]),'llamada_list':([102,],[124,]),'estatuto':([59,62,63,157,161,167,],[68,68,68,68,68,68,]),'llamada':([59,62,63,64,97,98,100,101,103,124,151,154,157,161,167,],[69,69,69,83,83,83,83,83,83,83,83,83,69,69,69,]),'condicion':([59,62,63,157,161,167,],[70,70,70,70,70,70,]),'variables_list':([0,46,48,49,],[1,52,56,57,]),'params':([26,27,28,],[32,34,35,]),'lectura':([59,62,63,157,161,167,],[71,71,71,71,71,71,]),'empty':([0,1,18,26,27,28,31,36,46,47,48,49,51,52,56,57,102,147,149,156,166,],[3,7,25,33,33,33,25,25,3,54,3,3,25,60,60,60,125,155,60,60,60,]),'expresion1':([64,82,97,98,100,101,103,106,107,114,115,124,151,154,],[86,86,86,86,86,86,86,86,86,136,137,86,86,86,]),'expresion3':([64,82,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,124,151,154,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,138,139,87,87,87,]),'expresion2':([64,82,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,124,151,154,],[88,88,88,88,88,88,88,88,88,130,131,132,133,134,135,88,88,88,88,88,]),'return':([59,62,63,157,161,167,],[72,72,72,72,72,72,]),'expresion4':([64,82,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,124,151,154,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'parametro':([32,34,35,],[41,41,41,]),'args':([124,],[145,]),'mas_parametros':([47,],[53,]),'mas_args':([147,],[153,]),'expresion':([64,82,97,98,100,101,103,106,107,124,151,154,],[94,105,94,94,94,94,94,128,129,94,94,94,]),'metodo':([5,],[8,]),'asignacion':([59,62,63,157,161,167,],[75,75,75,75,75,75,]),'metodos':([1,],[5,]),'programa':([0,],[2,]),'exp':([64,97,98,100,101,103,124,151,154,],[96,119,120,121,123,126,147,158,160,]),'lista_variables':([18,31,36,51,],[23,38,44,58,]),'escritura':([59,62,63,157,161,167,],[77,77,77,77,77,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variables_list metodos','programa',2,'p_programa','Parser.py',66),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',69),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',70),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',73),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',74),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',78),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',79),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',80),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',83),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',84),
  ('metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',87),
  ('metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',88),
  ('metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',89),
  ('params -> params parametro','params',2,'p_params','Parser.py',92),
  ('params -> empty','params',1,'p_params','Parser.py',93),
  ('parametro -> tipo ID mas_parametros','parametro',3,'p_parametro','Parser.py',96),
  ('mas_parametros -> COMMA tipo ID','mas_parametros',3,'p_mas_parametros','Parser.py',99),
  ('mas_parametros -> empty','mas_parametros',1,'p_mas_parametros','Parser.py',100),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',103),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',104),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',107),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',108),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',109),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',110),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',111),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',112),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',113),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',116),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',119),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',122),
  ('llamada -> ID LEFTP llamada_list RIGHTP','llamada',4,'p_llamada','Parser.py',125),
  ('llamada_list -> llamada_list args','llamada_list',2,'p_llamada_list','Parser.py',128),
  ('llamada_list -> empty','llamada_list',1,'p_llamada_list','Parser.py',129),
  ('args -> exp mas_args','args',2,'p_args','Parser.py',132),
  ('mas_args -> COMMA exp','mas_args',2,'p_mas_args','Parser.py',135),
  ('mas_args -> empty','mas_args',1,'p_mas_args','Parser.py',136),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',139),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser.py',140),
  ('ciclo -> WHILE LEFTP exp RIGHTP LEFTB bloque RIGHTB','ciclo',7,'p_ciclo','Parser.py',143),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB','condicion',7,'p_condicion','Parser.py',146),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB ELSE LEFTB bloque RIGHTB','condicion',11,'p_condicion','Parser.py',147),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',150),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',151),
  ('expresion -> expresion1','expresion',1,'p_expresion','Parser.py',154),
  ('expresion -> expresion1 TIMES expresion','expresion',3,'p_expresion','Parser.py',155),
  ('expresion -> expresion1 DIVISION expresion','expresion',3,'p_expresion','Parser.py',156),
  ('expresion1 -> expresion2','expresion1',1,'p_expresion1','Parser.py',159),
  ('expresion1 -> expresion2 SUM expresion1','expresion1',3,'p_expresion1','Parser.py',160),
  ('expresion1 -> expresion2 LESS expresion1','expresion1',3,'p_expresion1','Parser.py',161),
  ('expresion2 -> expresion3','expresion2',1,'p_expresion2','Parser.py',164),
  ('expresion2 -> expresion3 EQUALS expresion2','expresion2',3,'p_expresion2','Parser.py',165),
  ('expresion2 -> expresion3 NOTEQUAL expresion2','expresion2',3,'p_expresion2','Parser.py',166),
  ('expresion2 -> expresion3 GREATEREQUAL expresion2','expresion2',3,'p_expresion2','Parser.py',167),
  ('expresion2 -> expresion3 GREATERTHAN expresion2','expresion2',3,'p_expresion2','Parser.py',168),
  ('expresion2 -> expresion3 LESSTHAN expresion2','expresion2',3,'p_expresion2','Parser.py',169),
  ('expresion2 -> expresion3 LESSEQUAL expresion2','expresion2',3,'p_expresion2','Parser.py',170),
  ('expresion3 -> expresion4','expresion3',1,'p_expresion3','Parser.py',173),
  ('expresion3 -> expresion4 AND expresion3','expresion3',3,'p_expresion3','Parser.py',174),
  ('expresion3 -> expresion4 OR expresion3','expresion3',3,'p_expresion3','Parser.py',175),
  ('expresion4 -> constante','expresion4',1,'p_expresion4','Parser.py',178),
  ('expresion4 -> ID','expresion4',1,'p_expresion4','Parser.py',179),
  ('expresion4 -> LEFTP expresion RIGHTP','expresion4',3,'p_expresion4','Parser.py',180),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',183),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',184),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',185),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',186),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',187),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',190),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',191),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',192),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',193),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',194),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',195),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',199),
]
