
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B99A48F80EFFE1E76C5300CC945D9059'
    
_lr_action_items = {'NOTEQUAL':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,100,-75,-68,100,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,100,100,]),'STRING_CTE':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'RETURN':([3,4,29,43,46,48,49,51,52,53,58,59,61,62,63,66,68,85,105,135,138,143,145,146,147,148,149,151,152,155,156,157,],[-3,-2,-4,-81,-5,-18,-17,-81,54,-24,-26,-23,-25,-28,-27,-31,-29,-30,-32,-41,-35,-81,-34,-81,54,-42,54,-46,-43,-81,54,-47,]),'LESS':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,94,-75,-68,94,-69,-56,94,-58,-57,94,-55,94,94,94,94,94,94,]),'READ':([87,],[112,]),'VOID':([9,],[17,]),'ELSE':([151,153,],[-50,154,]),'CHAR':([6,9,27,32,33,39,40,44,45,],[13,13,-81,13,-21,-19,13,-22,-20,]),'LESSEQUAL':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,101,-75,-68,101,-69,-56,-61,-58,-57,101,-55,-63,101,-64,-62,101,101,]),'WHILE':([3,4,29,43,46,48,49,51,52,53,58,59,61,62,63,66,68,85,105,135,138,143,145,146,147,148,149,151,152,155,156,157,],[-3,-2,-4,-81,-5,-18,-17,-81,55,-24,-26,-23,-25,-28,-27,-31,-29,-30,-32,-41,-35,-81,-34,-81,55,-42,55,-46,-43,-81,55,-47,]),'PRINT':([3,4,29,43,46,48,49,51,52,53,58,59,61,62,63,66,68,85,105,135,138,143,145,146,147,148,149,151,152,155,156,157,],[-3,-2,-4,-81,-5,-18,-17,-81,56,-24,-26,-23,-25,-28,-27,-31,-29,-30,-32,-41,-35,-81,-34,-81,56,-42,56,-46,-43,-81,56,-47,]),'TRUE':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'LEFTSB':([19,30,64,],[23,35,86,]),'LEFTP':([20,21,22,54,55,56,57,64,65,70,76,82,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,112,132,140,],[27,-12,-13,70,-44,83,84,-37,88,70,-37,106,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,134,70,70,]),'SEMICOLON':([19,24,26,30,34,36,41,47,50,60,69,71,72,73,74,75,76,77,78,79,80,81,89,91,95,113,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,141,144,],[-81,29,-8,-81,-81,-6,46,-81,-7,85,-79,-53,-77,-78,-67,-80,-68,-76,-54,-75,105,-33,-68,-51,-52,135,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,-66,-65,138,-36,145,148,]),'CHAR_CTE':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'COMMA':([19,27,30,32,33,34,39,44,45,47,69,71,72,73,74,75,76,77,78,79,84,89,91,95,108,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,131,139,],[25,-81,25,40,-21,25,-19,-22,-20,25,-79,-53,-77,-78,-67,-80,-68,-76,-54,-75,-81,-68,-51,-52,-40,132,-38,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,-66,-65,-36,-39,]),'LEFTB':([37,136,137,142,154,],[43,-49,143,146,155,]),'IF':([3,4,29,43,46,48,49,51,52,53,58,59,61,62,63,66,68,85,105,135,138,143,145,146,147,148,149,151,152,155,156,157,],[-3,-2,-4,-81,-5,-18,-17,-81,65,-24,-26,-23,-25,-28,-27,-31,-29,-30,-32,-41,-35,-81,-34,-81,65,-42,65,-46,-43,-81,65,-47,]),'METHOD':([0,1,3,4,5,7,8,29,46,67,],[-81,-81,-3,-2,9,-10,-9,-4,-5,-11,]),'$end':([0,1,2,3,4,5,7,8,29,46,67,],[-81,-81,0,-3,-2,-1,-10,-9,-4,-5,-11,]),'DIVISION':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,92,-75,-68,92,-69,-56,92,92,92,92,-55,92,92,92,92,92,92,]),'STRING':([6,9,27,32,33,39,40,44,45,],[15,15,-81,15,-21,-19,15,-22,-20,]),'GREATEREQUAL':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,93,-75,-68,93,-69,-56,-61,-58,-57,93,-55,-63,93,-64,-62,93,93,]),'EQUALS':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,97,-75,-68,97,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,97,97,]),'GREATERTHAN':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,102,-75,-68,102,-69,-56,-61,-58,-57,102,-55,-63,102,-64,-62,102,102,]),'VAR':([0,1,3,4,29,43,46,48,],[-81,6,-3,-2,-4,-81,-5,6,]),'FALSE':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TIMES':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,98,-75,-68,98,-69,-56,98,98,98,98,-55,98,98,98,98,98,98,]),'ID':([3,4,10,11,12,13,14,15,16,17,18,25,29,38,43,46,48,49,51,52,53,54,58,59,61,62,63,66,68,70,83,84,85,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,105,106,132,135,138,140,143,145,146,147,148,149,151,152,155,156,157,],[-3,-2,-73,19,-70,-71,-72,-74,-16,-15,22,30,-4,44,-81,-5,-18,-17,-81,64,-24,76,-26,-23,-25,-28,-27,-31,-29,89,76,76,-30,76,76,76,89,89,89,89,89,89,89,89,89,89,89,89,-32,76,76,-41,-35,76,-81,-34,-81,64,-42,64,-46,-43,-81,64,-47,]),'INT_CTE':([23,35,54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[28,42,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'AND':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,104,-75,-68,104,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,-66,-65,]),'RIGHTP':([27,31,32,33,39,44,45,69,71,72,73,74,75,76,77,78,79,84,89,90,91,95,107,108,109,110,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,134,139,],[-81,37,-14,-21,-19,-22,-20,-79,-53,-77,-78,-67,-80,-68,-76,-54,-75,-81,-68,116,-51,-52,130,-40,131,-38,136,-48,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,-66,-65,137,-36,141,-39,]),'RIGHTSB':([28,42,69,71,72,73,74,75,76,77,78,79,89,91,95,111,116,117,118,119,120,121,122,123,124,125,126,127,128,131,],[34,47,-79,-53,-77,-78,-67,-80,-68,-76,-54,-75,-68,-51,-52,133,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,-66,-65,-36,]),'INT':([6,9,27,32,33,39,40,44,45,],[12,12,-81,12,-21,-19,12,-22,-20,]),'SUM':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,96,-75,-68,96,-69,-56,96,-58,-57,96,-55,96,96,96,96,96,96,]),'FLOAT':([6,9,27,32,33,39,40,44,45,],[10,10,-81,10,-21,-19,10,-22,-20,]),'FLOAT_CTE':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LESSTHAN':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,99,-75,-68,99,-69,-56,-61,-58,-57,99,-55,-63,99,-64,-62,99,99,]),'ASSIGN':([64,133,],[87,140,]),'BOOLEAN':([6,9,27,32,33,39,40,44,45,],[14,14,-81,14,-21,-19,14,-22,-20,]),'RIGHTB':([3,4,29,43,46,48,49,51,52,53,58,59,61,62,63,66,68,85,105,135,138,143,145,146,147,148,149,150,151,152,155,156,157,],[-3,-2,-4,-81,-5,-18,-17,-81,67,-24,-26,-23,-25,-28,-27,-31,-29,-30,-32,-41,-35,-81,-34,-81,-45,-42,151,152,-46,-43,-81,157,-47,]),'MAIN':([10,12,13,14,15,16,17,18,],[-73,-70,-71,-72,-74,-16,-15,21,]),'OR':([69,72,73,74,75,76,77,78,79,89,90,116,117,118,119,120,121,122,123,124,125,126,127,128,],[-79,-77,-78,-67,-80,-68,-76,103,-75,-68,103,-69,-56,-61,-58,-57,-59,-55,-63,-60,-64,-62,-66,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constante':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'variables':([1,48,],[4,4,]),'metodo1':([18,],[20,]),'condicion1':([88,],[114,]),'condicion2':([136,],[142,]),'condicion3':([151,],[153,]),'bloque':([51,143,146,155,],[52,147,149,156,]),'llamada1':([52,54,83,84,86,87,88,106,132,140,147,149,156,],[57,57,57,57,57,57,57,57,57,57,57,57,57,]),'method_vars':([43,],[49,]),'ciclo':([52,147,149,156,],[58,58,58,58,]),'tipo':([6,9,32,40,],[11,16,38,38,]),'exp2':([78,],[95,]),'exp1':([71,],[91,]),'estatuto':([52,147,149,156,],[59,59,59,59,]),'llamada':([52,54,83,84,86,87,88,106,132,140,147,149,156,],[60,71,71,71,71,71,71,71,71,71,60,60,60,]),'condicion':([52,147,149,156,],[61,61,61,61,]),'variables_list':([0,43,],[1,48,]),'params':([27,],[32,]),'lectura':([52,147,149,156,],[62,62,62,62,]),'empty':([0,1,19,27,30,34,43,47,51,84,143,146,155,],[3,7,26,33,26,26,3,26,53,108,53,53,53,]),'return':([52,147,149,156,],[63,63,63,63,]),'parametro':([32,40,],[39,45,]),'args':([84,],[109,]),'save_params':([27,],[31,]),'metodos':([1,],[5,]),'ciclo2':([147,],[150,]),'add_method':([49,],[51,]),'ciclo1':([55,],[82,]),'tipo_metodo':([9,],[18,]),'expresion':([54,70,83,84,86,87,88,92,93,94,96,97,98,99,100,101,102,103,104,106,132,140,],[78,90,78,78,78,78,78,117,118,119,120,121,122,123,124,125,126,127,128,78,78,78,]),'metodo':([5,],[8,]),'asignacion':([52,147,149,156,],[66,66,66,66,]),'return1':([54,],[80,]),'programa':([0,],[2,]),'exp':([54,83,84,86,87,88,106,132,140,],[81,107,110,111,113,115,129,139,144,]),'lista_variables':([19,30,34,47,],[24,36,41,50,]),'escritura':([52,147,149,156,],[68,68,68,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variables_list metodos','programa',2,'p_programa','Parser.py',360),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',381),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',382),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',393),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',394),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',411),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',412),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',413),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',425),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',426),
  ('metodo -> METHOD tipo_metodo metodo1 LEFTP save_params RIGHTP LEFTB method_vars add_method bloque RIGHTB','metodo',11,'p_metodo','Parser.py',439),
  ('metodo1 -> MAIN','metodo1',1,'p_metodo1','Parser.py',494),
  ('metodo1 -> ID','metodo1',1,'p_metodo1','Parser.py',495),
  ('save_params -> params','save_params',1,'p_save_params','Parser.py',501),
  ('tipo_metodo -> VOID','tipo_metodo',1,'p_tipo_metodo','Parser.py',508),
  ('tipo_metodo -> tipo','tipo_metodo',1,'p_tipo_metodo','Parser.py',509),
  ('add_method -> <empty>','add_method',0,'p_add_method','Parser.py',515),
  ('method_vars -> variables_list','method_vars',1,'p_method_vars','Parser.py',519),
  ('params -> params parametro','params',2,'p_params','Parser.py',523),
  ('params -> params COMMA parametro','params',3,'p_params','Parser.py',524),
  ('params -> empty','params',1,'p_params','Parser.py',525),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',540),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',547),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',548),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',551),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',552),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',553),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',554),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',555),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',556),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',557),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','Parser.py',562),
  ('return1 -> exp','return1',1,'p_return1','Parser.py',565),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',583),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',595),
  ('llamada -> llamada1 LEFTP args RIGHTP','llamada',4,'p_llamada','Parser.py',605),
  ('llamada1 -> ID','llamada1',1,'p_llamada1','Parser.py',652),
  ('args -> exp','args',1,'p_args','Parser.py',662),
  ('args -> args COMMA exp','args',3,'p_args','Parser.py',663),
  ('args -> empty','args',1,'p_args','Parser.py',664),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',692),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser.py',693),
  ('ciclo -> WHILE ciclo1 LEFTP exp RIGHTP LEFTB bloque ciclo2 RIGHTB','ciclo',9,'p_ciclo','Parser.py',726),
  ('ciclo1 -> <empty>','ciclo1',0,'p_ciclo1','Parser.py',733),
  ('ciclo2 -> <empty>','ciclo2',0,'p_ciclo2','Parser.py',745),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB','condicion',8,'p_condicion','Parser.py',755),
  ('condicion -> IF LEFTP condicion1 RIGHTP condicion2 LEFTB bloque RIGHTB condicion3 ELSE LEFTB bloque RIGHTB','condicion',13,'p_condicion','Parser.py',756),
  ('condicion1 -> exp','condicion1',1,'p_condicion1','Parser.py',761),
  ('condicion2 -> <empty>','condicion2',0,'p_condicion2','Parser.py',767),
  ('condicion3 -> <empty>','condicion3',0,'p_condicion3','Parser.py',782),
  ('exp -> llamada exp1','exp',2,'p_exp','Parser.py',791),
  ('exp -> expresion exp2','exp',2,'p_exp','Parser.py',792),
  ('exp1 -> <empty>','exp1',0,'p_exp1','Parser.py',797),
  ('exp2 -> <empty>','exp2',0,'p_exp2','Parser.py',803),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','Parser.py',809),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser.py',810),
  ('expresion -> expresion SUM expresion','expresion',3,'p_expresion','Parser.py',811),
  ('expresion -> expresion LESS expresion','expresion',3,'p_expresion','Parser.py',812),
  ('expresion -> expresion EQUALS expresion','expresion',3,'p_expresion','Parser.py',813),
  ('expresion -> expresion NOTEQUAL expresion','expresion',3,'p_expresion','Parser.py',814),
  ('expresion -> expresion GREATEREQUAL expresion','expresion',3,'p_expresion','Parser.py',815),
  ('expresion -> expresion GREATERTHAN expresion','expresion',3,'p_expresion','Parser.py',816),
  ('expresion -> expresion LESSTHAN expresion','expresion',3,'p_expresion','Parser.py',817),
  ('expresion -> expresion LESSEQUAL expresion','expresion',3,'p_expresion','Parser.py',818),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser.py',819),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser.py',820),
  ('expresion -> constante','expresion',1,'p_expresion2','Parser.py',900),
  ('expresion -> ID','expresion',1,'p_expresion2','Parser.py',901),
  ('expresion -> LEFTP expresion RIGHTP','expresion',3,'p_expresion2','Parser.py',902),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',912),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',913),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',914),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',915),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',916),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',932),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',933),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',934),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',935),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',936),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',937),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',942),
]
