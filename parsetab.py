
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '116529EF3F5600D52A7EE7E9935FD818'
    
_lr_action_items = {'NOTEQUAL':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,106,-64,-56,106,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,106,106,]),'STRING_CTE':([62,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[82,-67,82,-41,-65,-66,-55,-68,-56,-63,-42,-64,82,82,82,82,-69,82,-56,82,82,82,82,82,82,82,82,82,82,82,82,82,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,82,-33,82,-35,-34,]),'RETURN':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,137,142,143,149,150,152,154,155,156,157,159,160,161,],[-3,-2,-4,-69,-69,-69,-5,-69,-69,-69,62,-19,62,62,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-69,-29,-69,62,-28,62,-38,-37,-39,-69,62,-40,]),'LESS':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,101,-64,-56,101,-57,-44,101,-46,-45,101,-43,101,101,101,101,101,101,]),'READ':([94,],[115,]),'VOID':([9,],[17,]),'ELSE':([157,],[158,]),'CHAR':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[13,13,-69,-69,-69,13,-16,13,13,-14,13,-17,-15,]),'LESSEQUAL':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,107,-64,-56,107,-57,-44,-49,-46,-45,107,-43,-51,107,-52,-50,107,107,]),'WHILE':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,137,142,143,149,150,152,154,155,156,157,159,160,161,],[-3,-2,-4,-69,-69,-69,-5,-69,-69,-69,63,-19,63,63,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-69,-29,-69,63,-28,63,-38,-37,-39,-69,63,-40,]),'PRINT':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,137,142,143,149,150,152,154,155,156,157,159,160,161,],[-3,-2,-4,-69,-69,-69,-5,-69,-69,-69,64,-19,64,64,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-69,-29,-69,64,-28,64,-38,-37,-39,-69,64,-40,]),'TRUE':([62,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[78,-67,78,-41,-65,-66,-55,-68,-56,-63,-42,-64,78,78,78,78,-69,78,-56,78,78,78,78,78,78,78,78,78,78,78,78,78,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,78,-33,78,-35,-34,]),'LEFTSB':([18,31,71,],[22,37,93,]),'LEFTP':([19,20,21,62,63,64,71,72,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,115,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[26,27,28,79,90,91,95,96,-67,79,-41,-65,-66,-55,-68,95,-63,-42,-64,79,79,79,79,-69,79,-56,79,79,79,79,79,79,79,79,79,79,79,79,136,79,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,79,-33,79,-35,-34,]),'SEMICOLON':([18,23,25,31,36,38,45,53,57,67,78,80,81,82,83,84,85,86,87,88,89,97,116,120,121,122,123,124,125,126,127,128,129,130,131,132,134,139,145,151,],[-69,30,-8,-69,-69,-6,52,-69,-7,92,-67,-41,-65,-66,-55,-68,-56,-63,-42,-64,111,-56,137,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,143,-30,152,156,]),'CHAR_CTE':([62,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[81,-67,81,-41,-65,-66,-55,-68,-56,-63,-42,-64,81,81,81,81,-69,81,-56,81,81,81,81,81,81,81,81,81,81,81,81,81,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,81,-33,81,-35,-34,]),'COMMA':([18,26,27,28,31,32,33,34,35,36,41,48,49,53,78,80,81,82,83,84,85,86,87,88,97,120,121,122,123,124,125,126,127,128,129,130,131,132,139,140,],[24,-69,-69,-69,24,42,-16,42,42,24,-14,-17,-15,24,-67,-41,-65,-66,-55,-68,-56,-63,-42,-64,-56,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-30,147,]),'LEFTB':([39,43,44,133,141,158,],[47,50,51,142,149,159,]),'IF':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,137,142,143,149,150,152,154,155,156,157,159,160,161,],[-3,-2,-4,-69,-69,-69,-5,-69,-69,-69,72,-19,72,72,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-69,-29,-69,72,-28,72,-38,-37,-39,-69,72,-40,]),'METHOD':([0,1,3,4,5,7,8,30,52,74,76,77,],[-69,-69,-3,-2,9,-10,-9,-4,-5,-13,-12,-11,]),'$end':([0,1,2,3,4,5,7,8,30,52,74,76,77,],[-69,-69,0,-3,-2,-1,-10,-9,-4,-5,-13,-12,-11,]),'DIVISION':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,99,-64,-56,99,-57,-44,99,99,99,99,-43,99,99,99,99,99,99,]),'STRING':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[15,15,-69,-69,-69,15,-16,15,15,-14,15,-17,-15,]),'GREATEREQUAL':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,100,-64,-56,100,-57,-44,-49,-46,-45,100,-43,-51,100,-52,-50,100,100,]),'EQUALS':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,103,-64,-56,103,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,103,103,]),'GREATERTHAN':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,108,-64,-56,108,-57,-44,-49,-46,-45,108,-43,-51,108,-52,-50,108,108,]),'VAR':([0,1,3,4,30,47,50,51,52,54,55,56,],[-69,6,-3,-2,-4,-69,-69,-69,-5,6,6,6,]),'FALSE':([62,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[84,-67,84,-41,-65,-66,-55,-68,-56,-63,-42,-64,84,84,84,84,-69,84,-56,84,84,84,84,84,84,84,84,84,84,84,84,84,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,84,-33,84,-35,-34,]),'TIMES':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,104,-64,-56,104,-57,-44,104,104,104,104,-43,104,104,104,104,104,104,]),'ID':([3,4,10,11,12,13,14,15,16,17,24,30,40,47,50,51,52,54,55,56,58,59,60,61,62,65,66,68,69,70,73,75,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,137,138,139,140,142,143,144,146,147,148,149,150,152,153,154,155,156,157,159,160,161,],[-3,-2,-61,18,-58,-59,-60,-62,19,20,31,-4,48,-69,-69,-69,-5,-69,-69,-69,71,-19,71,71,85,-25,-18,-26,-21,-20,-24,-22,-67,97,-41,-65,-66,-55,-68,-56,-63,-42,-64,85,85,-23,85,85,-69,85,-56,97,97,97,97,97,97,97,97,97,97,97,97,-27,85,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-36,-31,-30,-69,-69,-29,85,-33,85,-35,-69,71,-28,-34,71,-38,-37,-39,-69,71,-40,]),'INT_CTE':([22,37,62,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[29,46,86,-67,86,-41,-65,-66,-55,-68,-56,-63,-42,-64,86,86,86,86,-69,86,-56,86,86,86,86,86,86,86,86,86,86,86,86,86,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,86,-33,86,-35,-34,]),'AND':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,110,-64,-56,110,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,]),'RIGHTP':([26,27,28,32,33,34,35,41,48,49,78,80,81,82,83,84,85,86,87,88,95,97,98,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,138,139,140,146,148,153,],[-69,-69,-69,39,-16,43,44,-14,-17,-15,-67,-41,-65,-66,-55,-68,-56,-63,-42,-64,-69,-56,120,133,134,139,-32,141,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,145,-31,-30,-69,-33,-35,-34,]),'RIGHTSB':([29,46,78,80,81,82,83,84,85,86,87,88,97,114,120,121,122,123,124,125,126,127,128,129,130,131,132,139,],[36,53,-67,-41,-65,-66,-55,-68,-56,-63,-42,-64,-56,135,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-30,]),'INT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[12,12,-69,-69,-69,12,-16,12,12,-14,12,-17,-15,]),'SUM':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,102,-64,-56,102,-57,-44,102,-46,-45,102,-43,102,102,102,102,102,102,]),'FLOAT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[10,10,-69,-69,-69,10,-16,10,10,-14,10,-17,-15,]),'FLOAT_CTE':([62,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,144,146,147,148,153,],[88,-67,88,-41,-65,-66,-55,-68,-56,-63,-42,-64,88,88,88,88,-69,88,-56,88,88,88,88,88,88,88,88,88,88,88,88,88,-32,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,-31,-30,-69,88,-33,88,-35,-34,]),'LESSTHAN':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,105,-64,-56,105,-57,-44,-49,-46,-45,105,-43,-51,105,-52,-50,105,105,]),'ASSIGN':([71,135,],[94,144,]),'BOOLEAN':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[14,14,-69,-69,-69,14,-16,14,14,-14,14,-17,-15,]),'RIGHTB':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,137,142,143,149,150,152,154,155,156,157,159,160,161,],[-3,-2,-4,-69,-69,-69,-5,-69,-69,-69,74,-19,76,77,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-69,-29,-69,155,-28,157,-38,-37,-39,-69,161,-40,]),'MAIN':([17,],[21,]),'OR':([78,81,82,83,84,85,86,87,88,97,98,120,121,122,123,124,125,126,127,128,129,130,131,132,],[-67,-65,-66,-55,-68,-56,-63,109,-64,-56,109,-57,-44,-49,-46,-45,-47,-43,-51,-48,-52,-50,-54,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constante':([62,79,90,91,93,94,96,99,100,101,102,103,104,105,106,107,108,109,110,117,144,147,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'variables':([1,54,55,56,],[4,4,4,4,]),'bloque':([54,55,56,142,149,159,],[58,60,61,150,154,160,]),'ciclo':([58,60,61,150,154,160,],[65,65,65,65,65,65,]),'tipo':([6,9,32,34,35,42,],[11,16,40,40,40,40,]),'llamada_list':([95,],[117,]),'estatuto':([58,60,61,150,154,160,],[66,66,66,66,66,66,]),'llamada':([58,60,61,62,90,91,93,94,96,117,144,147,150,154,160,],[67,67,67,80,80,80,80,80,80,80,80,80,67,67,67,]),'condicion':([58,60,61,150,154,160,],[68,68,68,68,68,68,]),'variables_list':([0,47,50,51,],[1,54,55,56,]),'params':([26,27,28,],[32,34,35,]),'lectura':([58,60,61,150,154,160,],[69,69,69,69,69,69,]),'empty':([0,1,18,26,27,28,31,36,47,50,51,53,54,55,56,95,140,142,149,159,],[3,7,25,33,33,33,25,25,3,3,3,25,59,59,59,118,148,59,59,59,]),'return':([58,60,61,150,154,160,],[70,70,70,70,70,70,]),'parametro':([32,34,35,42,],[41,41,41,49,]),'args':([117,],[138,]),'metodos':([1,],[5,]),'mas_args':([140,],[146,]),'expresion':([62,79,90,91,93,94,96,99,100,101,102,103,104,105,106,107,108,109,110,117,144,147,],[87,98,87,87,87,87,87,121,122,123,124,125,126,127,128,129,130,131,132,87,87,87,]),'metodo':([5,],[8,]),'asignacion':([58,60,61,150,154,160,],[73,73,73,73,73,73,]),'programa':([0,],[2,]),'exp':([62,90,91,93,94,96,117,144,147,],[89,112,113,114,116,119,140,151,153,]),'lista_variables':([18,31,36,53,],[23,38,45,57,]),'escritura':([58,60,61,150,154,160,],[75,75,75,75,75,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variables_list metodos','programa',2,'p_programa','Parser2.py',18),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser2.py',21),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser2.py',22),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser2.py',25),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser2.py',26),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser2.py',29),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser2.py',30),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser2.py',31),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser2.py',34),
  ('metodos -> empty','metodos',1,'p_metodos','Parser2.py',35),
  ('metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser2.py',38),
  ('metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser2.py',39),
  ('metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser2.py',40),
  ('params -> params parametro','params',2,'p_params','Parser2.py',43),
  ('params -> params COMMA parametro','params',3,'p_params','Parser2.py',44),
  ('params -> empty','params',1,'p_params','Parser2.py',45),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser2.py',48),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser2.py',51),
  ('bloque -> empty','bloque',1,'p_bloque','Parser2.py',52),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser2.py',55),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser2.py',56),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser2.py',57),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser2.py',58),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser2.py',59),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser2.py',60),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser2.py',61),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser2.py',64),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser2.py',67),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser2.py',70),
  ('llamada -> ID LEFTP llamada_list RIGHTP','llamada',4,'p_llamada','Parser2.py',73),
  ('llamada_list -> llamada_list args','llamada_list',2,'p_llamada_list','Parser2.py',76),
  ('llamada_list -> empty','llamada_list',1,'p_llamada_list','Parser2.py',77),
  ('args -> exp mas_args','args',2,'p_args','Parser2.py',80),
  ('mas_args -> COMMA exp','mas_args',2,'p_mas_args','Parser2.py',83),
  ('mas_args -> empty','mas_args',1,'p_mas_args','Parser2.py',84),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser2.py',87),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser2.py',88),
  ('ciclo -> WHILE LEFTP exp RIGHTP LEFTB bloque RIGHTB','ciclo',7,'p_ciclo','Parser2.py',91),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB','condicion',7,'p_condicion','Parser2.py',94),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB ELSE LEFTB bloque RIGHTB','condicion',11,'p_condicion','Parser2.py',95),
  ('exp -> llamada','exp',1,'p_exp','Parser2.py',98),
  ('exp -> expresion','exp',1,'p_exp','Parser2.py',99),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','Parser2.py',102),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser2.py',103),
  ('expresion -> expresion SUM expresion','expresion',3,'p_expresion','Parser2.py',104),
  ('expresion -> expresion LESS expresion','expresion',3,'p_expresion','Parser2.py',105),
  ('expresion -> expresion EQUALS expresion','expresion',3,'p_expresion','Parser2.py',106),
  ('expresion -> expresion NOTEQUAL expresion','expresion',3,'p_expresion','Parser2.py',107),
  ('expresion -> expresion GREATEREQUAL expresion','expresion',3,'p_expresion','Parser2.py',108),
  ('expresion -> expresion GREATERTHAN expresion','expresion',3,'p_expresion','Parser2.py',109),
  ('expresion -> expresion LESSTHAN expresion','expresion',3,'p_expresion','Parser2.py',110),
  ('expresion -> expresion LESSEQUAL expresion','expresion',3,'p_expresion','Parser2.py',111),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser2.py',112),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser2.py',113),
  ('expresion -> constante','expresion',1,'p_expresion2','Parser2.py',116),
  ('expresion -> ID','expresion',1,'p_expresion2','Parser2.py',117),
  ('expresion -> LEFTP expresion RIGHTP','expresion',3,'p_expresion2','Parser2.py',118),
  ('tipo -> INT','tipo',1,'p_tipo','Parser2.py',121),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser2.py',122),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser2.py',123),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser2.py',124),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser2.py',125),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser2.py',128),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser2.py',129),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser2.py',130),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser2.py',131),
  ('constante -> TRUE','constante',1,'p_constante','Parser2.py',132),
  ('constante -> FALSE','constante',1,'p_constante','Parser2.py',133),
  ('empty -> <empty>','empty',0,'p_empty','Parser2.py',137),
]
