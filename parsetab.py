
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7EDF987CA51FBE8C833671BC2624A71'
    
_lr_action_items = {'NOTEQUAL':([78,81,82,84,86,87,88,89,90,92,101,124,135,136,],[-71,-69,-70,105,-56,-59,-72,-60,-67,-68,-60,-61,-57,-58,]),'STRING_CTE':([62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[82,-71,82,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,82,82,82,82,-73,82,-60,82,82,82,82,82,82,82,82,82,82,82,82,82,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,82,-33,82,-35,-34,]),'RETURN':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,96,115,141,146,147,153,154,156,158,159,160,161,163,164,165,],[-3,-2,-4,-73,-73,-73,-5,-73,-73,-73,62,-19,62,62,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-73,-29,-73,62,-28,62,-38,-37,-39,-73,62,-40,]),'LESS':([78,81,82,84,85,86,87,88,89,90,92,101,124,127,128,129,130,131,132,135,136,],[-71,-69,-70,-49,112,-56,-59,-72,-60,-67,-68,-60,-61,-51,-50,-52,-54,-53,-55,-57,-58,]),'READ':([98,],[119,]),'VOID':([9,],[17,]),'ELSE':([161,],[162,]),'CHAR':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[13,13,-73,-73,-73,13,-16,13,13,-14,13,-17,-15,]),'LESSEQUAL':([78,81,82,84,86,87,88,89,90,92,101,124,135,136,],[-71,-69,-70,110,-56,-59,-72,-60,-67,-68,-60,-61,-57,-58,]),'WHILE':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,96,115,141,146,147,153,154,156,158,159,160,161,163,164,165,],[-3,-2,-4,-73,-73,-73,-5,-73,-73,-73,63,-19,63,63,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-73,-29,-73,63,-28,63,-38,-37,-39,-73,63,-40,]),'PRINT':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,96,115,141,146,147,153,154,156,158,159,160,161,163,164,165,],[-3,-2,-4,-73,-73,-73,-5,-73,-73,-73,64,-19,64,64,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-73,-29,-73,64,-28,64,-38,-37,-39,-73,64,-40,]),'TRUE':([62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[78,-71,78,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,78,78,78,78,-73,78,-60,78,78,78,78,78,78,78,78,78,78,78,78,78,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,78,-33,78,-35,-34,]),'LEFTSB':([18,31,71,],[22,37,97,]),'LEFTP':([19,20,21,62,63,64,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,119,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[26,27,28,79,94,95,99,100,-71,79,-41,-69,-70,-43,-49,-46,-56,-59,-72,99,-67,-42,-68,79,79,79,79,-73,79,-60,79,79,79,79,79,79,79,79,79,79,79,79,140,79,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,79,-33,79,-35,-34,]),'SEMICOLON':([18,23,25,31,36,38,45,53,57,67,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,120,124,125,126,127,128,129,130,131,132,133,134,135,136,138,143,149,155,],[-73,30,-8,-73,-73,-6,52,-73,-7,96,-71,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,115,-60,141,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,147,-30,156,160,]),'CHAR_CTE':([62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[81,-71,81,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,81,81,81,81,-73,81,-60,81,81,81,81,81,81,81,81,81,81,81,81,81,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,81,-33,81,-35,-34,]),'COMMA':([18,26,27,28,31,32,33,34,35,36,41,48,49,53,78,80,81,82,83,84,85,86,87,88,89,90,91,92,101,124,125,126,127,128,129,130,131,132,133,134,135,136,143,144,],[24,-73,-73,-73,24,42,-16,42,42,24,-14,-17,-15,24,-71,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,-60,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-30,151,]),'LEFTB':([39,43,44,137,145,162,],[47,50,51,146,153,163,]),'IF':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,96,115,141,146,147,153,154,156,158,159,160,161,163,164,165,],[-3,-2,-4,-73,-73,-73,-5,-73,-73,-73,72,-19,72,72,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-73,-29,-73,72,-28,72,-38,-37,-39,-73,72,-40,]),'METHOD':([0,1,3,4,5,7,8,30,52,74,76,77,],[-73,-73,-3,-2,9,-10,-9,-4,-5,-13,-12,-11,]),'$end':([0,1,2,3,4,5,7,8,30,52,74,76,77,],[-73,-73,0,-3,-2,-1,-10,-9,-4,-5,-13,-12,-11,]),'DIVISION':([78,81,82,83,84,85,86,87,88,89,90,92,101,124,127,128,129,130,131,132,133,134,135,136,],[-71,-69,-70,103,-49,-46,-56,-59,-72,-60,-67,-68,-60,-61,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,]),'STRING':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[15,15,-73,-73,-73,15,-16,15,15,-14,15,-17,-15,]),'GREATEREQUAL':([78,81,82,84,86,87,88,89,90,92,101,124,135,136,],[-71,-69,-70,107,-56,-59,-72,-60,-67,-68,-60,-61,-57,-58,]),'EQUALS':([78,81,82,84,86,87,88,89,90,92,101,124,135,136,],[-71,-69,-70,106,-56,-59,-72,-60,-67,-68,-60,-61,-57,-58,]),'GREATERTHAN':([78,81,82,84,86,87,88,89,90,92,101,124,135,136,],[-71,-69,-70,109,-56,-59,-72,-60,-67,-68,-60,-61,-57,-58,]),'VAR':([0,1,3,4,30,47,50,51,52,54,55,56,],[-73,6,-3,-2,-4,-73,-73,-73,-5,6,6,6,]),'FALSE':([62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[88,-71,88,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,88,88,88,88,-73,88,-60,88,88,88,88,88,88,88,88,88,88,88,88,88,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,88,-33,88,-35,-34,]),'TIMES':([78,81,82,83,84,85,86,87,88,89,90,92,101,124,127,128,129,130,131,132,133,134,135,136,],[-71,-69,-70,104,-49,-46,-56,-59,-72,-60,-67,-68,-60,-61,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,]),'ID':([3,4,10,11,12,13,14,15,16,17,24,30,40,47,50,51,52,54,55,56,58,59,60,61,62,65,66,68,69,70,73,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,141,142,143,144,146,147,148,150,151,152,153,154,156,157,158,159,160,161,163,164,165,],[-3,-2,-65,18,-62,-63,-64,-66,19,20,31,-4,48,-73,-73,-73,-5,-73,-73,-73,71,-19,71,71,89,-25,-18,-26,-21,-20,-24,-22,-71,101,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,89,89,-23,89,89,-73,89,-60,101,101,101,101,101,101,101,101,101,101,101,101,-27,89,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-36,-31,-30,-73,-73,-29,89,-33,89,-35,-73,71,-28,-34,71,-38,-37,-39,-73,71,-40,]),'INT_CTE':([22,37,62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[29,46,90,-71,90,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,90,90,90,90,-73,90,-60,90,90,90,90,90,90,90,90,90,90,90,90,90,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,90,-33,90,-35,-34,]),'AND':([78,81,82,86,87,88,89,90,92,101,124,],[-71,-69,-70,113,-59,-72,-60,-67,-68,-60,-61,]),'RIGHTP':([26,27,28,32,33,34,35,41,48,49,78,80,81,82,83,84,85,86,87,88,89,90,91,92,99,101,102,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,142,143,144,150,152,157,],[-73,-73,-73,39,-16,43,44,-14,-17,-15,-71,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,-73,-60,124,137,138,143,-32,145,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,149,-31,-30,-73,-33,-35,-34,]),'RIGHTSB':([29,46,78,80,81,82,83,84,85,86,87,88,89,90,91,92,101,118,124,125,126,127,128,129,130,131,132,133,134,135,136,143,],[36,53,-71,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,-60,139,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-30,]),'INT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[12,12,-73,-73,-73,12,-16,12,12,-14,12,-17,-15,]),'SUM':([78,81,82,84,85,86,87,88,89,90,92,101,124,127,128,129,130,131,132,135,136,],[-71,-69,-70,-49,111,-56,-59,-72,-60,-67,-68,-60,-61,-51,-50,-52,-54,-53,-55,-57,-58,]),'FLOAT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[10,10,-73,-73,-73,10,-16,10,10,-14,10,-17,-15,]),'FLOAT_CTE':([62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,148,150,151,152,157,],[92,-71,92,-41,-69,-70,-43,-49,-46,-56,-59,-72,-60,-67,-42,-68,92,92,92,92,-73,92,-60,92,92,92,92,92,92,92,92,92,92,92,92,92,-32,-61,-45,-44,-51,-50,-52,-54,-53,-55,-47,-48,-57,-58,-31,-30,-73,92,-33,92,-35,-34,]),'LESSTHAN':([78,81,82,84,86,87,88,89,90,92,101,124,135,136,],[-71,-69,-70,108,-56,-59,-72,-60,-67,-68,-60,-61,-57,-58,]),'ASSIGN':([71,139,],[98,148,]),'BOOLEAN':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[14,14,-73,-73,-73,14,-16,14,14,-14,14,-17,-15,]),'RIGHTB':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,96,115,141,146,147,153,154,156,158,159,160,161,163,164,165,],[-3,-2,-4,-73,-73,-73,-5,-73,-73,-73,74,-19,76,77,-25,-18,-26,-21,-20,-24,-22,-23,-27,-36,-73,-29,-73,159,-28,161,-38,-37,-39,-73,165,-40,]),'MAIN':([17,],[21,]),'OR':([78,81,82,86,87,88,89,90,92,101,124,],[-71,-69,-70,114,-59,-72,-60,-67,-68,-60,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constante':([62,79,94,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,114,121,148,151,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'variables':([1,54,55,56,],[4,4,4,4,]),'bloque':([54,55,56,146,153,163,],[58,60,61,154,158,164,]),'ciclo':([58,60,61,154,158,164,],[65,65,65,65,65,65,]),'tipo':([6,9,32,34,35,42,],[11,16,40,40,40,40,]),'llamada_list':([99,],[121,]),'estatuto':([58,60,61,154,158,164,],[66,66,66,66,66,66,]),'llamada':([58,60,61,62,94,95,97,98,100,121,148,151,154,158,164,],[67,67,67,80,80,80,80,80,80,80,80,80,67,67,67,]),'condicion':([58,60,61,154,158,164,],[68,68,68,68,68,68,]),'variables_list':([0,47,50,51,],[1,54,55,56,]),'params':([26,27,28,],[32,34,35,]),'lectura':([58,60,61,154,158,164,],[69,69,69,69,69,69,]),'empty':([0,1,18,26,27,28,31,36,47,50,51,53,54,55,56,99,144,146,153,163,],[3,7,25,33,33,33,25,25,3,3,3,25,59,59,59,122,152,59,59,59,]),'expresion1':([62,79,94,95,97,98,100,103,104,111,112,121,148,151,],[83,83,83,83,83,83,83,83,83,133,134,83,83,83,]),'expresion3':([62,79,94,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,114,121,148,151,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,135,136,84,84,84,]),'expresion2':([62,79,94,95,97,98,100,103,104,105,106,107,108,109,110,111,112,121,148,151,],[85,85,85,85,85,85,85,85,85,127,128,129,130,131,132,85,85,85,85,85,]),'return':([58,60,61,154,158,164,],[70,70,70,70,70,70,]),'expresion4':([62,79,94,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,114,121,148,151,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'parametro':([32,34,35,42,],[41,41,41,49,]),'args':([121,],[142,]),'metodos':([1,],[5,]),'mas_args':([144,],[150,]),'expresion':([62,79,94,95,97,98,100,103,104,121,148,151,],[91,102,91,91,91,91,91,125,126,91,91,91,]),'metodo':([5,],[8,]),'asignacion':([58,60,61,154,158,164,],[73,73,73,73,73,73,]),'programa':([0,],[2,]),'exp':([62,94,95,97,98,100,121,148,151,],[93,116,117,118,120,123,144,155,157,]),'lista_variables':([18,31,36,53,],[23,38,45,57,]),'escritura':([58,60,61,154,158,164,],[75,75,75,75,75,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variables_list metodos','programa',2,'p_programa','Parser.py',157),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',160),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',161),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',164),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',165),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',171),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',172),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',173),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',181),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',182),
  ('metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',201),
  ('metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',202),
  ('metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',203),
  ('params -> params parametro','params',2,'p_params','Parser.py',220),
  ('params -> params COMMA parametro','params',3,'p_params','Parser.py',221),
  ('params -> empty','params',1,'p_params','Parser.py',222),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',226),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',230),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',231),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',234),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',235),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',236),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',237),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',238),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',239),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',240),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',243),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',246),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',249),
  ('llamada -> ID LEFTP llamada_list RIGHTP','llamada',4,'p_llamada','Parser.py',252),
  ('llamada_list -> llamada_list args','llamada_list',2,'p_llamada_list','Parser.py',255),
  ('llamada_list -> empty','llamada_list',1,'p_llamada_list','Parser.py',256),
  ('args -> exp mas_args','args',2,'p_args','Parser.py',259),
  ('mas_args -> COMMA exp','mas_args',2,'p_mas_args','Parser.py',262),
  ('mas_args -> empty','mas_args',1,'p_mas_args','Parser.py',263),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',266),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser.py',267),
  ('ciclo -> WHILE LEFTP exp RIGHTP LEFTB bloque RIGHTB','ciclo',7,'p_ciclo','Parser.py',270),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB','condicion',7,'p_condicion','Parser.py',273),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB ELSE LEFTB bloque RIGHTB','condicion',11,'p_condicion','Parser.py',274),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',277),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',278),
  ('expresion -> expresion1','expresion',1,'p_expresion','Parser.py',281),
  ('expresion -> expresion1 TIMES expresion','expresion',3,'p_expresion','Parser.py',282),
  ('expresion -> expresion1 DIVISION expresion','expresion',3,'p_expresion','Parser.py',283),
  ('expresion1 -> expresion2','expresion1',1,'p_expresion1','Parser.py',286),
  ('expresion1 -> expresion2 SUM expresion1','expresion1',3,'p_expresion1','Parser.py',287),
  ('expresion1 -> expresion2 LESS expresion1','expresion1',3,'p_expresion1','Parser.py',288),
  ('expresion2 -> expresion3','expresion2',1,'p_expresion2','Parser.py',291),
  ('expresion2 -> expresion3 EQUALS expresion2','expresion2',3,'p_expresion2','Parser.py',292),
  ('expresion2 -> expresion3 NOTEQUAL expresion2','expresion2',3,'p_expresion2','Parser.py',293),
  ('expresion2 -> expresion3 GREATEREQUAL expresion2','expresion2',3,'p_expresion2','Parser.py',294),
  ('expresion2 -> expresion3 GREATERTHAN expresion2','expresion2',3,'p_expresion2','Parser.py',295),
  ('expresion2 -> expresion3 LESSTHAN expresion2','expresion2',3,'p_expresion2','Parser.py',296),
  ('expresion2 -> expresion3 LESSEQUAL expresion2','expresion2',3,'p_expresion2','Parser.py',297),
  ('expresion3 -> expresion4','expresion3',1,'p_expresion3','Parser.py',300),
  ('expresion3 -> expresion4 AND expresion3','expresion3',3,'p_expresion3','Parser.py',301),
  ('expresion3 -> expresion4 OR expresion3','expresion3',3,'p_expresion3','Parser.py',302),
  ('expresion4 -> constante','expresion4',1,'p_expresion4','Parser.py',305),
  ('expresion4 -> ID','expresion4',1,'p_expresion4','Parser.py',306),
  ('expresion4 -> LEFTP expresion RIGHTP','expresion4',3,'p_expresion4','Parser.py',307),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',310),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',311),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',312),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',313),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',314),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',324),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',325),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',326),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',327),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',328),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',329),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',333),
]
