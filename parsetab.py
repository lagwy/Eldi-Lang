
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BCC86F560A5FA92CD752A9FA46927CC5'
    
_lr_action_items = {'NOTEQUAL':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,106,-62,-54,106,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,106,106,]),'STRING_CTE':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RETURN':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,138,142,143,147,148,150,151,152,153,154,156,157,158,],[-3,-2,-4,-67,-67,-67,-5,-67,-67,-67,62,-19,62,62,-25,-18,-26,-21,-20,-24,-22,-23,-27,-34,-67,-29,-67,62,-28,62,-36,-35,-37,-67,62,-38,]),'LESS':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,101,-62,-54,101,-55,-42,101,-44,-43,101,-41,101,101,101,101,101,101,]),'READ':([94,],[115,]),'VOID':([9,],[17,]),'ELSE':([154,],[155,]),'CHAR':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[13,13,-67,-67,-67,13,-16,13,13,-14,13,-17,-15,]),'LESSEQUAL':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,107,-62,-54,107,-55,-42,-47,-44,-43,107,-41,-49,107,-50,-48,107,107,]),'WHILE':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,138,142,143,147,148,150,151,152,153,154,156,157,158,],[-3,-2,-4,-67,-67,-67,-5,-67,-67,-67,63,-19,63,63,-25,-18,-26,-21,-20,-24,-22,-23,-27,-34,-67,-29,-67,63,-28,63,-36,-35,-37,-67,63,-38,]),'PRINT':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,138,142,143,147,148,150,151,152,153,154,156,157,158,],[-3,-2,-4,-67,-67,-67,-5,-67,-67,-67,64,-19,64,64,-25,-18,-26,-21,-20,-24,-22,-23,-27,-34,-67,-29,-67,64,-28,64,-36,-35,-37,-67,64,-38,]),'TRUE':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'LEFTSB':([18,31,71,],[22,37,93,]),'LEFTP':([19,20,21,62,63,64,71,72,79,85,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,115,140,144,],[26,27,28,79,90,91,95,96,79,95,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,137,79,79,]),'SEMICOLON':([18,23,25,31,36,38,45,53,57,67,78,80,81,82,83,84,85,86,87,88,89,97,116,121,122,123,124,125,126,127,128,129,130,131,132,133,135,139,145,149,],[-67,30,-8,-67,-67,-6,52,-67,-7,92,-65,-39,-63,-64,-53,-66,-54,-61,-40,-62,111,-54,138,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,-52,-51,143,-30,150,153,]),'CHAR_CTE':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'COMMA':([18,26,27,28,31,32,33,34,35,36,41,48,49,53,78,80,81,82,83,84,85,86,87,88,95,97,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,139,146,],[24,-67,-67,-67,24,42,-16,42,42,24,-14,-17,-15,24,-65,-39,-63,-64,-53,-66,-54,-61,-40,-62,-67,-54,-33,140,-31,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,-52,-51,-30,-32,]),'LEFTB':([39,43,44,134,141,155,],[47,50,51,142,147,156,]),'IF':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,138,142,143,147,148,150,151,152,153,154,156,157,158,],[-3,-2,-4,-67,-67,-67,-5,-67,-67,-67,72,-19,72,72,-25,-18,-26,-21,-20,-24,-22,-23,-27,-34,-67,-29,-67,72,-28,72,-36,-35,-37,-67,72,-38,]),'METHOD':([0,1,3,4,5,7,8,30,52,74,76,77,],[-67,-67,-3,-2,9,-10,-9,-4,-5,-13,-12,-11,]),'$end':([0,1,2,3,4,5,7,8,30,52,74,76,77,],[-67,-67,0,-3,-2,-1,-10,-9,-4,-5,-13,-12,-11,]),'DIVISION':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,99,-62,-54,99,-55,-42,99,99,99,99,-41,99,99,99,99,99,99,]),'STRING':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[15,15,-67,-67,-67,15,-16,15,15,-14,15,-17,-15,]),'GREATEREQUAL':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,100,-62,-54,100,-55,-42,-47,-44,-43,100,-41,-49,100,-50,-48,100,100,]),'EQUALS':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,103,-62,-54,103,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,103,103,]),'GREATERTHAN':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,108,-62,-54,108,-55,-42,-47,-44,-43,108,-41,-49,108,-50,-48,108,108,]),'VAR':([0,1,3,4,30,47,50,51,52,54,55,56,],[-67,6,-3,-2,-4,-67,-67,-67,-5,6,6,6,]),'FALSE':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'TIMES':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,104,-62,-54,104,-55,-42,104,104,104,104,-41,104,104,104,104,104,104,]),'ID':([3,4,10,11,12,13,14,15,16,17,24,30,40,47,50,51,52,54,55,56,58,59,60,61,62,65,66,68,69,70,73,75,79,90,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,138,140,142,143,144,147,148,150,151,152,153,154,156,157,158,],[-3,-2,-59,18,-56,-57,-58,-60,19,20,31,-4,48,-67,-67,-67,-5,-67,-67,-67,71,-19,71,71,85,-25,-18,-26,-21,-20,-24,-22,97,85,85,-23,85,85,85,85,97,97,97,97,97,97,97,97,97,97,97,97,-27,-34,85,-67,-29,85,-67,71,-28,71,-36,-35,-37,-67,71,-38,]),'INT_CTE':([22,37,62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[29,46,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'AND':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,110,-62,-54,110,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,-52,-51,]),'RIGHTP':([26,27,28,32,33,34,35,41,48,49,78,80,81,82,83,84,85,86,87,88,95,97,98,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,139,146,],[-67,-67,-67,39,-16,43,44,-14,-17,-15,-65,-39,-63,-64,-53,-66,-54,-61,-40,-62,-67,-54,121,134,135,-33,139,-31,141,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,-52,-51,145,-30,-32,]),'RIGHTSB':([29,46,78,80,81,82,83,84,85,86,87,88,97,114,121,122,123,124,125,126,127,128,129,130,131,132,133,139,],[36,53,-65,-39,-63,-64,-53,-66,-54,-61,-40,-62,-54,136,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,-52,-51,-30,]),'INT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[12,12,-67,-67,-67,12,-16,12,12,-14,12,-17,-15,]),'SUM':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,102,-62,-54,102,-55,-42,102,-44,-43,102,-41,102,102,102,102,102,102,]),'FLOAT':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[10,10,-67,-67,-67,10,-16,10,10,-14,10,-17,-15,]),'FLOAT_CTE':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'LESSTHAN':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,105,-62,-54,105,-55,-42,-47,-44,-43,105,-41,-49,105,-50,-48,105,105,]),'ASSIGN':([71,136,],[94,144,]),'BOOLEAN':([6,9,26,27,28,32,33,34,35,41,42,48,49,],[14,14,-67,-67,-67,14,-16,14,14,-14,14,-17,-15,]),'RIGHTB':([3,4,30,47,50,51,52,54,55,56,58,59,60,61,65,66,68,69,70,73,75,92,111,138,142,143,147,148,150,151,152,153,154,156,157,158,],[-3,-2,-4,-67,-67,-67,-5,-67,-67,-67,74,-19,76,77,-25,-18,-26,-21,-20,-24,-22,-23,-27,-34,-67,-29,-67,152,-28,154,-36,-35,-37,-67,158,-38,]),'MAIN':([17,],[21,]),'OR':([78,81,82,83,84,85,86,87,88,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,],[-65,-63,-64,-53,-66,-54,-61,109,-62,-54,109,-55,-42,-47,-44,-43,-45,-41,-49,-46,-50,-48,-52,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constante':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'variables':([1,54,55,56,],[4,4,4,4,]),'bloque':([54,55,56,142,147,156,],[58,60,61,148,151,157,]),'ciclo':([58,60,61,148,151,157,],[65,65,65,65,65,65,]),'tipo':([6,9,32,34,35,42,],[11,16,40,40,40,40,]),'estatuto':([58,60,61,148,151,157,],[66,66,66,66,66,66,]),'llamada':([58,60,61,62,90,91,93,94,95,96,140,144,148,151,157,],[67,67,67,80,80,80,80,80,80,80,80,80,67,67,67,]),'condicion':([58,60,61,148,151,157,],[68,68,68,68,68,68,]),'variables_list':([0,47,50,51,],[1,54,55,56,]),'params':([26,27,28,],[32,34,35,]),'lectura':([58,60,61,148,151,157,],[69,69,69,69,69,69,]),'empty':([0,1,18,26,27,28,31,36,47,50,51,53,54,55,56,95,142,147,156,],[3,7,25,33,33,33,25,25,3,3,3,25,59,59,59,117,59,59,59,]),'return':([58,60,61,148,151,157,],[70,70,70,70,70,70,]),'parametro':([32,34,35,42,],[41,41,41,49,]),'args':([95,],[118,]),'metodos':([1,],[5,]),'expresion':([62,79,90,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,140,144,],[87,98,87,87,87,87,87,87,122,123,124,125,126,127,128,129,130,131,132,133,87,87,]),'metodo':([5,],[8,]),'asignacion':([58,60,61,148,151,157,],[73,73,73,73,73,73,]),'programa':([0,],[2,]),'exp':([62,90,91,93,94,95,96,140,144,],[89,112,113,114,116,119,120,146,149,]),'lista_variables':([18,31,36,53,],[23,38,45,57,]),'escritura':([58,60,61,148,151,157,],[75,75,75,75,75,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> variables_list metodos','programa',2,'p_programa','Parser.py',294),
  ('variables_list -> variables_list variables','variables_list',2,'p_variables_list','Parser.py',315),
  ('variables_list -> empty','variables_list',1,'p_variables_list','Parser.py',316),
  ('variables -> VAR tipo ID lista_variables SEMICOLON','variables',5,'p_variables','Parser.py',327),
  ('variables -> VAR tipo ID LEFTSB INT_CTE RIGHTSB lista_variables SEMICOLON','variables',8,'p_variables','Parser.py',328),
  ('lista_variables -> COMMA ID lista_variables','lista_variables',3,'p_lista_variables','Parser.py',346),
  ('lista_variables -> COMMA ID LEFTSB INT_CTE RIGHTSB lista_variables','lista_variables',6,'p_lista_variables','Parser.py',347),
  ('lista_variables -> empty','lista_variables',1,'p_lista_variables','Parser.py',348),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','Parser.py',360),
  ('metodos -> empty','metodos',1,'p_metodos','Parser.py',361),
  ('metodo -> METHOD VOID MAIN LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',372),
  ('metodo -> METHOD VOID ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',373),
  ('metodo -> METHOD tipo ID LEFTP params RIGHTP LEFTB variables_list bloque RIGHTB','metodo',10,'p_metodo','Parser.py',374),
  ('params -> params parametro','params',2,'p_params','Parser.py',420),
  ('params -> params COMMA parametro','params',3,'p_params','Parser.py',421),
  ('params -> empty','params',1,'p_params','Parser.py',422),
  ('parametro -> tipo ID','parametro',2,'p_parametro','Parser.py',438),
  ('bloque -> bloque estatuto','bloque',2,'p_bloque','Parser.py',445),
  ('bloque -> empty','bloque',1,'p_bloque','Parser.py',446),
  ('estatuto -> return','estatuto',1,'p_estatuto','Parser.py',449),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Parser.py',450),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Parser.py',451),
  ('estatuto -> llamada SEMICOLON','estatuto',2,'p_estatuto','Parser.py',452),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Parser.py',453),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','Parser.py',454),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Parser.py',455),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','Parser.py',458),
  ('lectura -> ID ASSIGN READ LEFTP RIGHTP SEMICOLON','lectura',6,'p_lectura','Parser.py',461),
  ('escritura -> PRINT LEFTP exp RIGHTP SEMICOLON','escritura',5,'p_escritura','Parser.py',464),
  ('llamada -> ID LEFTP args RIGHTP','llamada',4,'p_llamada','Parser.py',467),
  ('args -> exp','args',1,'p_args','Parser.py',485),
  ('args -> args COMMA exp','args',3,'p_args','Parser.py',486),
  ('args -> empty','args',1,'p_args','Parser.py',487),
  ('asignacion -> ID ASSIGN exp SEMICOLON','asignacion',4,'p_asignacion','Parser.py',495),
  ('asignacion -> ID LEFTSB exp RIGHTSB ASSIGN exp SEMICOLON','asignacion',7,'p_asignacion','Parser.py',496),
  ('ciclo -> WHILE LEFTP exp RIGHTP LEFTB bloque RIGHTB','ciclo',7,'p_ciclo','Parser.py',501),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB','condicion',7,'p_condicion','Parser.py',504),
  ('condicion -> IF LEFTP exp RIGHTP LEFTB bloque RIGHTB ELSE LEFTB bloque RIGHTB','condicion',11,'p_condicion','Parser.py',505),
  ('exp -> llamada','exp',1,'p_exp','Parser.py',508),
  ('exp -> expresion','exp',1,'p_exp','Parser.py',509),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','Parser.py',514),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser.py',515),
  ('expresion -> expresion SUM expresion','expresion',3,'p_expresion','Parser.py',516),
  ('expresion -> expresion LESS expresion','expresion',3,'p_expresion','Parser.py',517),
  ('expresion -> expresion EQUALS expresion','expresion',3,'p_expresion','Parser.py',518),
  ('expresion -> expresion NOTEQUAL expresion','expresion',3,'p_expresion','Parser.py',519),
  ('expresion -> expresion GREATEREQUAL expresion','expresion',3,'p_expresion','Parser.py',520),
  ('expresion -> expresion GREATERTHAN expresion','expresion',3,'p_expresion','Parser.py',521),
  ('expresion -> expresion LESSTHAN expresion','expresion',3,'p_expresion','Parser.py',522),
  ('expresion -> expresion LESSEQUAL expresion','expresion',3,'p_expresion','Parser.py',523),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser.py',524),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser.py',525),
  ('expresion -> constante','expresion',1,'p_expresion2','Parser.py',555),
  ('expresion -> ID','expresion',1,'p_expresion2','Parser.py',556),
  ('expresion -> LEFTP expresion RIGHTP','expresion',3,'p_expresion2','Parser.py',557),
  ('tipo -> INT','tipo',1,'p_tipo','Parser.py',565),
  ('tipo -> CHAR','tipo',1,'p_tipo','Parser.py',566),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','Parser.py',567),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Parser.py',568),
  ('tipo -> STRING','tipo',1,'p_tipo','Parser.py',569),
  ('constante -> INT_CTE','constante',1,'p_constante','Parser.py',573),
  ('constante -> FLOAT_CTE','constante',1,'p_constante','Parser.py',574),
  ('constante -> CHAR_CTE','constante',1,'p_constante','Parser.py',575),
  ('constante -> STRING_CTE','constante',1,'p_constante','Parser.py',576),
  ('constante -> TRUE','constante',1,'p_constante','Parser.py',577),
  ('constante -> FALSE','constante',1,'p_constante','Parser.py',578),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',583),
]
